{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/moment/locale/fr.js","node_modules/moment/moment.js","src/chrono.ts","src/constants.ts","src/options.ts","src/parsers/DE/DECasualDateParser.ts","src/parsers/DE/DEDeadlineFormatParser.ts","src/parsers/DE/DEMonthNameLittleEndianParser.ts","src/parsers/DE/DEMonthNameParser.ts","src/parsers/DE/DESlashDateFormatParser.ts","src/parsers/DE/DETimeAgoFormatParser.ts","src/parsers/DE/DETimeExpressionParser.ts","src/parsers/DE/DEWeekdayParser.ts","src/parsers/EN/ENCasualDateParser.ts","src/parsers/EN/ENCasualTimeParser.ts","src/parsers/EN/ENDeadlineFormatParser.ts","src/parsers/EN/ENISOFormatParser.ts","src/parsers/EN/ENMonthNameLittleEndianParser.ts","src/parsers/EN/ENMonthNameMiddleEndianParser.ts","src/parsers/EN/ENMonthNameParser.ts","src/parsers/EN/ENRelativeDateFormatParser.ts","src/parsers/EN/ENSlashDateFormatParser.ts","src/parsers/EN/ENSlashDateFormatStartWithYearParser.ts","src/parsers/EN/ENSlashMonthFormatParser.ts","src/parsers/EN/ENTimeAgoFormatParser.ts","src/parsers/EN/ENTimeExpressionParser.ts","src/parsers/EN/ENTimeLaterFormatParser.ts","src/parsers/EN/ENWeekdayParser.ts","src/parsers/ES/ESCasualDateParser.ts","src/parsers/ES/ESDeadlineFormatParser.ts","src/parsers/ES/ESMonthNameLittleEndianParser.ts","src/parsers/ES/ESSlashDateFormatParser.ts","src/parsers/ES/ESTimeAgoFormatParser.ts","src/parsers/ES/ESTimeExpressionParser.ts","src/parsers/ES/ESWeekdayParser.ts","src/parsers/FR/FRCasualDateParser.ts","src/parsers/FR/FRDeadlineFormatParser.ts","src/parsers/FR/FRMonthNameLittleEndianParser.ts","src/parsers/FR/FRRelativeDateFormatParser.ts","src/parsers/FR/FRSlashDateFormatParser.ts","src/parsers/FR/FRTimeAgoFormatParser.ts","src/parsers/FR/FRTimeExpressionParser.ts","src/parsers/FR/FRWeekdayParser.ts","src/parsers/JP/JPCasualDateParser.ts","src/parsers/JP/JPStandardParser.ts","src/parsers/ZH-Hant/ZHHantCasualDateParser.ts","src/parsers/ZH-Hant/ZHHantDateParser.ts","src/parsers/ZH-Hant/ZHHantDeadlineFormatParser.ts","src/parsers/ZH-Hant/ZHHantTimeExpressionParser.ts","src/parsers/ZH-Hant/ZHHantWeekdayParser.ts","src/parsers/parser.ts","src/refiners/DE/DEMergeDateRangeRefiner.ts","src/refiners/DE/DEMergeDateTimeRefiner.ts","src/refiners/EN/ENMergeDateRangeRefiner.ts","src/refiners/EN/ENMergeDateTimeRefiner.ts","src/refiners/EN/ENPrioritizeSpecificDateRefiner.ts","src/refiners/ExtractTimezoneAbbrRefiner.ts","src/refiners/ExtractTimezoneOffsetRefiner.ts","src/refiners/FR/FRMergeDateRangeRefiner.ts","src/refiners/FR/FRMergeDateTimeRefiner.ts","src/refiners/ForwardDateRefiner.ts","src/refiners/JP/JPMergeDateRangeRefiner.ts","src/refiners/OverlapRemovalRefiner.ts","src/refiners/UnlikelyFormatFilter.ts","src/refiners/refiner.ts","src/result.ts","src/utils/DE.ts","src/utils/EN.ts","src/utils/ES.ts","src/utils/FR.ts","src/utils/JP.ts","src/utils/ZH-Hant.ts","src/utils/general.ts"],"names":["global","factory","exports","module","require","define","amd","moment","this","defineLocale","months","split","monthsShort","monthsParseExact","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","number","period","week","dow","doy","hooks","hookCallback","apply","arguments","isArray","input","Array","Object","prototype","toString","call","isObject","isObjectEmpty","obj","getOwnPropertyNames","length","k","hasOwnProperty","isUndefined","isNumber","isDate","Date","map","arr","fn","i","res","push","hasOwnProp","a","b","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","_pf","isValid","_isValid","flags","parsedParts","some","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","absFloor","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","value","isFinite","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","args","key","slice","join","Error","stack","deprecateSimple","name","deprecations","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","RegExp","_dayOfMonthOrdinalParse","source","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","mom","now","output","_calendar","_longDateFormat","formatUpper","toUpperCase","replace","invalidDate","_invalidDate","_ordinal","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","u","sort","zeroFill","targetLength","forceSign","absNumber","zerosToFill","pow","max","substr","addFormatToken","token","padded","callback","func","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","test","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInYear","year","isLeapYear","getIsLeapYear","makeGetSet","keepTime","set$1","get","month","date","daysInMonth","stringGet","stringSet","prioritized","mod","n","x","modMonth","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","indexOf","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","createDate","ms","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","fwd","getUTCDay","dayOfYearFromWeeks","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","add","getSetISOWeek","parseWeekday","weekdaysParse","parseInt","parseIsoWeekday","localeWeekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","normalizeLocale","chooseLocale","names","j","next","loadLocale","oldLocale","locales","globalLocale","_abbr","getSetGlobalLocale","e","values","data","getLocale","baseConfig","abbr","parentLocale","localeFamilies","forEach","updateLocale","tmpLocale","listLocales","keys","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","defaults","c","currentDateArray","nowValue","_useUTC","getUTCMonth","getUTCDate","getMonth","getDate","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","exec","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","defaultLocaleMonthsShort","preprocessRFC2822","trim","checkWeekday","weekdayStr","parsedInput","defaultLocaleWeekdaysShort","calculateOffset","obsOffset","militaryOffset","numOffset","obsOffsets","hm","configFromRFC2822","parsedArray","configFromString","aspNetJsonRegex","createFromInputFallback","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","isDurationValid","ordering","unitHasDecimal","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","days","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","sign","offsetFromString","matcher","matches","chunk","parts","chunkOffset","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","matchShortOffset","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","dur","tmp","isAdding","getCalendarFormat","myMoment","calendar$1","time","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","keepOffset","toDate","inspect","zone","prefix","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","isoWeekday","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","clone$1","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","withSuffix","toISOString$1","abs$1","Y","D","toFixed","total","asSeconds","totalSign","ymSign","daysSign","hmsSign","fun","t","defaultCalendar","defaultLongDateFormat","defaultDayOfMonthOrdinalParse","defaultRelativeTime","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","parseTwoDigitYear","getSetYear","o","defaultLocaleMonths","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysMin","kInput","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","meridiemParse","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","prototypeMin","prototypeMax","invalid","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","options","options_1","parser_1","Parser","default","parser","refiner_1","Refiner","refiner","refiner_2","Filter","result_1","ParsedResult","ParsedComponents","DEFAULT_PARSE_OPTIONS","forwardDate","afternoon","evening","morning","noon","Chrono","option","casualOption","parsers","refiners","text","refDate","opt","mergedOptions","assign","allResults","_allResults","_toConsumableArray","execute","refine","results","parse","start","strictOption","casual","en","mergeOptions","commonPostProcessing","en_GB","de","es","fr","ja","ref","parseDate","MERIDIEM","DAY","TIMEZONE_OFFSET","isResolver","addedTypes","mergedOption","maybeOption","constructor","ExtractTimezoneOffsetRefiner","ExtractTimezoneAbbrRefiner","UnlikelyFormatFilter","strictConfig","zh","DEDeadlineFormatParser","DEMonthNameLittleEndianParser","DEMonthNameParser","DESlashDateFormatParser","DETimeAgoFormatParser","DETimeExpressionParser","OverlapRemovalRefiner","ForwardDateRefiner","DEMergeDateTimeRefiner","DEMergeDateRangeRefiner","unshift","DECasualDateParser","DEWeekdayParser","ENISOFormatParser","ENDeadlineFormatParser","ENMonthNameLittleEndianParser","ENMonthNameMiddleEndianParser","ENMonthNameParser","ENSlashDateFormatParser","ENSlashDateFormatStartWithYearParser","ENSlashMonthFormatParser","ENTimeAgoFormatParser","ENTimeLaterFormatParser","ENTimeExpressionParser","ENMergeDateTimeRefiner","ENMergeDateRangeRefiner","ENPrioritizeSpecificDateRefiner","ENCasualDateParser","ENCasualTimeParser","ENWeekdayParser","ENRelativeDateFormatParser","littleEndian","JPStandardParser","JPMergeDateRangeRefiner","JPCasualDateParser","ESTimeAgoFormatParser","ESDeadlineFormatParser","ESTimeExpressionParser","ESMonthNameLittleEndianParser","ESSlashDateFormatParser","ESCasualDateParser","ESWeekdayParser","FRDeadlineFormatParser","FRMonthNameLittleEndianParser","FRSlashDateFormatParser","FRTimeAgoFormatParser","FRTimeExpressionParser","FRMergeDateRangeRefiner","FRMergeDateTimeRefiner","FRCasualDateParser","FRWeekdayParser","FRRelativeDateFormatParser","ZHHantDateParser","ZHHantWeekdayParser","ZHHantTimeExpressionParser","ZHHantCasualDateParser","ZHHantDeadlineFormatParser","constants_1","_parser_1$default","_this","PATTERN","OTHER_PATTERNS","TAG","matchedText","refMoment","startMoment","imply","secondMatch","tags","DE_1","general_1","INTEGER_WORDS_PATTERN","STRICT_PATTERN","isStrictMode","num","matchInteger","matchedUnit","matchUnit","deadlineCalculations","WEEKDAY_GROUP","DATE_GROUP","DATE_TO_GROUP","MONTH_NAME_GROUP","YEAR_GROUP","YEAR_BE_GROUP","MONTH_OFFSET","yearCalculation","getAppropriateYear","WEEKDAY_OFFSET","end","YEAR_GROUP2","YEAR_BE_GROUP2","OPENING_GROUP","DAY_GROUP","MONTH_GROUP","ENDING_GROUP","MODE","momentRef","mode","NONE","END_PATTERN","HOUR_GROUP","MINUTE_GROUP","SECOND_GROUP","AM_PM_HOUR_GROUP","substring","extractFirstChunk","extractSecondChunk","_time","ampm","_time2","isCertain","PREFIX_GROUP","POSTFIX_GROUP","postfix","refOffset","norm","calcOffset","absOffset","TIME_MATCH","TIME_MATCH_ALT","EN_1","NUM_MATCH","UNIT_MATCH","YEAR_NUMBER_GROUP","MONTH_NUMBER_GROUP","DATE_NUMBER_GROUP","HOUR_NUMBER_GROUP","MINUTE_NUMBER_GROUP","SECOND_NUMBER_GROUP","MILLISECOND_NUMBER_GROUP","TZD_HOUR_OFFSET_GROUP","TZD_MINUTE_OFFSET_GROUP","minuteOffset","hourOffset","ORDINAL_WORDS_PATTERN","DATE_NUM_GROUP","DATE_TO_NUM_GROUP","ORDINAL_WORDS","endDate","MODIFIER_WORD_GROUP","MULTIPLIER_WORD_GROUP","RELATIVE_WORD_GROUP","matchedMultiplier","matchedModifier","modifier","timeMode","FIRST_NUMBERS_GROUP","SECOND_NUMBERS_GROUP","checkMonthDaysValid","_ref","TIME_UNIT_PATTERN","TIME_UNIT_STRICT_PATTERN","fragments","extractDateTimeUnitFragments","fragment","MILLI_SECOND_GROUP","Modifier","UNKNOWN","THIS","LAST","NEXT","updateParsedComponent","firstMatch","_secondMatch","ES_1","matchNumber","Mode","FR_1","originalLocale","ignored","MULTIPLIER_GROUP","MODIFIER_1_GROUP","MODIFIER_2_GROUP","modifierFactor","dateFrom","dateTo","JP_1","ERA_GROUP","toHankaku","matchedYear","NOW_GROUP","DAY_GROUP_1","TIME_GROUP_1","TIME_GROUP_2","DAY_GROUP_3","TIME_GROUP_3","day1","time1","timeString2","time2","day3","timeString3","time3","ZH_Hant_1","NUMBER","matchedMonth","matchedDay","zhStringToNumber","zhStringToYear","NUMBER_GROUP","UNIT_GROUP","matchedNumber","unitAbbr","dateMode","ZH_AM_PM_HOUR_GROUP_1","ZH_AM_PM_HOUR_GROUP_2","ZH_AM_PM_HOUR_GROUP_3","endMoment","gotMeridiem","getMeridiem","_gotMeridiem","_gotMeridiem2","current","targetMoment","_ampm","_ampm2","_ampm3","strictMode","pattern","remainingText","extract","hasPossibleDates","ENISOFormatParser_1","ENDeadlineFormatParser_1","ENRelativeDateFormatParser_1","ENMonthNameLittleEndianParser_1","ENMonthNameMiddleEndianParser_1","ENMonthNameParser_1","ENSlashDateFormatParser_1","ENSlashDateFormatStartWithYearParser_1","ENSlashMonthFormatParser_1","ENTimeAgoFormatParser_1","ENTimeExpressionParser_1","ENTimeLaterFormatParser_1","ENWeekdayParser_1","ENCasualDateParser_1","ENCasualTimeParser_1","JPStandardParser_1","JPCasualDateParser_1","ESCasualDateParser_1","ESDeadlineFormatParser_1","ESTimeAgoFormatParser_1","ESTimeExpressionParser_1","ESWeekdayParser_1","ESMonthNameLittleEndianParser_1","ESSlashDateFormatParser_1","FRCasualDateParser_1","FRDeadlineFormatParser_1","FRMonthNameLittleEndianParser_1","FRSlashDateFormatParser_1","FRTimeAgoFormatParser_1","FRTimeExpressionParser_1","FRWeekdayParser_1","FRRelativeDateFormatParser_1","ZHHantDateParser_1","ZHHantWeekdayParser_1","ZHHantTimeExpressionParser_1","ZHHantCasualDateParser_1","ZHHantDeadlineFormatParser_1","DEDeadlineFormatParser_1","DEMonthNameLittleEndianParser_1","DEMonthNameParser_1","DESlashDateFormatParser_1","DETimeAgoFormatParser_1","DETimeExpressionParser_1","DEWeekdayParser_1","DECasualDateParser_1","ENMergeDateRangeRefiner_1","_ENMergeDateRangeRefi","MergeDateRangeRefiner","ENMergeDateTimeRefiner_1","_ENMergeDateTimeRefin","MergeDateTimeRefiner","_refiner_1$default","mergedResult","currResult","prevResult","isAbleToMerge","mergeResult","result1","result2","fromResult","toResult","isWeekdayResult","mergeValues","fromMoment","toMoment","tag","startIndex","endIndex","knownValues","_MergeDateRangeRefine","_this2","isDateOnly","isTimeOnly","dateResult","timeResult","beginDate","beginTime","beginDateTime","mergeDateTimeValues","endTime","endDateTime","dateComponent","timeComponent","dateTimeComponent","_MergeDateTimeRefiner","isMoreSpecific","textBetween","includesRelativeResult","referToSameDate","specificResult","nonSpecificResult","TIMEZONE_NAME_PATTERN","TIMEZONE_ABBR_MAP","ACDT","ACST","ADT","AEDT","AEST","AFT","AKDT","AKST","ALMT","AMST","AMT","ANAST","ANAT","AQTT","ART","AST","AWDT","AWST","AZOST","AZOT","AZST","AZT","BNT","BOT","BRST","BRT","BST","BTT","CAST","CAT","CCT","CEST","CET","CHADT","CHAST","CKT","CLST","CLT","COT","CVT","CXT","ChST","DAVT","EASST","EAST","EAT","ECT","EEST","EET","EGST","EGT","ET","FJST","FJT","FKST","FKT","FNT","GALT","GAMT","GET","GFT","GILT","GST","GYT","HAA","HAC","HADT","HAE","HAP","HAR","HAST","HAT","HAY","HKT","HLV","HNA","HNC","HNE","HNP","HNR","HNT","HNY","HOVT","ICT","IDT","IOT","IRDT","IRKST","IRKT","IRST","IST","JST","KGT","KRAST","KRAT","KST","KUYT","LHDT","LHST","LINT","MAGST","MAGT","MART","MAWT","MESZ","MEZ","MHT","MMT","MSD","MSK","MUT","MVT","MYT","NCT","NDT","NFT","NOVST","NOVT","NPT","NST","NUT","NZDT","NZST","OMSST","OMST","PET","PETST","PETT","PGT","PHOT","PHT","PKT","PMDT","PMST","PONT","PT","PWT","PYST","PYT","RET","SAMT","SAST","SBT","SCT","SGT","SRT","SST","TAHT","TFT","TJT","TKT","TLT","TMT","TVT","ULAT","UYST","UYT","UZT","VET","VLAST","VLAT","VUT","WAST","WAT","WEST","WESZ","WET","WEZ","WFT","WGST","WGT","WIB","WIT","WITA","WST","WT","YAKST","YAKT","YAPT","YEKST","YEKT","timezoneAbbr","timezoneOffset","TIMEZONE_OFFSET_PATTERN","TIMEZONE_OFFSET_SIGN_GROUP","TIMEZONE_OFFSET_HOUR_OFFSET_GROUP","TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP","JPMergeDateTimeRefiner","filteredResults","_refiner_1$Filter","REGEX","_Refiner","filter","OverlapRemovalRefiner_1","ExtractTimezoneOffsetRefiner_1","ExtractTimezoneAbbrRefiner_1","ForwardDateRefiner_1","UnlikelyFormatFilter_1","ENPrioritizeSpecificDateRefiner_1","JPMergeDateRangeRefiner_1","FRMergeDateRangeRefiner_1","FRMergeDateTimeRefiner_1","DEMergeDateRangeRefiner_1","DEMergeDateTimeRefiner_1","_moment","isPossibleDate","components","impliedValues","component","defaultReturn","dateMoment","currentTimezoneOffset","targetTimezoneOffset","adjustTimezoneOffset","sonntag","so","montag","mo","dienstag","di","mittwoch","mi","donnerstag","do","freitag","samstag","sa","januar","jan","jan.","februar","feb","feb.","märz","maerz","mär","mär.","mrz","mrz.","april","apr","apr.","mai","juni","jun","jun.","juli","jul","jul.","august","aug","aug.","september","sep","sep.","sept","sept.","oktober","okt","okt.","november","nov","nov.","dezember","dez","dez.","INTEGER_WORDS","eins","zwei","drei","vier","fünf","fuenf","sechs","sieben","acht","neun","zehn","elf","zwölf","zwoelf","V_REGEX","yearBe","HALF_REGEX","unitPatterns","find","collectDateTimeFragment","sunday","sun","monday","mon","tuesday","tue","wednesday","wed","thursday","thur","thurs","thu","friday","fri","saturday","sat","january","february","march","mar","mar.","may","june","july","october","oct","oct.","december","dec","dec.","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","first","third","fourth","fifth","sixth","seventh","eighth","ninth","tenth","eleventh","twelfth","thirteenth","fourteenth","fifteenth","sixteenth","seventeenth","eighteenth","nineteenth","twentieth","twenty first","twenty second","twenty third","twenty fourth","twenty fifth","twenty sixth","twenty seventh","twenty eighth","twenty ninth","thirtieth","thirty first","TIME_UNIT","TIME_UNIT_STRICT","PATTERN_TIME_UNIT","timeunitText","FEW_REGEX","BE_REGEX","BC_REGEX","AD_REGEX","maybeYearBe","domingo","dom","lunes","lun","martes","miércoles","miercoles","mie","jueves","jue","viernes","vie","sábado","sabado","sab","enero","ene","ene.","febrero","marzo","abril","abr","abr.","mayo","may.","junio","julio","agosto","ago","ago.","septiembre","octubre","noviembre","diciembre","dic","dic.","dimanche","dim","lundi","mardi","mercredi","mer","jeudi","jeu","vendredi","ven","samedi","sam","janvier","février","fév","fév.","fevrier","fev","fev.","mars","avril","avr","avr.","juin","juil","juillet","août","aout","septembre","octobre","novembre","décembre","decembre","un","deux","trois","quatre","cinq","huit","neuf","dix","onze","douze","treize","THREE_REGEX","String","fromCharCode","alphaNum","charCodeAt","toZenkaku","零","一","二","兩","三","四","五","六","七","八","九","十","廿","卅","天","日","char","refMomentClone","nextYear","lastYear","DeadlineMode","startMomentFixed"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","//! moment.js locale configuration\n//! locale : French [fr]\n//! author : John Fischer : https://github.com/jfroffice\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar fr = moment.defineLocale('fr', {\n    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n    weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay : '[Aujourd’hui à] LT',\n        nextDay : '[Demain à] LT',\n        nextWeek : 'dddd [à] LT',\n        lastDay : '[Hier à] LT',\n        lastWeek : 'dddd [dernier à] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'dans %s',\n        past : 'il y a %s',\n        s : 'quelques secondes',\n        ss : '%d secondes',\n        m : 'une minute',\n        mm : '%d minutes',\n        h : 'une heure',\n        hh : '%d heures',\n        d : 'un jour',\n        dd : '%d jours',\n        M : 'un mois',\n        MM : '%d mois',\n        y : 'un an',\n        yy : '%d ans'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n    ordinal : function (number, period) {\n        switch (period) {\n            // TODO: Return 'e' when day of month > 1. Move this case inside\n            // block for masculine words below.\n            // See https://github.com/moment/moment/issues/3375\n            case 'D':\n                return number + (number === 1 ? 'er' : '');\n\n            // Words with masculine grammatical gender: mois, trimestre, jour\n            default:\n            case 'M':\n            case 'Q':\n            case 'DDD':\n            case 'd':\n                return number + (number === 1 ? 'er' : 'e');\n\n            // Words with feminine grammatical gender: semaine\n            case 'w':\n            case 'W':\n                return number + (number === 1 ? 're' : 'e');\n        }\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn fr;\n\n})));\n","//! moment.js\n//! version : 2.20.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\nvar hookCallback;\n\nfunction hooks () {\n    return hookCallback.apply(null, arguments);\n}\n\n// This is done to register the method called with moment()\n// without creating circular dependencies.\nfunction setHookCallback (callback) {\n    hookCallback = callback;\n}\n\nfunction isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n        return (Object.getOwnPropertyNames(obj).length === 0);\n    } else {\n        var k;\n        for (k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nfunction isUndefined(input) {\n    return input === void 0;\n}\n\nfunction isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n}\n\nfunction isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n}\n\nfunction map(arr, fn) {\n    var res = [], i;\n    for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n    }\n    return res;\n}\n\nfunction hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction extend(a, b) {\n    for (var i in b) {\n        if (hasOwnProp(b, i)) {\n            a[i] = b[i];\n        }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n    }\n\n    return a;\n}\n\nfunction createUTC (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false,\n        parsedDateParts : [],\n        meridiem        : null,\n        rfc2822         : false,\n        weekdayMismatch : false\n    };\n}\n\nfunction getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n\nvar some;\nif (Array.prototype.some) {\n    some = Array.prototype.some;\n} else {\n    some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n            if (i in t && fun.call(this, t[i], i, t)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nfunction isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.weekdayMismatch &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nfunction createInvalid (flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    }\n    else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = hooks.momentProperties = [];\n\nfunction copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i = 0; i < momentProperties.length; i++) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n        this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nfunction isMoment (obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n}\n\nfunction absFloor (number) {\n    if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n    } else {\n        return Math.floor(number);\n    }\n}\n\nfunction toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n\n    return value;\n}\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i]) ||\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\nfunction warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false &&\n            (typeof console !==  'undefined') && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n    }\n}\n\nfunction deprecate(msg, fn) {\n    var firstTime = true;\n\n    return extend(function () {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(null, msg);\n        }\n        if (firstTime) {\n            var args = [];\n            var arg;\n            for (var i = 0; i < arguments.length; i++) {\n                arg = '';\n                if (typeof arguments[i] === 'object') {\n                    arg += '\\n[' + i + '] ';\n                    for (var key in arguments[0]) {\n                        arg += key + ': ' + arguments[0][key] + ', ';\n                    }\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\n                } else {\n                    arg = arguments[i];\n                }\n                args.push(arg);\n            }\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n            firstTime = false;\n        }\n        return fn.apply(this, arguments);\n    }, fn);\n}\n\nvar deprecations = {};\n\nfunction deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n    }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nfunction isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\nfunction set (config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (isFunction(prop)) {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n            '|' + (/\\d{1,2}/).source);\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig), prop;\n    for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) {\n                res[prop] = childConfig[prop];\n            } else {\n                delete res[prop];\n            }\n        }\n    }\n    for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])) {\n            // make sure changes to properties don't modify parent config\n            res[prop] = extend({}, res[prop]);\n        }\n    }\n    return res;\n}\n\nfunction Locale(config) {\n    if (config != null) {\n        this.set(config);\n    }\n}\n\nvar keys;\n\nif (Object.keys) {\n    keys = Object.keys;\n} else {\n    keys = function (obj) {\n        var i, res = [];\n        for (i in obj) {\n            if (hasOwnProp(obj, i)) {\n                res.push(i);\n            }\n        }\n        return res;\n    };\n}\n\nvar defaultCalendar = {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n};\n\nfunction calendar (key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n}\n\nvar defaultLongDateFormat = {\n    LTS  : 'h:mm:ss A',\n    LT   : 'h:mm A',\n    L    : 'MM/DD/YYYY',\n    LL   : 'MMMM D, YYYY',\n    LLL  : 'MMMM D, YYYY h:mm A',\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n};\n\nfunction longDateFormat (key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n}\n\nvar defaultInvalidDate = 'Invalid date';\n\nfunction invalidDate () {\n    return this._invalidDate;\n}\n\nvar defaultOrdinal = '%d';\nvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nfunction ordinal (number) {\n    return this._ordinal.replace('%d', number);\n}\n\nvar defaultRelativeTime = {\n    future : 'in %s',\n    past   : '%s ago',\n    s  : 'a few seconds',\n    ss : '%d seconds',\n    m  : 'a minute',\n    mm : '%d minutes',\n    h  : 'an hour',\n    hh : '%d hours',\n    d  : 'a day',\n    dd : '%d days',\n    M  : 'a month',\n    MM : '%d months',\n    y  : 'a year',\n    yy : '%d years'\n};\n\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n        output(number, withoutSuffix, string, isFuture) :\n        output.replace(/%d/i, number);\n}\n\nfunction pastFuture (diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n\nvar aliases = {};\n\nfunction addUnitAlias (unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n}\n\nfunction normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n\n    return normalizedInput;\n}\n\nvar priorities = {};\n\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n\nfunction getPrioritizedUnits(unitsObj) {\n    var units = [];\n    for (var u in unitsObj) {\n        units.push({unit: u, priority: priorities[u]});\n    }\n    units.sort(function (a, b) {\n        return a.priority - b.priority;\n    });\n    return units;\n}\n\nfunction zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n}\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken (token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n        func = function () {\n            return this[callback]();\n        };\n    }\n    if (token) {\n        formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n}\n\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format) {\n    var array = format.match(formattingTokens), i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n            array[i] = formatTokenFunctions[array[i]];\n        } else {\n            array[i] = removeFormattingTokens(array[i]);\n        }\n    }\n\n    return function (mom) {\n        var output = '', i;\n        for (i = 0; i < length; i++) {\n            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n        }\n        return output;\n    };\n}\n\n// format date using native date object\nfunction formatMoment(m, format) {\n    if (!m.isValid()) {\n        return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n        return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n\n    return format;\n}\n\nvar match1         = /\\d/;            //       0 - 9\nvar match2         = /\\d\\d/;          //      00 - 99\nvar match3         = /\\d{3}/;         //     000 - 999\nvar match4         = /\\d{4}/;         //    0000 - 9999\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\nvar match1to2      = /\\d\\d?/;         //       0 - 99\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nvar matchUnsigned  = /\\d+/;           //       0 - inf\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nvar matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n\nvar regexes = {};\n\nfunction addRegexToken (token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\n\nfunction getParseRegexForToken (token, config) {\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n    }));\n}\n\nfunction regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nvar tokens = {};\n\nfunction addParseToken (token, callback) {\n    var i, func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nfunction addWeekParseToken (token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n\nvar YEAR = 0;\nvar MONTH = 1;\nvar DATE = 2;\nvar HOUR = 3;\nvar MINUTE = 4;\nvar SECOND = 5;\nvar MILLISECOND = 6;\nvar WEEK = 7;\nvar WEEKDAY = 8;\n\n// FORMATTING\n\naddFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n});\n\naddFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n});\n\naddFormatToken(0, ['YYYY',   4],       0, 'year');\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y',      matchSigned);\naddRegexToken('YY',     match1to2, match2);\naddRegexToken('YYYY',   match1to4, match4);\naddRegexToken('YYYYY',  match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n});\naddParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n});\naddParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n});\n\n// HELPERS\n\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// HOOKS\n\nhooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n};\n\n// MOMENTS\n\nvar getSetYear = makeGetSet('FullYear', true);\n\nfunction getIsLeapYear () {\n    return isLeapYear(this.year());\n}\n\nfunction makeGetSet (unit, keepTime) {\n    return function (value) {\n        if (value != null) {\n            set$1(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nfunction get (mom, unit) {\n    return mom.isValid() ?\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\n\nfunction set$1 (mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n        if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n        }\n        else {\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n    }\n}\n\n// MOMENTS\n\nfunction stringGet (units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\n\nfunction stringSet (units, value) {\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n        for (var i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n\nfunction mod(n, x) {\n    return ((n % x) + x) % x;\n}\n\nvar indexOf;\n\nif (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n} else {\n    indexOf = function (o) {\n        // I know\n        var i;\n        for (i = 0; i < this.length; ++i) {\n            if (this[i] === o) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nfunction daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n        return NaN;\n    }\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M',    match1to2);\naddRegexToken('MM',   match1to2, match2);\naddRegexToken('MMM',  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nfunction localeMonths (m, format) {\n    if (!m) {\n        return isArray(this._months) ? this._months :\n            this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nfunction localeMonthsShort (m, format) {\n    if (!m) {\n        return isArray(this._monthsShort) ? this._monthsShort :\n            this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeMonthsParse (monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction setMonth (mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nfunction getSetMonth (value) {\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nfunction getDaysInMonth () {\n    return daysInMonth(this.year(), this.month());\n}\n\nvar defaultMonthsShortRegex = matchWord;\nfunction monthsShortRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n}\n\nvar defaultMonthsRegex = matchWord;\nfunction monthsRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\nfunction createDate (y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms);\n\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction createUTCDate (y) {\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n\nfunction weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek, resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n\nfunction weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w',  match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W',  match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nfunction localeWeek (mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nvar defaultLocaleWeek = {\n    dow : 0, // Sunday is the first day of the week.\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\n};\n\nfunction localeFirstDayOfWeek () {\n    return this._week.dow;\n}\n\nfunction localeFirstDayOfYear () {\n    return this._week.doy;\n}\n\n// MOMENTS\n\nfunction getSetWeek (input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nfunction getSetISOWeek (input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\n// FORMATTING\n\naddFormatToken('d', 0, 'do', 'day');\n\naddFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n});\n\naddFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n});\n\naddFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n});\n\naddFormatToken('e', 0, 0, 'weekday');\naddFormatToken('E', 0, 0, 'isoWeekday');\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d',    match1to2);\naddRegexToken('e',    match1to2);\naddRegexToken('E',    match1to2);\naddRegexToken('dd',   function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n});\naddRegexToken('ddd',   function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd',   function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n        week.d = weekday;\n    } else {\n        getParsingFlags(config).invalidWeekday = input;\n    }\n});\n\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n});\n\n// HELPERS\n\nfunction parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n        return input;\n    }\n\n    if (!isNaN(input)) {\n        return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n        return input;\n    }\n\n    return null;\n}\n\nfunction parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n}\n\n// LOCALES\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nfunction localeWeekdays (m, format) {\n    if (!m) {\n        return isArray(this._weekdays) ? this._weekdays :\n            this._weekdays['standalone'];\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n}\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nfunction localeWeekdaysShort (m) {\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n}\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nfunction localeWeekdaysMin (m) {\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n}\n\nfunction handleStrictParse$1(weekdayName, format, strict) {\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n            mom = createUTC([2000, 1]).day(i);\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'dddd') {\n            ii = indexOf.call(this._weekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'dddd') {\n            ii = indexOf.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeWeekdaysParse (weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n\n        mom = createUTC([2000, 1]).day(i);\n        if (strict && !this._fullWeekdaysParse[i]) {\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n        }\n        if (!this._weekdaysParse[i]) {\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction getSetDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n    } else {\n        return day;\n    }\n}\n\nfunction getSetLocaleDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n}\n\nfunction getSetISODayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n        return this.day() || 7;\n    }\n}\n\nvar defaultWeekdaysRegex = matchWord;\nfunction weekdaysRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysStrictRegex;\n        } else {\n            return this._weekdaysRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n        return this._weekdaysStrictRegex && isStrict ?\n            this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n}\n\nvar defaultWeekdaysShortRegex = matchWord;\nfunction weekdaysShortRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysShortStrictRegex;\n        } else {\n            return this._weekdaysShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n        return this._weekdaysShortStrictRegex && isStrict ?\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n}\n\nvar defaultWeekdaysMinRegex = matchWord;\nfunction weekdaysMinRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysMinStrictRegex;\n        } else {\n            return this._weekdaysMinRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n        return this._weekdaysMinStrictRegex && isStrict ?\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n}\n\n\nfunction computeWeekdaysParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\nfunction hFormat() {\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem (token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem (isStrict, locale) {\n    return locale._meridiemParse;\n}\n\naddRegexToken('a',  matchMeridiem);\naddRegexToken('A',  matchMeridiem);\naddRegexToken('H',  match1to2);\naddRegexToken('h',  match1to2);\naddRegexToken('k',  match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n});\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM (input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n}\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem (hours, minutes, isLower) {\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = makeGetSet('Hours', true);\n\n// months\n// week\n// weekdays\n// meridiem\nvar baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// internal storage for locale config files\nvar locales = {};\nvar localeFamilies = {};\nvar globalLocale;\n\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n\nfunction loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined') &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            var aliasedRequire = require;\n            aliasedRequire('./locale/' + name);\n            getSetGlobalLocale(oldLocale);\n        } catch (e) {}\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale (key, values) {\n    var data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nfunction defineLocale (name, config) {\n    if (config !== null) {\n        var parentConfig = baseConfig;\n        config.abbr = name;\n        if (locales[name] != null) {\n            deprecateSimple('defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                    'an existing locale. moment.defineLocale(localeName, ' +\n                    'config) should only be used for creating a new locale ' +\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n            parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n            if (locales[config.parentLocale] != null) {\n                parentConfig = locales[config.parentLocale]._config;\n            } else {\n                if (!localeFamilies[config.parentLocale]) {\n                    localeFamilies[config.parentLocale] = [];\n                }\n                localeFamilies[config.parentLocale].push({\n                    name: name,\n                    config: config\n                });\n                return null;\n            }\n        }\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n            localeFamilies[name].forEach(function (x) {\n                defineLocale(x.name, x.config);\n            });\n        }\n\n        // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n        getSetGlobalLocale(name);\n\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\nfunction updateLocale(name, config) {\n    if (config != null) {\n        var locale, tmpLocale, parentConfig = baseConfig;\n        // MERGE\n        tmpLocale = loadLocale(name);\n        if (tmpLocale != null) {\n            parentConfig = tmpLocale._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            } else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n\n// returns locale data\nfunction getLocale (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n\nfunction listLocales() {\n    return keys(locales);\n}\n\nfunction checkOverflow (m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n        overflow =\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n            -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n}\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray (config) {\n    var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n\n    // check for mismatching day of week\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n        getParsingFlags(config).weekdayMismatch = true;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nfunction configFromISO(config) {\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nvar rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\nfunction extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [\n        untruncateYear(yearStr),\n        defaultLocaleMonthsShort.indexOf(monthStr),\n        parseInt(dayStr, 10),\n        parseInt(hourStr, 10),\n        parseInt(minuteStr, 10)\n    ];\n\n    if (secondStr) {\n        result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n}\n\nfunction untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n    if (year <= 49) {\n        return 2000 + year;\n    } else if (year <= 999) {\n        return 1900 + year;\n    }\n    return year;\n}\n\nfunction preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').trim();\n}\n\nfunction checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n            weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n        if (weekdayProvided !== weekdayActual) {\n            getParsingFlags(config).weekdayMismatch = true;\n            config._isValid = false;\n            return false;\n        }\n    }\n    return true;\n}\n\nvar obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n};\n\nfunction calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n        return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n        // the only allowed military tz is Z\n        return 0;\n    } else {\n        var hm = parseInt(numOffset, 10);\n        var m = hm % 100, h = (hm - m) / 100;\n        return h * 60 + m;\n    }\n}\n\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n    if (match) {\n        var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n        if (!checkWeekday(match[1], parsedArray, config)) {\n            return;\n        }\n\n        config._a = parsedArray;\n        config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n        config._d = createUTCDate.apply(null, config._a);\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n        getParsingFlags(config).rfc2822 = true;\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nfunction configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n\n// constant that refers to the ISO standard\nhooks.ISO_8601 = function () {};\n\n// constant that refers to the RFC 2822 form\nhooks.RFC_2822 = function () {};\n\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n    }\n    if (config._f === hooks.RFC_2822) {\n        configFromRFC2822(config);\n        return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n        i, parsedInput, tokens, token, skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n        // console.log('token', token, 'parsedInput', parsedInput,\n        //         'regex', getParseRegexForToken(token, config));\n        if (parsedInput) {\n            skipped = string.substr(0, string.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap (locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n        if (isPm && hour < 12) {\n            hour += 12;\n        }\n        if (!isPm && hour === 12) {\n            hour = 0;\n        }\n        return hour;\n    } else {\n        // this is not supposed to happen\n        return hour;\n    }\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n\n        scoreToBeat,\n        i,\n        currentScore;\n\n    if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n        //or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n\n    extend(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n}\n\nfunction createFromConfig (config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nfunction prepareConfig (config) {\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({nullInput: true});\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    }  else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (isObject(input)) {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n\nfunction createLocal (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n}\n\nvar prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other < this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\nvar prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other > this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\n// Pick a moment m from moments so that m[fn](other) is true for all\n// other. This relies on the function fn to be transitive.\n//\n// moments should either be an array of moment objects or an array, whose\n// first element is an array of moment objects.\nfunction pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n    }\n    if (!moments.length) {\n        return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n            res = moments[i];\n        }\n    }\n    return res;\n}\n\n// TODO: Use [].sort instead?\nfunction min () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n}\n\nfunction max () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n}\n\nvar now = function () {\n    return Date.now ? Date.now() : +(new Date());\n};\n\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\nfunction isDurationValid(m) {\n    for (var key in m) {\n        if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n            return false;\n        }\n    }\n\n    var unitHasDecimal = false;\n    for (var i = 0; i < ordering.length; ++i) {\n        if (m[ordering[i]]) {\n            if (unitHasDecimal) {\n                return false; // only allow non-integers for smallest unit\n            }\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n\n    return true;\n}\n\nfunction isValid$1() {\n    return this._isValid;\n}\n\nfunction createInvalid$1() {\n    return createDuration(NaN);\n}\n\nfunction Duration (duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n        weeks * 7;\n    // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n        quarters * 3 +\n        years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nfunction isDuration (obj) {\n    return obj instanceof Duration;\n}\n\nfunction absRound (number) {\n    if (number < 0) {\n        return Math.round(-1 * number) * -1;\n    } else {\n        return Math.round(number);\n    }\n}\n\n// FORMATTING\n\nfunction offset (token, separator) {\n    addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\n\noffset('Z', ':');\noffset('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z',  matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n        return null;\n    }\n\n    var chunk   = matches[matches.length - 1] || [];\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n        // Use low-level api, because this fn is low-level api.\n        res._d.setTime(res._d.valueOf() + diff);\n        hooks.updateOffset(res, false);\n        return res;\n    } else {\n        return createLocal(input).local();\n    }\n}\n\nfunction getDateOffset (m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\nhooks.updateOffset = function () {};\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    if (input != null) {\n        if (typeof input === 'string') {\n            input = offsetFromString(matchShortOffset, input);\n            if (input === null) {\n                return this;\n            }\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\n            input = input * 60;\n        }\n        if (!this._isUTC && keepLocalTime) {\n            localAdjust = getDateOffset(this);\n        }\n        this._offset = input;\n        this._isUTC = true;\n        if (localAdjust != null) {\n            this.add(localAdjust, 'm');\n        }\n        if (offset !== input) {\n            if (!keepLocalTime || this._changeInProgress) {\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n            } else if (!this._changeInProgress) {\n                this._changeInProgress = true;\n                hooks.updateOffset(this, true);\n                this._changeInProgress = null;\n            }\n        }\n        return this;\n    } else {\n        return this._isUTC ? offset : getDateOffset(this);\n    }\n}\n\nfunction getSetZone (input, keepLocalTime) {\n    if (input != null) {\n        if (typeof input !== 'string') {\n            input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n\n        return this;\n    } else {\n        return -this.utcOffset();\n    }\n}\n\nfunction setOffsetToUTC (keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n}\n\nfunction setOffsetToLocal (keepLocalTime) {\n    if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n            this.subtract(getDateOffset(this), 'm');\n        }\n    }\n    return this;\n}\n\nfunction setOffsetToParsedOffset () {\n    if (this._tzm != null) {\n        this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n        if (tZone != null) {\n            this.utcOffset(tZone);\n        }\n        else {\n            this.utcOffset(0, true);\n        }\n    }\n    return this;\n}\n\nfunction hasAlignedHourOffset (input) {\n    if (!this.isValid()) {\n        return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n}\n\nfunction isDaylightSavingTime () {\n    return (\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\n        this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n}\n\nfunction isDaylightSavingTimeShifted () {\n    if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() &&\n            compareArrays(c._a, other.toArray()) > 0;\n    } else {\n        this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n}\n\nfunction isLocal () {\n    return this.isValid() ? !this._isUTC : false;\n}\n\nfunction isUtcOffset () {\n    return this.isValid() ? this._isUTC : false;\n}\n\nfunction isUtc () {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}\n\n// ASP.NET json date format regex\nvar aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nvar isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\nfunction createDuration (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (isNumber(input)) {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])                         * sign,\n            h  : toInt(match[HOUR])                         * sign,\n            m  : toInt(match[MINUTE])                       * sign,\n            s  : toInt(match[SECOND])                       * sign,\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            w : parseIso(match[4], sign),\n            d : parseIso(match[5], sign),\n            h : parseIso(match[6], sign),\n            m : parseIso(match[7], sign),\n            s : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\ncreateDuration.invalid = createInvalid$1;\n\nfunction parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n        return {milliseconds: 0, months: 0};\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n\n// TODO: remove 'name' arg after deprecation is removed\nfunction createAdder(direction, name) {\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n        // No op\n        return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nvar add      = createAdder(1, 'add');\nvar subtract = createAdder(-1, 'subtract');\n\nfunction getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar$1 (time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n}\n\nfunction clone () {\n    return new Moment(this);\n}\n\nfunction isAfter (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n    } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n}\n\nfunction isBefore (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n    } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n}\n\nfunction isBetween (from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(units || 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n    } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n}\n\nfunction isSameOrAfter (input, units) {\n    return this.isSame(input, units) || this.isAfter(input,units);\n}\n\nfunction isSameOrBefore (input, units) {\n    return this.isSame(input, units) || this.isBefore(input,units);\n}\n\nfunction diff (input, units, asFloat) {\n    var that,\n        zoneDelta,\n        delta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    switch (units) {\n        case 'year': output = monthDiff(this, that) / 12; break;\n        case 'month': output = monthDiff(this, that); break;\n        case 'quarter': output = monthDiff(this, that) / 3; break;\n        case 'second': output = (this - that) / 1e3; break; // 1000\n        case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n        case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n        case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n        case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n        default: output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString () {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString(keepOffset) {\n    if (!this.isValid()) {\n        return null;\n    }\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n    if (m.year() < 0 || m.year() > 9999) {\n        return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n        // native implementation is ~50x faster, use it when we can\n        if (utc) {\n            return this.toDate().toISOString();\n        } else {\n            return new Date(this._d.valueOf()).toISOString().replace('Z', formatMoment(m, 'Z'));\n        }\n    }\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect () {\n    if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format (inputString) {\n    if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n}\n\nfunction from (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction fromNow (withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n}\n\nfunction to (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction toNow (withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n}\n\n// If passed a locale key, it will set the locale for this\n// instance.  Otherwise, it will return the locale configuration\n// variables for this instance.\nfunction locale (key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n        return this._locale._abbr;\n    } else {\n        newLocaleData = getLocale(key);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    }\n}\n\nvar lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n        if (key === undefined) {\n            return this.localeData();\n        } else {\n            return this.locale(key);\n        }\n    }\n);\n\nfunction localeData () {\n    return this._locale;\n}\n\nfunction startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nfunction endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n\nfunction valueOf () {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n}\n\nfunction unix () {\n    return Math.floor(this.valueOf() / 1000);\n}\n\nfunction toDate () {\n    return new Date(this.valueOf());\n}\n\nfunction toArray () {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n}\n\nfunction toObject () {\n    var m = this;\n    return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n    };\n}\n\nfunction toJSON () {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n}\n\nfunction isValid$2 () {\n    return isValid(this);\n}\n\nfunction parsingFlags () {\n    return extend({}, getParsingFlags(this));\n}\n\nfunction invalidAt () {\n    return getParsingFlags(this).overflow;\n}\n\nfunction creationData() {\n    return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n    };\n}\n\n// FORMATTING\n\naddFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n});\n\naddFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n});\n\nfunction addWeekYearFormatToken (token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n}\n\naddWeekYearFormatToken('gggg',     'weekYear');\naddWeekYearFormatToken('ggggg',    'weekYear');\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G',      matchSigned);\naddRegexToken('g',      matchSigned);\naddRegexToken('GG',     match1to2, match2);\naddRegexToken('gg',     match1to2, match2);\naddRegexToken('GGGG',   match1to4, match4);\naddRegexToken('gggg',   match1to4, match4);\naddRegexToken('GGGGG',  match1to6, match6);\naddRegexToken('ggggg',  match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n});\n\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n});\n\n// MOMENTS\n\nfunction getSetWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy);\n}\n\nfunction getSetISOWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n}\n\nfunction getISOWeeksInYear () {\n    return weeksInYear(this.year(), 1, 4);\n}\n\nfunction getWeeksInYear () {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n}\n\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n    } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n        if (week > weeksTarget) {\n            week = weeksTarget;\n        }\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n}\n\n// FORMATTING\n\naddFormatToken('Q', 0, 'Qo', 'quarter');\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n});\n\n// MOMENTS\n\nfunction getSetQuarter (input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n}\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D',  match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ?\n      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n      locale._dayOfMonthOrdinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n});\n\n// MOMENTS\n\nvar getSetDayOfMonth = makeGetSet('Date', true);\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD',  match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nfunction getSetDayOfYear (input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n}\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2], 0, 'minute');\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m',  match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n\n// MOMENTS\n\nvar getSetMinute = makeGetSet('Minutes', false);\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2], 0, 'second');\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s',  match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n\n// MOMENTS\n\nvar getSetSecond = makeGetSet('Seconds', false);\n\n// FORMATTING\n\naddFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n});\n\naddFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n});\n\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\naddFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n});\naddFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n});\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n});\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n});\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n});\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n});\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S',    match1to3, match1);\naddRegexToken('SS',   match1to3, match2);\naddRegexToken('SSS',  match1to3, match3);\n\nvar token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n}\n// MOMENTS\n\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\n// FORMATTING\n\naddFormatToken('z',  0, 0, 'zoneAbbr');\naddFormatToken('zz', 0, 0, 'zoneName');\n\n// MOMENTS\n\nfunction getZoneAbbr () {\n    return this._isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName () {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n}\n\nvar proto = Moment.prototype;\n\nproto.add               = add;\nproto.calendar          = calendar$1;\nproto.clone             = clone;\nproto.diff              = diff;\nproto.endOf             = endOf;\nproto.format            = format;\nproto.from              = from;\nproto.fromNow           = fromNow;\nproto.to                = to;\nproto.toNow             = toNow;\nproto.get               = stringGet;\nproto.invalidAt         = invalidAt;\nproto.isAfter           = isAfter;\nproto.isBefore          = isBefore;\nproto.isBetween         = isBetween;\nproto.isSame            = isSame;\nproto.isSameOrAfter     = isSameOrAfter;\nproto.isSameOrBefore    = isSameOrBefore;\nproto.isValid           = isValid$2;\nproto.lang              = lang;\nproto.locale            = locale;\nproto.localeData        = localeData;\nproto.max               = prototypeMax;\nproto.min               = prototypeMin;\nproto.parsingFlags      = parsingFlags;\nproto.set               = stringSet;\nproto.startOf           = startOf;\nproto.subtract          = subtract;\nproto.toArray           = toArray;\nproto.toObject          = toObject;\nproto.toDate            = toDate;\nproto.toISOString       = toISOString;\nproto.inspect           = inspect;\nproto.toJSON            = toJSON;\nproto.toString          = toString;\nproto.unix              = unix;\nproto.valueOf           = valueOf;\nproto.creationData      = creationData;\n\n// Year\nproto.year       = getSetYear;\nproto.isLeapYear = getIsLeapYear;\n\n// Week Year\nproto.weekYear    = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\n\n// Quarter\nproto.quarter = proto.quarters = getSetQuarter;\n\n// Month\nproto.month       = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\n\n// Week\nproto.week           = proto.weeks        = getSetWeek;\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\nproto.weeksInYear    = getWeeksInYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\n\n// Day\nproto.date       = getSetDayOfMonth;\nproto.day        = proto.days             = getSetDayOfWeek;\nproto.weekday    = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear  = getSetDayOfYear;\n\n// Hour\nproto.hour = proto.hours = getSetHour;\n\n// Minute\nproto.minute = proto.minutes = getSetMinute;\n\n// Second\nproto.second = proto.seconds = getSetSecond;\n\n// Millisecond\nproto.millisecond = proto.milliseconds = getSetMillisecond;\n\n// Offset\nproto.utcOffset            = getSetOffset;\nproto.utc                  = setOffsetToUTC;\nproto.local                = setOffsetToLocal;\nproto.parseZone            = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST                = isDaylightSavingTime;\nproto.isLocal              = isLocal;\nproto.isUtcOffset          = isUtcOffset;\nproto.isUtc                = isUtc;\nproto.isUTC                = isUtc;\n\n// Timezone\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\n\n// Deprecations\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\nfunction createUnix (input) {\n    return createLocal(input * 1000);\n}\n\nfunction createInZone () {\n    return createLocal.apply(null, arguments).parseZone();\n}\n\nfunction preParsePostFormat (string) {\n    return string;\n}\n\nvar proto$1 = Locale.prototype;\n\nproto$1.calendar        = calendar;\nproto$1.longDateFormat  = longDateFormat;\nproto$1.invalidDate     = invalidDate;\nproto$1.ordinal         = ordinal;\nproto$1.preparse        = preParsePostFormat;\nproto$1.postformat      = preParsePostFormat;\nproto$1.relativeTime    = relativeTime;\nproto$1.pastFuture      = pastFuture;\nproto$1.set             = set;\n\n// Month\nproto$1.months            =        localeMonths;\nproto$1.monthsShort       =        localeMonthsShort;\nproto$1.monthsParse       =        localeMonthsParse;\nproto$1.monthsRegex       = monthsRegex;\nproto$1.monthsShortRegex  = monthsShortRegex;\n\n// Week\nproto$1.week = localeWeek;\nproto$1.firstDayOfYear = localeFirstDayOfYear;\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n// Day of Week\nproto$1.weekdays       =        localeWeekdays;\nproto$1.weekdaysMin    =        localeWeekdaysMin;\nproto$1.weekdaysShort  =        localeWeekdaysShort;\nproto$1.weekdaysParse  =        localeWeekdaysParse;\n\nproto$1.weekdaysRegex       =        weekdaysRegex;\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n// Hours\nproto$1.isPM = localeIsPM;\nproto$1.meridiem = localeMeridiem;\n\nfunction get$1 (format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n}\n\nfunction listMonthsImpl (format, index, field) {\n    if (isNumber(format)) {\n        index = format;\n        format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n        return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n}\n\n// ()\n// (5)\n// (fmt, 5)\n// (fmt)\n// (true)\n// (true, 5)\n// (true, fmt, 5)\n// (true, fmt)\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n}\n\nfunction listMonths (format, index) {\n    return listMonthsImpl(format, index, 'months');\n}\n\nfunction listMonthsShort (format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n}\n\nfunction listWeekdays (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n}\n\nfunction listWeekdaysShort (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n}\n\nfunction listWeekdaysMin (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n}\n\ngetSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\n// Side effect imports\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\nvar mathAbs = Math.abs;\n\nfunction abs () {\n    var data           = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days         = mathAbs(this._days);\n    this._months       = mathAbs(this._months);\n\n    data.milliseconds  = mathAbs(data.milliseconds);\n    data.seconds       = mathAbs(data.seconds);\n    data.minutes       = mathAbs(data.minutes);\n    data.hours         = mathAbs(data.hours);\n    data.months        = mathAbs(data.months);\n    data.years         = mathAbs(data.years);\n\n    return this;\n}\n\nfunction addSubtract$1 (duration, input, value, direction) {\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days         += direction * other._days;\n    duration._months       += direction * other._months;\n\n    return duration._bubble();\n}\n\n// supports only 2.0-style add(1, 's') or add(duration)\nfunction add$1 (input, value) {\n    return addSubtract$1(this, input, value, 1);\n}\n\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\nfunction subtract$1 (input, value) {\n    return addSubtract$1(this, input, value, -1);\n}\n\nfunction absCeil (number) {\n    if (number < 0) {\n        return Math.floor(number);\n    } else {\n        return Math.ceil(number);\n    }\n}\n\nfunction bubble () {\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nfunction daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nfunction monthsToDays (months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n\nfunction as (units) {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nfunction valueOf$1 () {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs (alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nvar asMilliseconds = makeAs('ms');\nvar asSeconds      = makeAs('s');\nvar asMinutes      = makeAs('m');\nvar asHours        = makeAs('h');\nvar asDays         = makeAs('d');\nvar asWeeks        = makeAs('w');\nvar asMonths       = makeAs('M');\nvar asYears        = makeAs('y');\n\nfunction clone$1 () {\n    return createDuration(this);\n}\n\nfunction get$2 (units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n}\n\nfunction makeGetter(name) {\n    return function () {\n        return this.isValid() ? this._data[name] : NaN;\n    };\n}\n\nvar milliseconds = makeGetter('milliseconds');\nvar seconds      = makeGetter('seconds');\nvar minutes      = makeGetter('minutes');\nvar hours        = makeGetter('hours');\nvar days         = makeGetter('days');\nvar months       = makeGetter('months');\nvar years        = makeGetter('years');\n\nfunction weeks () {\n    return absFloor(this.days() / 7);\n}\n\nvar round = Math.round;\nvar thresholds = {\n    ss: 44,         // a few seconds to seconds\n    s : 45,         // seconds to minute\n    m : 45,         // minutes to hour\n    h : 22,         // hours to day\n    d : 26,         // days to month\n    M : 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds  = round(duration.as('s'));\n    var minutes  = round(duration.as('m'));\n    var hours    = round(duration.as('h'));\n    var days     = round(duration.as('d'));\n    var months   = round(duration.as('M'));\n    var years    = round(duration.as('y'));\n\n    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n            seconds < thresholds.s   && ['ss', seconds] ||\n            minutes <= 1             && ['m']           ||\n            minutes < thresholds.m   && ['mm', minutes] ||\n            hours   <= 1             && ['h']           ||\n            hours   < thresholds.h   && ['hh', hours]   ||\n            days    <= 1             && ['d']           ||\n            days    < thresholds.d   && ['dd', days]    ||\n            months  <= 1             && ['M']           ||\n            months  < thresholds.M   && ['MM', months]  ||\n            years   <= 1             && ['y']           || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding (roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold (threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds.ss = limit - 1;\n    }\n    return true;\n}\n\nfunction humanize (withSuffix) {\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n}\n\nvar abs$1 = Math.abs;\n\nfunction sign(x) {\n    return ((x > 0) - (x < 0)) || +x;\n}\n\nfunction toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days         = abs$1(this._days);\n    var months       = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n    return totalSign + 'P' +\n        (Y ? ymSign + Y + 'Y' : '') +\n        (M ? ymSign + M + 'M' : '') +\n        (D ? daysSign + D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? hmsSign + h + 'H' : '') +\n        (m ? hmsSign + m + 'M' : '') +\n        (s ? hmsSign + s + 'S' : '');\n}\n\nvar proto$2 = Duration.prototype;\n\nproto$2.isValid        = isValid$1;\nproto$2.abs            = abs;\nproto$2.add            = add$1;\nproto$2.subtract       = subtract$1;\nproto$2.as             = as;\nproto$2.asMilliseconds = asMilliseconds;\nproto$2.asSeconds      = asSeconds;\nproto$2.asMinutes      = asMinutes;\nproto$2.asHours        = asHours;\nproto$2.asDays         = asDays;\nproto$2.asWeeks        = asWeeks;\nproto$2.asMonths       = asMonths;\nproto$2.asYears        = asYears;\nproto$2.valueOf        = valueOf$1;\nproto$2._bubble        = bubble;\nproto$2.clone          = clone$1;\nproto$2.get            = get$2;\nproto$2.milliseconds   = milliseconds;\nproto$2.seconds        = seconds;\nproto$2.minutes        = minutes;\nproto$2.hours          = hours;\nproto$2.days           = days;\nproto$2.weeks          = weeks;\nproto$2.months         = months;\nproto$2.years          = years;\nproto$2.humanize       = humanize;\nproto$2.toISOString    = toISOString$1;\nproto$2.toString       = toISOString$1;\nproto$2.toJSON         = toISOString$1;\nproto$2.locale         = locale;\nproto$2.localeData     = localeData;\n\n// Deprecations\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\nproto$2.lang = lang;\n\n// Side effect imports\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n\n// Side effect imports\n\n\nhooks.version = '2.20.1';\n\nsetHookCallback(createLocal);\n\nhooks.fn                    = proto;\nhooks.min                   = min;\nhooks.max                   = max;\nhooks.now                   = now;\nhooks.utc                   = createUTC;\nhooks.unix                  = createUnix;\nhooks.months                = listMonths;\nhooks.isDate                = isDate;\nhooks.locale                = getSetGlobalLocale;\nhooks.invalid               = createInvalid;\nhooks.duration              = createDuration;\nhooks.isMoment              = isMoment;\nhooks.weekdays              = listWeekdays;\nhooks.parseZone             = createInZone;\nhooks.localeData            = getLocale;\nhooks.isDuration            = isDuration;\nhooks.monthsShort           = listMonthsShort;\nhooks.weekdaysMin           = listWeekdaysMin;\nhooks.defineLocale          = defineLocale;\nhooks.updateLocale          = updateLocale;\nhooks.locales               = listLocales;\nhooks.weekdaysShort         = listWeekdaysShort;\nhooks.normalizeUnits        = normalizeUnits;\nhooks.relativeTimeRounding  = getSetRelativeTimeRounding;\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\nhooks.calendarFormat        = getCalendarFormat;\nhooks.prototype             = proto;\n\n// currently HTML5 input type only supports 24-hour formats\nhooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n    TIME: 'HH:mm',                                  // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" />\n    MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n};\n\nreturn hooks;\n\n})));\n","import * as options from './options';\nimport {Options,\n    casualOption,\n    commonPostProcessing,\n    de as deParsers,\n    en as enParsers,\n    en_GB as en_GBParsers,\n    es as esParsers,\n    fr as frParsers,\n    ja as jaParsers,\n    mergeOptions,\n    strictOption} from \"./options\";\nimport Parser, * as parser from './parsers/parser';\nimport Refiner, * as refiner from './refiners/refiner';\nimport {Filter} from './refiners/refiner';\nimport {ParsedResult, ParsedComponents} from './result';\n\nexport {options, parser, refiner, Parser, Refiner, ParsedResult, ParsedComponents, Filter};\n\nexport type ParseOptions = {\n    forwardDate: boolean,\n    afternoon: number,\n    evening: number,\n    morning: number,\n    noon: number\n};\n\nconst DEFAULT_PARSE_OPTIONS: ParseOptions = {\n    forwardDate: false,\n    afternoon: 15,\n    evening: 18,\n    morning: 6,\n    noon: 12,\n};\n\nexport class Chrono {\n    option: Options;\n    parsers: Parser[];\n    refiners: Refiner[];\n\n    constructor(option: Options = casualOption()) {\n        this.option = option;\n        this.parsers = option.parsers || [];\n        this.refiners = option.refiners || [];\n    }\n\n    parse(text: string, refDate: Date = new Date(), opt: Partial<ParseOptions> = {}): ParsedResult[] {\n        const mergedOptions: ParseOptions = {...DEFAULT_PARSE_OPTIONS, ...opt};\n        let allResults: ParsedResult[] = [];\n\n        this.parsers.forEach((parser: Parser) =>\n            allResults.push(...parser.execute(text, refDate, mergedOptions))\n        );\n\n        allResults.sort((a, b) => a.index - b.index);\n\n        this.refiners.forEach((refiner) =>\n            allResults = refiner.refine(text, allResults, mergedOptions)\n        );\n\n        return allResults;\n    }\n\n    parseDate(text: string, refDate: Date = new Date(), opt: Partial<ParseOptions> = {}): Date | null {\n        const results = this.parse(text, refDate, opt);\n        if (results.length > 0) {\n            return results[0].start.date();\n        }\n\n        return null;\n    }\n}\n\nexport default Chrono;\nexport const strict: Chrono = new Chrono( strictOption() );\nexport const casual: Chrono = new Chrono( casualOption() );\n\nexport const en: Chrono = new Chrono( mergeOptions([\n    enParsers.casual!, commonPostProcessing]));\n\nexport const en_GB: Chrono = new Chrono( mergeOptions([\n    en_GBParsers.casual!, commonPostProcessing]));\n\nexport const de: Chrono = new Chrono( mergeOptions([\n    deParsers.casual!, enParsers, commonPostProcessing]));\n\nexport const es: Chrono = new Chrono( mergeOptions([\n    esParsers.casual!, enParsers, commonPostProcessing]));\n\nexport const fr: Chrono = new Chrono( mergeOptions([\n    frParsers.casual!, enParsers, commonPostProcessing]));\n\nexport const ja: Chrono = new Chrono( mergeOptions([\n    jaParsers.casual!, enParsers, commonPostProcessing]));\n\n\nexport const parse = (text: string, ref?: Date, opt?: ParseOptions) => {\n    return casual.parse.call(casual, text, ref, opt);\n};\n\nexport const parseDate = (text: string, ref?: Date, opt?: ParseOptions) => {\n    return casual.parseDate.call(casual, text, ref, opt);\n};\n\n\n\n\n","import {COMPONENT_NAME} from \"./result\";\n\nexport const HOUR: COMPONENT_NAME = 'hour';\nexport const MINUTE: COMPONENT_NAME = 'minute';\nexport const SECOND: COMPONENT_NAME = 'second';\nexport const MILLISECOND: COMPONENT_NAME = 'millisecond';\nexport const MERIDIEM: COMPONENT_NAME = 'meridiem';\nexport const DAY: COMPONENT_NAME = 'day';\nexport const MONTH: COMPONENT_NAME = 'month';\nexport const YEAR: COMPONENT_NAME = 'year';\nexport const WEEKDAY: COMPONENT_NAME = 'weekday';\nexport const TIMEZONE_OFFSET: COMPONENT_NAME = 'timezoneOffset';\nexport const WEEK: UnitOfTime = 'week';\n\nexport type NameMap = {\n    [k :string]: number\n}\n\nexport type UnitOfTime = 'hour'\n| 'minute'\n| 'second'\n| 'millisecond'\n| 'day'\n| 'month'\n| 'year'\n| 'week'\n\nexport type UnitRegexMap = {\n    [k in UnitOfTime]?: RegExp\n}","import Parser, {\n    DECasualDateParser,\n    DEDeadlineFormatParser,\n    DEMonthNameLittleEndianParser,\n    DEMonthNameParser,\n    DESlashDateFormatParser,\n    DETimeAgoFormatParser,\n    DETimeExpressionParser,\n    DEWeekdayParser,\n    ENCasualDateParser,\n    ENCasualTimeParser,\n    ENDeadlineFormatParser,\n    ENISOFormatParser,\n    ENMonthNameLittleEndianParser,\n    ENMonthNameMiddleEndianParser,\n    ENMonthNameParser,\n    ENRelativeDateFormatParser,\n    ENSlashDateFormatParser,\n    ENSlashDateFormatStartWithYearParser,\n    ENSlashMonthFormatParser,\n    ENTimeAgoFormatParser,\n    ENTimeExpressionParser,\n    ENTimeLaterFormatParser,\n    ENWeekdayParser,\n    ESCasualDateParser,\n    ESDeadlineFormatParser,\n    ESMonthNameLittleEndianParser,\n    ESSlashDateFormatParser,\n    ESTimeAgoFormatParser,\n    ESTimeExpressionParser,\n    ESWeekdayParser,\n    FRCasualDateParser,\n    FRDeadlineFormatParser,\n    FRMonthNameLittleEndianParser,\n    FRRelativeDateFormatParser,\n    FRSlashDateFormatParser,\n    FRTimeAgoFormatParser,\n    FRTimeExpressionParser,\n    FRWeekdayParser,\n    JPCasualDateParser,\n    JPStandardParser,\n    ZHHantCasualDateParser,\n    ZHHantDateParser,\n    ZHHantDeadlineFormatParser,\n    ZHHantTimeExpressionParser,\n    ZHHantWeekdayParser\n} from './parsers/parser';\nimport Refiner, {\n    DEMergeDateRangeRefiner,\n    DEMergeDateTimeRefiner,\n    ENMergeDateRangeRefiner,\n    ENMergeDateTimeRefiner,\n    ENPrioritizeSpecificDateRefiner,\n    ExtractTimezoneAbbrRefiner,\n    ExtractTimezoneOffsetRefiner,\n    ForwardDateRefiner,\n    FRMergeDateRangeRefiner,\n    FRMergeDateTimeRefiner,\n    JPMergeDateRangeRefiner,\n    OverlapRemovalRefiner,\n    UnlikelyFormatFilter\n} from './refiners/refiner';\n\nexport type Options = {\n    parsers?: Parser[];\n    refiners?: Refiner[];\n}\nexport type Config = {\n    strict?: boolean,\n    littleEndian?: boolean\n}\nexport type OptionsResolver = (config?: Config) => Options;\nexport type OptionsOrResolver = Options | OptionsResolver;\n\nexport interface OptionsResolverWithCasual extends OptionsResolver {\n    casual?: OptionsResolver;\n}\n\nfunction isResolver(test: OptionsOrResolver): test is OptionsResolver {\n    return (<OptionsResolver>test).call !== undefined;\n}\n\nexport const mergeOptions = (options: OptionsOrResolver[]): Options => {\n    const addedTypes: { [k: string]: true } = {};\n    const mergedOption: Options = {\n        parsers: [],\n        refiners: []\n    };\n\n    options.forEach((maybeOption: OptionsOrResolver) => {\n        const option: Options = isResolver(maybeOption) ? maybeOption.call(maybeOption) : maybeOption;\n\n        if (option.parsers) {\n            option.parsers.forEach((parser: Parser) => {\n                if (!addedTypes[parser.constructor.name]) {\n                    mergedOption.parsers!.push(parser);\n                    addedTypes[parser.constructor.name] = true;\n                }\n            });\n        }\n\n        if (option.refiners) {\n            option.refiners.forEach((refiner: Refiner) => {\n                if (!addedTypes[refiner.constructor.name]) {\n                    mergedOption.refiners!.push(refiner);\n                    addedTypes[refiner.constructor.name] = true;\n                }\n            });\n        }\n    });\n\n    return mergedOption;\n};\n\nexport const commonPostProcessing: OptionsResolver = (): Options => ({\n    refiners: [\n        // These should be after all other refiners\n        new ExtractTimezoneOffsetRefiner(),\n        new ExtractTimezoneAbbrRefiner(),\n        new UnlikelyFormatFilter()\n    ]\n});\n\n// -------------------------------------------------------------\n\nexport const strictOption: OptionsResolver = (): Options => {\n    const strictConfig = {\n        strict: true\n    };\n\n    return mergeOptions([\n        en(strictConfig),\n        de(strictConfig),\n        es(strictConfig),\n        fr(strictConfig),\n        ja(),\n        zh(),\n        commonPostProcessing\n    ]);\n};\n\nexport const casualOption: OptionsResolver = (): Options => mergeOptions([\n    en.casual!,\n    // Some German abbreviate overlap with common English\n    de({strict: true}),\n    es.casual!,\n    fr.casual!,\n    ja.casual!,\n    zh,\n    commonPostProcessing\n]);\n\n// -------------------------------------------------------------\n\nconst de: OptionsResolverWithCasual = (config): Options => ({\n    parsers: [\n        new DEDeadlineFormatParser(config),\n        new DEMonthNameLittleEndianParser(config),\n        new DEMonthNameParser(config),\n        new DESlashDateFormatParser(config),\n        new DETimeAgoFormatParser(config),\n        new DETimeExpressionParser(config)\n    ],\n    refiners: [\n        new OverlapRemovalRefiner(),\n        new ForwardDateRefiner(),\n        new DEMergeDateTimeRefiner(),\n        new DEMergeDateRangeRefiner()\n    ]\n});\n\nde.casual = (): Options => {\n    const options: Options = de({strict: false});\n    options.parsers!.unshift(new DECasualDateParser());\n    options.parsers!.unshift(new DEWeekdayParser());\n    return options;\n};\n\n// -------------------------------------------------------------\n\nconst en: OptionsResolverWithCasual = (config): Options => ({\n    parsers: [\n        new ENISOFormatParser(config),\n        new ENDeadlineFormatParser(config),\n        new ENMonthNameLittleEndianParser(config),\n        new ENMonthNameMiddleEndianParser(config),\n        new ENMonthNameParser(config),\n        new ENSlashDateFormatParser(config),\n        new ENSlashDateFormatStartWithYearParser(config),\n        new ENSlashMonthFormatParser(config),\n        new ENTimeAgoFormatParser(config),\n        new ENTimeLaterFormatParser(config),\n        new ENTimeExpressionParser(config)\n    ],\n    refiners: [\n        new OverlapRemovalRefiner(),\n        new ForwardDateRefiner(),\n\n        // English\n        new ENMergeDateTimeRefiner(),\n        new ENMergeDateRangeRefiner(),\n        new ENPrioritizeSpecificDateRefiner()\n    ]\n});\n\nen.casual = (config: Config = {}): Options => {\n    const options: Options = en({...config, strict: false});\n\n    // EN\n    options.parsers!.unshift(new ENCasualDateParser());\n    options.parsers!.unshift(new ENCasualTimeParser());\n    options.parsers!.unshift(new ENWeekdayParser());\n    options.parsers!.unshift(new ENRelativeDateFormatParser());\n    return options;\n};\n\nconst en_GB: OptionsResolverWithCasual = (config: Config = {}): Options => en({...config, littleEndian: true});\n\nen_GB.casual = (config: Config = {}): Options => en.casual!({...config, littleEndian: true});\n\n// -------------------------------------------------------------\n\nconst ja: OptionsResolverWithCasual = (): Options => ({\n    parsers: [\n        new JPStandardParser()\n    ],\n    refiners: [\n        new OverlapRemovalRefiner(),\n        new ForwardDateRefiner(),\n        new JPMergeDateRangeRefiner()\n    ]\n});\n\nja.casual = (): Options => {\n    const options: Options = ja();\n    options.parsers!.unshift(new JPCasualDateParser());\n    return options;\n};\n\n// -------------------------------------------------------------\n\n\nconst es: OptionsResolverWithCasual = (config?: Config): Options => ({\n    parsers: [\n        new ESTimeAgoFormatParser(config),\n        new ESDeadlineFormatParser(config),\n        new ESTimeExpressionParser(config),\n        new ESMonthNameLittleEndianParser(config),\n        new ESSlashDateFormatParser(config)\n    ],\n    refiners: [\n        new OverlapRemovalRefiner(),\n        new ForwardDateRefiner()\n    ]\n});\n\nes.casual = (): Options => {\n    const options: Options = es({strict: false});\n\n    options.parsers!.unshift(new ESCasualDateParser());\n    options.parsers!.unshift(new ESWeekdayParser());\n    return options;\n};\n\n// -------------------------------------------------------------\n\nconst fr: OptionsResolverWithCasual = (config?: Config): Options => ({\n    parsers: [\n        new FRDeadlineFormatParser(config),\n        new FRMonthNameLittleEndianParser(config),\n        new FRSlashDateFormatParser(config),\n        new FRTimeAgoFormatParser(config),\n        new FRTimeExpressionParser(config)\n    ],\n    refiners: [\n        new OverlapRemovalRefiner(),\n        new ForwardDateRefiner(),\n        new FRMergeDateRangeRefiner(),\n        new FRMergeDateTimeRefiner()\n    ]\n});\n\nfr.casual = (): Options => {\n    const option: Options = fr({strict: false});\n\n    option.parsers!.unshift(new FRCasualDateParser());\n    option.parsers!.unshift(new FRWeekdayParser());\n    option.parsers!.unshift(new FRRelativeDateFormatParser());\n    return option;\n};\n\n// -------------------------------------------------------------\n\nconst zh: OptionsResolver = (): Options => ({\n    parsers: [\n        new ZHHantDateParser(),\n        new ZHHantWeekdayParser(),\n        new ZHHantTimeExpressionParser(),\n        new ZHHantCasualDateParser(),\n        new ZHHantDeadlineFormatParser()\n    ],\n    refiners: [\n        new OverlapRemovalRefiner(),\n        new ForwardDateRefiner()\n    ]\n});\n\nexport {de, en, fr, en_GB, ja, es, zh};","import * as moment from \"moment\";\nimport {Moment} from \"moment\";\nimport Parser from '../parser';\nimport {ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MERIDIEM, MILLISECOND, MINUTE, MONTH, SECOND, YEAR} from \"../../constants\";\n\nexport default class DECasualDateParser extends Parser {\n    private PATTERN: RegExp = new RegExp(\n        '(\\\\W|^)(' +\n        'jetzt|' +\n        '(?:heute|diesen)\\\\s*(morgen|vormittag|mittag|nachmittag|abend)|' +\n        '(?:heute|diese)\\\\s*nacht|' +\n        'heute|' +\n        '(?:(?:ü|ue)ber)?morgen(?:\\\\s*(morgen|vormittag|mittag|nachmittag|abend|nacht))?|' +\n        '(?:vor)?gestern(?:\\\\s*(morgen|vormittag|mittag|nachmittag|abend|nacht))?|' +\n        'letzte\\\\s*nacht' +\n        ')(?=\\\\W|$)', 'i');\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /(?:heute|diese)\\s*nacht/,\n        /^(?:ü|ue)bermorgen/,\n        /^morgen/,\n        /^gestern/,\n        /^vorgestern/,\n        /letzte\\s*nacht/\n    ];\n\n    private TAG: string = 'DECasualDateParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length),\n            index,\n            ref\n        });\n\n        const matchedText: string = result.text.toLowerCase();\n        let refMoment: Moment = moment(ref);\n        let startMoment: Moment = refMoment.clone();\n\n        if (this.OTHER_PATTERNS[0].test(matchedText)) {\n            // Normally means this coming midnight\n            result.start.imply(HOUR, 22);\n            result.start.imply(MERIDIEM, 1);\n        } else if (this.OTHER_PATTERNS[1].test(matchedText)) {\n            startMoment.add(refMoment.hour() > 1 ? 2 : 1, 'day');\n        } else if (this.OTHER_PATTERNS[2].test(matchedText)) {\n            // Check not \"Tomorrow\" on late night\n            if (refMoment.hour() > 1) {\n                startMoment.add(1, 'day');\n            }\n        } else if (this.OTHER_PATTERNS[3].test(matchedText)) {\n            startMoment.add(-1, 'day');\n        } else if (this.OTHER_PATTERNS[4].test(matchedText)) {\n            startMoment.add(-2, 'day');\n        } else if (this.OTHER_PATTERNS[5].test(matchedText)) {\n            result.start.imply(HOUR, 0);\n            if (refMoment.hour() > 6) {\n                startMoment.add(-1, 'day');\n            }\n        } else if (matchedText === 'jetzt') {\n            result.start.imply(HOUR, refMoment.hour());\n            result.start.imply(MINUTE, refMoment.minute());\n            result.start.imply(SECOND, refMoment.second());\n            result.start.imply(MILLISECOND, refMoment.millisecond());\n        }\n\n        const secondMatch: string = match[3] || match[4] || match[5];\n        if (secondMatch) {\n            switch (secondMatch.toLowerCase()) {\n                case 'morgen':\n                    result.start.imply(HOUR, 6);\n                    break;\n                case 'vormittag':\n                    result.start.imply(HOUR, 9);\n                    break;\n                case 'mittag':\n                    result.start.imply(HOUR, 12);\n                    break;\n                case 'nachmittag':\n                    result.start.imply(HOUR, 15);\n                    result.start.imply(MERIDIEM, 1);\n                    break;\n                case 'abend':\n                    result.start.imply(HOUR, 18);\n                    result.start.imply(MERIDIEM, 1);\n                    break;\n                case 'nacht':\n                    result.start.imply(HOUR, 0);\n                    break;\n            }\n        }\n\n        result.start.assign(DAY, startMoment.date());\n        result.start.assign(MONTH, startMoment.month() + 1);\n        result.start.assign(YEAR, startMoment.year());\n        result.tags[this.TAG] = true;\n\n        return result;\n    }\n}","import * as moment from 'moment';\nimport Parser from '../parser';\nimport {ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {UnitOfTime} from \"../../constants\";\nimport {INTEGER_WORDS_PATTERN, matchInteger, matchUnit} from '../../utils/DE';\nimport {deadlineCalculations} from \"../../utils/general\";\n\nexport default class DEDeadlineFormatParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(in|nach)\\\\s*' +\n        '(' + INTEGER_WORDS_PATTERN + '|[0-9]+|einigen|eine[rm]\\\\s*halben|eine[rm])\\\\s*' +\n        '(sekunden?|min(?:ute)?n?|stunden?|tag(?:en)?|wochen?|monat(?:en)?|jahr(?:en)?)\\\\s*' +\n        '(?=\\\\W|$)', 'i'\n    );\n\n    private STRICT_PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(in|nach)\\\\s*' +\n        '(' + INTEGER_WORDS_PATTERN + '|[0-9]+|eine(?:r|m)?)\\\\s*' +\n        '(sekunden?|minuten?|stunden?|tag(?:en)?)\\\\s*' +\n        '(?=\\\\W|$)', 'i'\n    );\n\n    private TAG: string = 'DEDeadlineFormatParser';\n\n    pattern() {\n        return this.isStrictMode() ? this.STRICT_PATTERN : this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const matchedText: string = match[0].substr(match[1].length, match[0].length - match[1].length);\n\n        const result: ParsedResult = new ParsedResult({\n            text: matchedText,\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n        let num: number = matchInteger(match[3].toLowerCase());\n        const matchedUnit: UnitOfTime | undefined = matchUnit(match[4].toLowerCase());\n\n        if (num && matchedUnit && deadlineCalculations(num, matchedUnit, result, moment(ref))) {\n            return result;\n        }\n\n        return null;\n    }\n}","import Parser from '../parser';\nimport {ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, MONTH, WEEKDAY, YEAR} from \"../../constants\";\nimport {MONTH_OFFSET, WEEKDAY_OFFSET, yearCalculation} from '../../utils/DE';\nimport {getAppropriateYear} from \"../../utils/general\";\n\nexport default class DEMonthNameLittleEndianParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(?:am\\\\s*?)?' +\n        '(?:(Sonntag|Montag|Dienstag|Mittwoch|Donnerstag|Freitag|Samstag|So|Mo|Di|Mi|Do|Fr|Sa)\\\\s*,?\\\\s*)?' +\n        '(?:den\\\\s*)?' +\n        '([0-9]{1,2})\\\\.' +\n        '(?:\\\\s*(?:bis(?:\\\\s*(?:am|zum))?|\\\\-|\\\\–|\\\\s)\\\\s*([0-9]{1,2})\\\\.)?\\\\s*' +\n        '(Jan(?:uar|\\\\.)?|Feb(?:ruar|\\\\.)?|Mär(?:z|\\\\.)?|Maerz|Mrz\\\\.?|Apr(?:il|\\\\.)?|Mai|Jun(?:i|\\\\.)?|Jul(?:i|\\\\.)?|Aug(?:ust|\\\\.)?|Sep(?:t|t\\\\.|tember|\\\\.)?|Okt(?:ober|\\\\.)?|Nov(?:ember|\\\\.)?|Dez(?:ember|\\\\.)?)' +\n        '(?:' +\n        ',?\\\\s*([0-9]{1,4}(?![^\\\\s]\\\\d))' +\n        '(\\\\s*[vn]\\\\.?\\\\s*C(?:hr)?\\\\.?)?' +\n        ')?' +\n        '(?=\\\\W|$)', 'i'\n    );\n\n    private WEEKDAY_GROUP: number = 2;\n    private DATE_GROUP: number = 3;\n    private DATE_TO_GROUP: number = 4;\n    private MONTH_NAME_GROUP: number = 5;\n    private YEAR_GROUP: number = 6;\n    private YEAR_BE_GROUP: number = 7;\n\n\n    private TAG: string = 'DEMonthNameLittleEndianParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref\n        });\n\n        const month: number = MONTH_OFFSET[match[this.MONTH_NAME_GROUP].toLowerCase()];\n\n        const day: number = parseInt(match[this.DATE_GROUP], 10);\n\n        result.start.assign(DAY, day);\n        result.start.assign(MONTH, month);\n\n        let year: number | null = yearCalculation(match[this.YEAR_GROUP], match[this.YEAR_BE_GROUP]);\n\n        if (year !== null) {\n            result.start.assign(YEAR, year);\n        } else {\n            getAppropriateYear(result.start, ref);\n        }\n\n        // Weekday component\n        if (match[this.WEEKDAY_GROUP]) {\n            result.start.assign(WEEKDAY, WEEKDAY_OFFSET[match[this.WEEKDAY_GROUP].toLowerCase()]);\n        }\n\n        // Text can be 'range' value. Such as '12 - 13 January 2012'\n        if (match[this.DATE_TO_GROUP]) {\n            result.end = result.start.clone();\n            result.end.assign(DAY, parseInt(match[this.DATE_TO_GROUP], 10));\n        }\n\n        result.tags[this.TAG] = true;\n        return result;\n    }\n\n}","import Parser from '../parser';\nimport {ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, MONTH, YEAR} from \"../../constants\";\nimport {MONTH_OFFSET, yearCalculation} from '../../utils/DE';\nimport {getAppropriateYear} from \"../../utils/general\";\n\nexport default class DEMonthNameParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(^|\\\\D\\\\s+|[^\\\\w\\\\s])' +\n        '(Jan\\\\.?|Januar|Feb\\\\.?|Februar|Mär\\\\.?|M(?:ä|ae)rz|Mrz\\\\.?|Apr\\\\.?|April|Mai\\\\.?|Jun\\\\.?|Juni|Jul\\\\.?|Juli|Aug\\\\.?|August|Sep\\\\.?|Sept\\\\.?|September|Okt\\\\.?|Oktober|Nov\\\\.?|November|Dez\\\\.?|Dezember)' +\n        '\\\\s*' +\n        '(?:' +\n        ',?\\\\s*(?:([0-9]{4})(\\\\s*[vn]\\\\.?\\\\s*C(?:hr)?\\\\.?)?|([0-9]{1,4})\\\\s*([vn]\\\\.?\\\\s*C(?:hr)?\\\\.?))' +\n        ')?' +\n        '(?=[^\\\\s\\\\w]|$)', 'i');\n\n    private MONTH_NAME_GROUP: number = 2;\n    private YEAR_GROUP: number = 3;\n    private YEAR_BE_GROUP: number = 4;\n    private YEAR_GROUP2: number = 5;\n    private YEAR_BE_GROUP2: number = 6;\n\n    private TAG: string = 'DEMonthNameParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref,\n        });\n\n\n        const month = MONTH_OFFSET[match[this.MONTH_NAME_GROUP].toLowerCase()];\n\n        result.start.imply(DAY, 1);\n        result.start.assign(MONTH, month);\n\n        let year: number | null = yearCalculation(match[this.YEAR_GROUP] || match[this.YEAR_GROUP2], match[this.YEAR_BE_GROUP] || match[this.YEAR_BE_GROUP2]);\n\n        if (year !== null) {\n            result.start.assign(YEAR, year);\n        } else {\n            getAppropriateYear(result.start, ref);\n        }\n\n        result.tags[this.TAG] = true;\n        return result;\n    }\n}\n\n","/*\n    Date format with slash \"/\" (also \"-\" and \".\") between numbers\n    - Tuesday 11/3/2015\n    - 11/3/2015\n    - 11/3\n*/\nimport Parser from '../parser';\nimport {ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, MONTH, WEEKDAY, YEAR} from \"../../constants\";\nimport {WEEKDAY_OFFSET} from '../../utils/DE';\nimport * as moment from 'moment';\n\nexport default class DESlashDateFormatParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(?:' +\n        '(?:am\\\\s*?)?' +\n        '((?:sonntag|so|montag|mo|dienstag|di|mittwoch|mi|donnerstag|do|freitag|fr|samstag|sa))' +\n        '\\\\s*\\\\,?\\\\s*' +\n        '(?:den\\\\s*)?' +\n        ')?' +\n        '([0-3]{0,1}[0-9]{1})[\\\\/\\\\.\\\\-]([0-3]{0,1}[0-9]{1})' +\n        '(?:' +\n        '[\\\\/\\\\.\\\\-]' +\n        '([0-9]{4}\\s*\\,?\\s*|[0-9]{2}\\s*\\,?\\s*)' +\n        ')?' +\n        '(\\\\W|$)', 'i');\n\n    private OPENING_GROUP: number = 1;\n    private WEEKDAY_GROUP: number = 2;\n    private DAY_GROUP: number = 3;\n    private MONTH_GROUP: number = 4;\n    private YEAR_GROUP: number = 5;\n    private ENDING_GROUP: number = 6;\n\n    private TAG: string = 'DESlashDateFormatParser';\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /^\\d\\.\\d$/,\n        /^\\d\\.\\d{1,2}\\.\\d{1,2}$/\n    ];\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        if (match[this.OPENING_GROUP] === '/' || match[this.ENDING_GROUP] === '/') {\n            // Long skip, if there is some overlapping like:\n            // XX[/YY/ZZ]\n            // [XX/YY/]ZZ\n            match.index += match[0].length;\n            return null;\n        }\n\n        const index: number = match.index + match[this.OPENING_GROUP].length;\n        const matchedText: string = match[0].substr(match[this.OPENING_GROUP].length, match[0].length - match[this.ENDING_GROUP].length);\n\n        const result: ParsedResult = new ParsedResult({\n            text: matchedText,\n            index,\n            ref,\n        });\n\n        if (matchedText.match(this.OTHER_PATTERNS[0]) || matchedText.match(this.OTHER_PATTERNS[1])) return null;\n\n        // MM/dd -> OK\n        // MM.dd -> NG\n        if (!match[this.YEAR_GROUP] && match[0].indexOf('/') < 0) return null;\n\n        let year: number = parseInt(match[this.YEAR_GROUP] || moment(ref).year() + '', 10);\n        const month: number = parseInt(match[this.MONTH_GROUP], 10);\n        const day: number = parseInt(match[this.DAY_GROUP], 10);\n\n        if ((month < 1 || month > 12) || (day < 1 || day > 31)) return null;\n\n        if (year < 100) {\n            if (year > 50) {\n                year = year + 1900;\n            } else {\n                year = year + 2000;\n            }\n        }\n\n        result.start.assign(DAY, day);\n        result.start.assign(MONTH, month);\n        result.start.assign(YEAR, year);\n\n        // Day of week\n        if (match[this.WEEKDAY_GROUP]) {\n            result.start.assign(WEEKDAY, WEEKDAY_OFFSET[match[this.WEEKDAY_GROUP].toLowerCase()]);\n        }\n\n        result.tags[this.TAG] = true;\n        return result;\n    }\n}\n","import Parser from '../parser';\nimport {ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MINUTE, MONTH, SECOND, UnitOfTime, WEEK, WEEKDAY, YEAR} from \"../../constants\";\nimport {INTEGER_WORDS_PATTERN, matchInteger, matchUnit} from '../../utils/DE';\nimport * as moment from \"moment\";\nimport {Moment} from \"moment\";\n\nenum MODE {\n    TIME,\n    DATE,\n    WEEK,\n    NONE,\n}\n\nexport default class DETimeAgoFormatParser extends Parser {\n    private PATTERN: RegExp = new RegExp('' +\n        '(\\\\W|^)vor\\\\s*' +\n        '(' + INTEGER_WORDS_PATTERN + '|[0-9]+|einigen|eine[rm]\\\\s*halben|eine[rm])\\\\s*' +\n        '(sekunden?|min(?:ute)?n?|stunden?|wochen?|tag(?:en)?|monat(?:en)?|jahr(?:en)?)\\\\s*' +\n        '(?=(?:\\\\W|$))', 'i');\n\n    private STRICT_PATTERN: RegExp = new RegExp('' +\n        '(\\\\W|^)vor\\\\s*' +\n        '([0-9]+|eine(?:r|m))\\\\s*' +\n        '(sekunden?|minuten?|stunden?|tag(?:en)?)' +\n        '(?=(?:\\\\W|$))', 'i');\n\n    private TAG: string = 'DETimeAgoFormatParser';\n\n\n    pattern(): RegExp {\n        return this.isStrictMode() ? this.STRICT_PATTERN : this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        if (match.index > 0 && text[match.index - 1].match(/\\w/)) return null;\n\n        const matchedText: string = match[0].substr(match[1].length, match[0].length - match[1].length);\n        const index: number = match.index + match[1].length;\n\n        const result: ParsedResult = new ParsedResult({\n            text: matchedText,\n            index,\n            ref\n        });\n\n        const matchedUnit: UnitOfTime | undefined = matchUnit(match[3].toLowerCase());\n\n        if (matchedUnit) {\n            const num: number = matchInteger(match[2].toLowerCase());\n            const momentRef: Moment = moment(ref);\n            let mode: MODE = MODE.NONE;\n            switch (matchedUnit) {\n                case HOUR:\n                    momentRef.add(-num, 'hour');\n                    mode = MODE.TIME;\n                    break;\n                case MINUTE:\n                    momentRef.add(-num, 'minute');\n                    mode = MODE.TIME;\n                    break;\n                case SECOND:\n                    momentRef.add(-num, 'second');\n                    mode = MODE.TIME;\n                    break;\n                case DAY:\n                    momentRef.add(-num, 'd');\n                    mode = MODE.DATE;\n                    break;\n                case MONTH:\n                    momentRef.add(-num, 'month');\n                    mode = MODE.DATE;\n                    break;\n                case YEAR:\n                    momentRef.add(-num, 'year');\n                    mode = MODE.DATE;\n                    break;\n                case WEEK:\n                    momentRef.add(-num, 'week');\n                    mode = MODE.WEEK;\n                    break;\n            }\n\n            if (mode !== MODE.NONE) {\n                result.tags[this.TAG] = true;\n                switch (mode) {\n                    case MODE.WEEK:\n                        result.start.imply(DAY, momentRef.date());\n                        result.start.imply(MONTH, momentRef.month() + 1);\n                        result.start.imply(YEAR, momentRef.year());\n                        result.start.imply(WEEKDAY, momentRef.day());\n                        break;\n                    case MODE.DATE:\n                        result.start.assign(DAY, momentRef.date());\n                        result.start.assign(MONTH, momentRef.month() + 1);\n                        result.start.assign(YEAR, momentRef.year());\n                        break;\n                    case MODE.TIME:\n                        result.start.imply(DAY, momentRef.date());\n                        result.start.imply(MONTH, momentRef.month() + 1);\n                        result.start.imply(YEAR, momentRef.year());\n                        result.start.assign(HOUR, momentRef.hour());\n                        result.start.assign(MINUTE, momentRef.minute());\n                        result.start.assign(SECOND, momentRef.second());\n                        break;\n                }\n\n                return result;\n            }\n        }\n\n        return null;\n    }\n\n}","import Parser from '../parser';\nimport {ParsedComponents, ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MERIDIEM, MINUTE, MONTH, SECOND, YEAR} from \"../../constants\";\nimport * as moment from \"moment\";\nimport {Moment} from \"moment\";\n\ntype Time = [number, number, number, number];\n\nexport default class DETimeExpressionParser extends Parser {\n    private PATTERN: RegExp = new RegExp(\"(^|\\\\s|T)\" +\n        \"(?:(?:um|von)\\\\s*)?\" +\n        \"(\\\\d{1,4}|mittags?|mitternachts?)\" +\n        \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \"(?:\" +\n        \"(?:\\\\:|\\\\：)(\\\\d{2})\" +\n        \")?\" +\n        \")?\" +\n        \"(?:\\\\s*uhr)?\" +\n        \"(?:\\\\s*(morgens|vormittags|mittags|nachmittags|abends|nachts))?\" +\n        \"(?=\\\\W|$)\", 'i');\n\n    private END_PATTERN: RegExp = new RegExp(\"^\\\\s*\" +\n        \"(\\\\-|\\\\–|\\\\~|\\\\〜|bis|\\\\?)\\\\s*\" +\n        \"(\\\\d{1,4})\" +\n        \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \")?\" +\n        \")?\" +\n        \"(?:\\\\s*(morgens|vormittags|mittags|nachmittags|abends|nachts))?\" +\n        \"(?=\\\\W|$)\", 'i');\n\n    private HOUR_GROUP: number = 2;\n    private MINUTE_GROUP: number = 3;\n    private SECOND_GROUP: number = 4;\n    private AM_PM_HOUR_GROUP: number = 5;\n\n    private TAG: string = 'DETimeExpressionParser';\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /mittags?/i,\n        /mitternachts?/i,\n        /^\\s*([+\\-])\\s*\\d{3,4}$/,\n        /^\\d+$/\n    ];\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index - 1].match(/\\w/)) return null;\n\n        const refMoment: Moment = moment(ref);\n\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substring(match[1].length),\n            index: match.index + match[1].length,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        result.start.imply(DAY, refMoment.date());\n        result.start.imply(MONTH, refMoment.month() + 1);\n        result.start.imply(YEAR, refMoment.year());\n\n        if (!this.extractFirstChunk(result, match)) {\n            return null;\n        }\n\n        if (!this.extractSecondChunk(text, result) && result.text.match(this.OTHER_PATTERNS[3])) {\n            return null;\n        }\n\n        return result;\n    }\n\n    private extractFirstChunk(result: ParsedResult, match: RegExpExecArray): boolean {\n        const time: Time | false = this.getTime(match);\n        if (!time) {\n            return false;\n        }\n\n        let [hour, minute, second, meridiem]: Time = time;\n\n        if (second > -1) {\n            result.start.assign(SECOND, second);\n        }\n\n        // ----- AM & PM\n        if (match[this.AM_PM_HOUR_GROUP]) {\n            if (hour > 12) return false;\n            const ampm: string = match[this.AM_PM_HOUR_GROUP].toLowerCase();\n            if (ampm === 'morgens' || ampm === 'vormittags') {\n                meridiem = 0;\n                if (hour === 12) hour = 0;\n            } else {\n                meridiem = 1;\n                if (hour !== 12) hour += 12;\n            }\n        }\n\n        result.start.assign(HOUR, hour);\n        result.start.assign(MINUTE, minute);\n\n        if (meridiem >= 0) {\n            result.start.assign(MERIDIEM, meridiem);\n        } else {\n            if (hour < 12) {\n                result.start.imply(MERIDIEM, 0);\n            } else {\n                result.start.imply(MERIDIEM, 1);\n            }\n        }\n\n        return true;\n    }\n\n    private extractSecondChunk(text: string, result: ParsedResult): boolean {\n        const match: RegExpExecArray | null = this.END_PATTERN.exec(text.substring(result.index + result.text.length));\n\n        if (!match) {\n            return false;\n        }\n\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\n        if (match[0].match(this.OTHER_PATTERNS[2])) {\n            return true;\n        }\n\n        const time: Time | false = this.getTime(match);\n        if (!time) {\n            return true;\n        }\n\n        let [hour, minute, second, meridiem]: Time = time;\n\n        if (!result.end) {\n            result.end = new ParsedComponents(undefined, result.start.date());\n        }\n\n        if (second > -1) {\n            result.end.assign(SECOND, second);\n        }\n\n        // ----- AM & PM\n        if (match[this.AM_PM_HOUR_GROUP]) {\n\n            if (hour > 12) return false;\n\n            const ampm: string = match[this.AM_PM_HOUR_GROUP].toLowerCase();\n            if (ampm === 'morgens' || ampm === 'vormittags') {\n                meridiem = 0;\n                if (hour === 12) {\n                    hour = 0;\n                    if (!result.end.isCertain(DAY)) {\n                        result.end.imply(DAY, result.end.get(DAY) + 1);\n                    }\n                }\n            } else {\n                meridiem = 1;\n                if (hour !== 12) hour += 12;\n            }\n\n            if (!result.start.isCertain(MERIDIEM)) {\n                if (meridiem === 0) {\n                    result.start.imply(MERIDIEM, 0);\n\n                    if (result.start.get(HOUR) === 12) {\n                        result.start.assign(HOUR, 0);\n                    }\n                } else {\n                    result.start.imply(MERIDIEM, 1);\n\n                    if (result.start.get(HOUR) !== 12) {\n                        result.start.assign(HOUR, result.start.get(HOUR) + 12);\n                    }\n                }\n            }\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign(HOUR, hour);\n        result.end.assign(MINUTE, minute);\n        if (meridiem >= 0) {\n            result.end.assign(MERIDIEM, meridiem);\n        } else {\n            const startAtPM: boolean = result.start.isCertain(MERIDIEM) && result.start.get(MERIDIEM) === 1;\n            if (startAtPM && result.start.get(HOUR) > hour) {\n                // 10pm - 1 (am)\n                result.end.imply(MERIDIEM, 0);\n\n            } else if (hour > 12) {\n                result.end.imply(MERIDIEM, 1);\n            }\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply(DAY, result.end.get(DAY) + 1)\n        }\n\n        return true;\n    }\n\n    private getTime(match: RegExpExecArray): Time | false {\n        let second: number = -1;\n        let hour: number = 0;\n        let minute: number = 0;\n        let meridiem: number = -1;\n\n\n        // ----- Second\n        if (match[this.SECOND_GROUP]) {\n            second = parseInt(match[this.SECOND_GROUP], 10);\n            if (second >= 60) return false;\n        }\n\n        // ----- Hours\n        if (this.OTHER_PATTERNS[0].test(match[this.HOUR_GROUP])) {\n            meridiem = 1;\n            hour = 12;\n        } else if (this.OTHER_PATTERNS[1].test(match[this.HOUR_GROUP])) {\n            meridiem = 0;\n            hour = 0;\n        } else {\n            hour = parseInt(match[this.HOUR_GROUP], 10);\n        }\n\n        // ----- Minutes\n        if (match[this.MINUTE_GROUP]) {\n            minute = parseInt(match[this.MINUTE_GROUP], 10);\n        } else if (hour > 100) {\n            minute = hour % 100;\n            hour = Math.floor(hour / 100);\n        }\n\n        if (minute >= 60) {\n            return false;\n        }\n\n        if (hour > 24) {\n            return false;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        return [hour, minute, second, meridiem];\n    }\n}\n","import Parser from '../parser';\nimport {ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {WEEKDAY_OFFSET} from '../../utils/DE';\nimport * as moment from \"moment\";\nimport {Moment} from \"moment\";\nimport {DAY, MONTH, WEEKDAY, YEAR} from \"../../constants\";\n\n\nexport default class DEWeekdayParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\n        '(?:a[mn]\\\\s*?)?' +\n        '(?:(diese[mn]|letzte[mn]|n(?:ä|ae)chste[mn])\\\\s*)?' +\n        '(' + Object.keys(WEEKDAY_OFFSET).join('|') + ')' +\n        '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\n        '(?:\\\\s*(diese|letzte|n(?:ä|ae)chste)\\\\s*woche)?' +\n        '(?=\\\\W|$)', 'i');\n\n    private PREFIX_GROUP: number = 2;\n    private WEEKDAY_GROUP: number = 3;\n    private POSTFIX_GROUP: number = 4;\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /letzte/,\n        /n(?:ä|ae)chste/,\n        /diese/\n    ];\n\n    private TAG: string = 'DEWeekdayParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const matchedText: string = match[0].substr(match[1].length, match[0].length - match[1].length);\n        const result: ParsedResult = new ParsedResult({\n            text: matchedText,\n            index,\n            ref,\n        });\n\n        const offset: number | undefined = WEEKDAY_OFFSET[match[this.WEEKDAY_GROUP].toLowerCase()];\n        if (offset === undefined) return null;\n\n        const startMoment: Moment = moment(ref);\n        const prefix: string = match[this.PREFIX_GROUP];\n        const postfix: string = match[this.POSTFIX_GROUP];\n\n        const refOffset: number = startMoment.day();\n        const norm: string = (prefix || postfix || '').toLowerCase();\n        if (this.OTHER_PATTERNS[0].test(norm)) {\n            startMoment.day(offset - 7);\n        } else if (this.OTHER_PATTERNS[1].test(norm)) {\n            startMoment.day(offset + 7);\n        } else if (this.OTHER_PATTERNS[2].test(norm)) {\n            if (opt.forwardDate && refOffset > offset) {\n                startMoment.day(offset + 7);\n            } else {\n                startMoment.day(offset);\n            }\n        } else {\n            const calcOffset = offset - refOffset;\n            const absOffset = Math.abs(calcOffset);\n            if (opt.forwardDate && refOffset > offset) {\n                startMoment.day(offset + 7);\n            } else if (!opt.forwardDate && Math.abs(calcOffset - 7) < absOffset) {\n                startMoment.day(offset - 7);\n            } else if (!opt.forwardDate && Math.abs(calcOffset + 7) < absOffset) {\n                startMoment.day(offset + 7);\n            } else {\n                startMoment.day(offset);\n            }\n        }\n\n        result.tags[this.TAG] = true;\n        result.start.assign(WEEKDAY, offset);\n        result.start.imply(DAY, startMoment.date());\n        result.start.imply(MONTH, startMoment.month() + 1);\n        result.start.imply(YEAR, startMoment.year());\n        return result;\n    }\n}","import * as moment from \"moment\";\nimport {Moment} from \"moment\";\nimport Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MERIDIEM, MILLISECOND, MINUTE, MONTH, SECOND, YEAR} from \"../../constants\";\n\nexport default class ENCasualDateParser extends Parser {\n    private PATTERN: RegExp = /(\\W|^)(now|today|tonight|last\\s*night|(?:tomorrow|tmr|yesterday)\\s*|tomorrow|tmr|yesterday)(?=\\W|$)/i;\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /^tomorrow|^tmr/,\n        /^yesterday/,\n        /last\\s*night/\n    ];\n\n    private TAG: string = 'ENCasualDateParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length),\n            index,\n            ref\n        });\n\n        const refMoment: Moment = moment(ref);\n        const startMoment: Moment = refMoment.clone();\n        const matchedText = result.text.toLowerCase();\n\n        if(matchedText === 'tonight'){\n            // Normally means this coming midnight\n            result.start.imply(HOUR, 22);\n            result.start.imply(MERIDIEM, 1);\n        } else if (this.OTHER_PATTERNS[0].test(matchedText)) {\n            // Check not \"Tomorrow\" on late night\n            if(refMoment.hour() > 1) {\n                startMoment.add(1, 'day');\n            }\n        } else if (this.OTHER_PATTERNS[1].test(matchedText)) {\n            startMoment.add(-1, 'day');\n        } else if(matchedText.match(this.OTHER_PATTERNS[2])) {\n            result.start.imply(HOUR, 0);\n            if (refMoment.hour() > 6) {\n                startMoment.add(-1, 'day');\n            }\n        } else if (matchedText.match(\"now\")) {\n            result.start.assign(HOUR, refMoment.hour());\n            result.start.assign(MINUTE, refMoment.minute());\n            result.start.assign(SECOND, refMoment.second());\n            result.start.assign(MILLISECOND, refMoment.millisecond());\n\n        }\n\n        result.start.assign(DAY, startMoment.date());\n        result.start.assign(MONTH, startMoment.month() + 1);\n        result.start.assign(YEAR, startMoment.year());\n        result.tags[this.TAG] = true;\n        return result;\n    }\n\n}","import Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {HOUR} from \"../../constants\";\n\nexport default class ENCasualTimeParser extends Parser {\n    private PATTERN: RegExp = /(\\W|^)((this)?\\s*(morning|afternoon|evening|noon))/i;\n\n    private TIME_MATCH: number = 4;\n    private TIME_MATCH_ALT: number = 3;\n\n    private TAG: string = 'ENCasualTimeParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        const matchedText: string = (match[this.TIME_MATCH] || match[this.TIME_MATCH_ALT]).toLowerCase();\n\n        if (matchedText == \"afternoon\") {\n            result.start.imply(HOUR, opt.afternoon);\n        } else if (matchedText == \"evening\") {\n            result.start.imply(HOUR, opt.evening);\n        } else if (matchedText == \"morning\") {\n            result.start.imply(HOUR, opt.morning);\n        } else if (matchedText == \"noon\") {\n            result.start.imply(HOUR, opt.noon);\n        }\n\n        return result;\n    }\n}","import Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {INTEGER_WORDS_PATTERN, matchInteger, matchUnit} from \"../../utils/EN\";\nimport * as moment from \"moment\";\nimport {UnitOfTime} from \"../../constants\";\nimport {deadlineCalculations} from \"../../utils/general\";\n\nexport default class ENDeadlineFormatParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(within|in)\\\\s*' +\n        '(' + INTEGER_WORDS_PATTERN + '|[0-9]+|an?(?:\\\\s*few)?|half(?:\\\\s*an?)?)\\\\s*' +\n        '(seconds?|min(?:ute)?s?|hours?|days?|weeks?|months?|years?)\\\\s*' +\n        '(?=\\\\W|$)', 'i'\n    );\n    private STRICT_PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(within|in)\\\\s*' +\n        '(' + INTEGER_WORDS_PATTERN + '|[0-9]+|an?)\\\\s*' +\n        '(seconds?|minutes?|hours?|days?)\\\\s*' +\n        '(?=\\\\W|$)', 'i'\n    );\n\n    private NUM_MATCH: number = 3;\n    private UNIT_MATCH: number = 4;\n\n    private TAG: string = 'ENDeadlineFormatParser';\n\n    pattern(): RegExp {\n        return this.isStrictMode() ? this.STRICT_PATTERN : this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        const num: number = matchInteger(match[this.NUM_MATCH].toLowerCase());\n        const matchedUnit: UnitOfTime | undefined = matchUnit(match[this.UNIT_MATCH].toLowerCase());\n\n        if (num && matchedUnit && deadlineCalculations(num, matchedUnit, result, moment(ref))) {\n            return result;\n        }\n\n        return null;\n    }\n}","/*\n    ISO 8601\n    http://www.w3.org/TR/NOTE-datetime\n    - YYYY-MM-DD\n    - YYYY-MM-DDThh:mmTZD\n    - YYYY-MM-DDThh:mm:ssTZD\n    - YYYY-MM-DDThh:mm:ss.sTZD \n    - TZD = (Z or +hh:mm or -hh:mm)\n*/\nimport Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MILLISECOND, MINUTE, MONTH, SECOND, TIMEZONE_OFFSET, YEAR} from \"../../constants\";\n\nexport default class ENISOFormatParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)'\n        + '([0-9]{4})\\\\-([0-9]{1,2})\\\\-([0-9]{1,2})'\n        + '(?:T' //..\n        + '([0-9]{1,2}):([0-9]{1,2})' // hh:mm\n        + '(?::([0-9]{1,2})(?:\\\\.(\\\\d{1,4}))?)?' // :ss.s\n        + '(?:Z|([+-]\\\\d{2}):?(\\\\d{2})?)?' // TZD (Z or ±hh:mm or ±hhmm or ±hh)\n        + ')?'  //..\n        + '(?=\\\\W|$)', 'i');\n\n    private YEAR_NUMBER_GROUP: number = 2;\n    private MONTH_NUMBER_GROUP: number = 3;\n    private DATE_NUMBER_GROUP: number = 4;\n    private HOUR_NUMBER_GROUP: number = 5;\n    private MINUTE_NUMBER_GROUP: number = 6;\n    private SECOND_NUMBER_GROUP: number = 7;\n    private MILLISECOND_NUMBER_GROUP: number = 8;\n    private TZD_HOUR_OFFSET_GROUP: number = 9;\n    private TZD_MINUTE_OFFSET_GROUP: number = 10;\n\n    private TAG: string = 'ENISOFormatParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        result.start.assign(YEAR, parseInt(match[this.YEAR_NUMBER_GROUP], 10));\n        result.start.assign(MONTH, parseInt(match[this.MONTH_NUMBER_GROUP], 10));\n        result.start.assign(DAY, parseInt(match[this.DATE_NUMBER_GROUP], 10));\n\n        if (result.start.get(MONTH) > 12 || result.start.get(MONTH) < 1 ||\n            result.start.get(DAY) > 31 || result.start.get(DAY) < 1) {\n            return null;\n        }\n\n        if (match[this.HOUR_NUMBER_GROUP] != null) {\n            result.start.assign(HOUR, parseInt(match[this.HOUR_NUMBER_GROUP], 10));\n            result.start.assign(MINUTE, parseInt(match[this.MINUTE_NUMBER_GROUP], 10));\n\n            if (match[this.SECOND_NUMBER_GROUP] != null) {\n                result.start.assign(SECOND, parseInt(match[this.SECOND_NUMBER_GROUP],10));\n            }\n\n            if (match[this.MILLISECOND_NUMBER_GROUP] != null) {\n                result.start.assign(MILLISECOND, parseInt(match[this.MILLISECOND_NUMBER_GROUP], 10));\n            }\n\n            if (match[this.TZD_HOUR_OFFSET_GROUP] == null) {\n                result.start.assign(TIMEZONE_OFFSET, 0);\n            } else {\n                let minuteOffset: number = 0;\n                const hourOffset: number = parseInt(match[this.TZD_HOUR_OFFSET_GROUP], 10);\n                if (match[this.TZD_MINUTE_OFFSET_GROUP] != null)\n                    minuteOffset = parseInt(match[this.TZD_MINUTE_OFFSET_GROUP], 10);\n\n                let offset: number = hourOffset * 60;\n                if (offset < 0) {\n                    offset -= minuteOffset;\n                } else {\n                    offset += minuteOffset;\n                }\n\n                result.start.assign(TIMEZONE_OFFSET, offset);\n            }\n        }\n\n        return result;\n    }\n}","import Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {MONTH_OFFSET, ORDINAL_WORDS, ORDINAL_WORDS_PATTERN, WEEKDAY_OFFSET, yearCalculation} from \"../../utils/EN\";\nimport {DAY, MONTH, WEEKDAY, YEAR} from \"../../constants\";\nimport {getAppropriateYear} from \"../../utils/general\";\n\nexport default class ENMonthNameLittleEndianParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(?:on\\\\s*?)?' +\n        '(?:(Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sun|Mon|Tue|Wed|Thu|Fri|Sat)\\\\s*,?\\\\s*)?' +\n        '(([0-9]{1,2})(?:st|nd|rd|th)?|' + ORDINAL_WORDS_PATTERN + ')' +\n        '(?:\\\\s*' +\n        '(?:to|\\\\-|\\\\–|until|through|till|\\\\s)\\\\s*' +\n        '(([0-9]{1,2})(?:st|nd|rd|th)?|' + ORDINAL_WORDS_PATTERN + ')' +\n        ')?' +\n        '(?:-|\\/|\\\\s*(?:of)?\\\\s*)' +\n        '(Jan(?:uary|\\\\.)?|Feb(?:ruary|\\\\.)?|Mar(?:ch|\\\\.)?|Apr(?:il|\\\\.)?|May|Jun(?:e|\\\\.)?|Jul(?:y|\\\\.)?|Aug(?:ust|\\\\.)?|Sep(?:tember|\\\\.)?|Oct(?:ober|\\\\.)?|Nov(?:ember|\\\\.)?|Dec(?:ember|\\\\.)?)' +\n        '(?:' +\n        '(?:-|\\/|,?\\\\s*)' +\n        '((?:' +\n        '[1-9][0-9]{0,3}\\\\s*(?:BE|AD|BC)|' +\n        '[1-2][0-9]{3}' +\n        ')(?![^\\\\s]\\\\d))' +\n        ')?' +\n        '(?=\\\\W|$)', 'i'\n    );\n\n    private WEEKDAY_GROUP: number = 2;\n    private DATE_GROUP: number = 3;\n    private DATE_NUM_GROUP: number = 4;\n    private DATE_TO_GROUP: number = 5;\n    private DATE_TO_NUM_GROUP: number = 6;\n    private MONTH_NAME_GROUP: number = 7;\n    private YEAR_GROUP: number = 8;\n\n    private TAG: string = 'ENMonthNameLittleEndianParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        const month: number = MONTH_OFFSET[match[this.MONTH_NAME_GROUP].toLowerCase()];\n\n        if (!(month || month === 0)) {\n            return null;\n        }\n\n        const day: number = match[this.DATE_NUM_GROUP] ?\n            parseInt(match[this.DATE_NUM_GROUP], 10) :\n            ORDINAL_WORDS[match[this.DATE_GROUP].trim().replace('-', ' ').toLowerCase()];\n\n\n        if (!day) {\n            return null;\n        }\n\n        result.start.assign(DAY, day);\n        result.start.assign(MONTH, month);\n\n        let year: number | null = yearCalculation(match[this.YEAR_GROUP]);\n\n\n        if (year) {\n            result.start.assign(YEAR, year);\n        } else {\n            getAppropriateYear(result.start, ref);\n        }\n\n        // Weekday component\n        if (match[this.WEEKDAY_GROUP]) {\n            const weekday: number = WEEKDAY_OFFSET[match[this.WEEKDAY_GROUP].toLowerCase()];\n            if (weekday || weekday === 0) {\n                result.start.assign(WEEKDAY, weekday);\n            }\n        }\n\n        // Text can be 'range' value. Such as '12 - 13 January 2012'\n        if (match[this.DATE_TO_GROUP]) {\n            const endDate = match[this.DATE_TO_NUM_GROUP] ?\n                parseInt(match[this.DATE_TO_NUM_GROUP], 10) :\n                ORDINAL_WORDS[match[this.DATE_TO_GROUP].trim().replace('-', ' ').toLowerCase()];\n\n            if (endDate) {\n                result.end = result.start.clone();\n                result.end.assign(DAY, endDate);\n            }\n        }\n\n        return result;\n    }\n}\n\n","/*\n\n    The parser for parsing US's date format that begin with month's name.\n\n    EX.\n        - January 13\n        - January 13, 2012\n        - January 13 - 15, 2012\n        - Tuesday, January 13, 2012\n\n    Watch out for:\n        - January 12:00\n        - January 12.44\n        - January 1222344\n*/\nimport Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {MONTH_OFFSET, ORDINAL_WORDS, ORDINAL_WORDS_PATTERN, WEEKDAY_OFFSET, yearCalculation} from \"../../utils/EN\";\nimport {DAY, MONTH, WEEKDAY, YEAR} from \"../../constants\";\nimport {getAppropriateYear} from \"../../utils/general\";\n\nexport default class ENMonthNameMiddleEndianParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(?:' +\n        '(?:on\\\\s*?)?' +\n        '(Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sun\\\\.?|Mon\\\\.?|Tue\\\\.?|Wed\\\\.?|Thu\\\\.?|Fri\\\\.?|Sat\\\\.?)' +\n        '\\\\s*,?\\\\s*)?' +\n        '(Jan\\\\.?|January|Feb\\\\.?|February|Mar\\\\.?|March|Apr\\\\.?|April|May\\\\.?|Jun\\\\.?|June|Jul\\\\.?|July|Aug\\\\.?|August|Sep\\\\.?|Sept\\\\.?|September|Oct\\\\.?|October|Nov\\\\.?|November|Dec\\\\.?|December)' +\n        '(?:-|\\/|\\\\s*,?\\\\s*)' +\n        '(([0-9]{1,2})(?:st|nd|rd|th)?|' + ORDINAL_WORDS_PATTERN + ')(?!\\\\s*(?:am|pm))\\\\s*' + '' +\n        '(?:' +\n        '(?:to|\\\\-)\\\\s*' +\n        '(([0-9]{1,2})(?:st|nd|rd|th)?| ' + ORDINAL_WORDS_PATTERN + ')\\\\s*' +\n        ')?' +\n        '(?:' +\n        '(?:-|\\/|\\\\s*,?\\\\s*)' +\n        '(?:([0-9]{4})\\\\s*(BE|AD|BC)?|([0-9]{1,4})\\\\s*(AD|BC))\\\\s*' +\n        ')?' +\n        '(?=\\\\W|$)(?!\\\\:\\\\d)', 'i');\n\n    private WEEKDAY_GROUP: number = 2;\n    private MONTH_NAME_GROUP: number = 3;\n    private DATE_GROUP: number = 4;\n    private DATE_NUM_GROUP: number = 5;\n    private DATE_TO_GROUP: number = 6;\n    private DATE_TO_NUM_GROUP: number = 7;\n    private YEAR_GROUP: number = 8;\n    private YEAR_BE_GROUP: number = 9;\n    private YEAR_GROUP2: number = 10;\n    private YEAR_BE_GROUP2: number = 11;\n\n    private TAG: string = 'ENMonthNameMiddleEndianParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        const month: number = MONTH_OFFSET[match[this.MONTH_NAME_GROUP].toLowerCase()];\n\n        if (!(month || month === 0)) {\n            return null;\n        }\n\n        const day: number = match[this.DATE_NUM_GROUP] ?\n            parseInt(match[this.DATE_NUM_GROUP], 10) :\n            ORDINAL_WORDS[match[this.DATE_GROUP].trim().replace('-', ' ').toLowerCase()];\n\n\n        if (!day) {\n            return null;\n        }\n\n        result.start.assign(DAY, day);\n        result.start.assign(MONTH, month);\n\n        let year: number | null = yearCalculation(\n            match[this.YEAR_GROUP] || match[this.YEAR_GROUP2],\n            match[this.YEAR_BE_GROUP] || match[this.YEAR_BE_GROUP2]\n        );\n\n        if (year) {\n            result.start.assign(YEAR, year);\n        } else {\n            getAppropriateYear(result.start, ref);\n        }\n\n        // Weekday component\n        if (match[this.WEEKDAY_GROUP]) {\n            const weekday: number = WEEKDAY_OFFSET[match[this.WEEKDAY_GROUP].toLowerCase()];\n            if (weekday || weekday === 0) {\n                result.start.assign(WEEKDAY, weekday);\n            }\n        }\n\n        // Text can be 'range' value. Such as '12 - 13 January 2012'\n        if (match[this.DATE_TO_GROUP]) {\n            const endDate = match[this.DATE_TO_NUM_GROUP] ?\n                parseInt(match[this.DATE_TO_NUM_GROUP], 10) :\n                ORDINAL_WORDS[match[this.DATE_TO_GROUP].trim().replace('-', ' ').toLowerCase()];\n\n            if (endDate) {\n                result.end = result.start.clone();\n                result.end.assign(DAY, endDate);\n            }\n        }\n\n        return result;\n    }\n}","/*\n    \n    The parser for parsing month name and year.\n    \n    EX. \n        - January\n        - January 2012\n        - January, 2012\n*/\nimport Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {MONTH_OFFSET, yearCalculation} from \"../../utils/EN\";\nimport {DAY, MONTH, YEAR} from \"../../constants\";\nimport {getAppropriateYear} from \"../../utils/general\";\n\nexport default class ENMonthNameParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(^|\\\\D\\\\s+|[^\\\\w\\\\s])' +\n        '(Jan\\\\.?|January|Feb\\\\.?|February|Mar\\\\.?|March|Apr\\\\.?|April|May\\\\.?|Jun\\\\.?|June|Jul\\\\.?|July|Aug\\\\.?|August|Sep\\\\.?|Sept\\\\.?|September|Oct\\\\.?|October|Nov\\\\.?|November|Dec\\\\.?|December)' +\n        '\\\\s*' +\n        '(?:' +\n        '[,-]?\\\\s*([0-9]{4})(\\\\s*BE|AD|BC)?' +\n        ')?' +\n        '(?=[^\\\\s\\\\w]|\\\\s+[^0-9]|\\\\s+$|$)', 'i');\n\n    private MONTH_NAME_GROUP: number = 2;\n    private YEAR_GROUP: number = 3;\n    private YEAR_BE_GROUP: number = 4;\n\n    private TAG: string = 'ENMonthNameParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        const month: number = MONTH_OFFSET[match[this.MONTH_NAME_GROUP].toLowerCase()];\n\n        if (!(month || month === 0)) {\n            return null;\n        }\n\n        result.start.assign(DAY, 1);\n        result.start.assign(MONTH, month);\n\n        let year: number | null = yearCalculation(\n            match[this.YEAR_GROUP],\n            match[this.YEAR_BE_GROUP]\n        );\n\n        if (year) {\n            result.start.assign(YEAR, year);\n        } else {\n            getAppropriateYear(result.start, ref);\n        }\n\n\n        return result;\n    }\n}","import Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {INTEGER_WORDS_PATTERN, matchInteger, matchUnit} from \"../../utils/EN\";\nimport * as moment from \"moment\";\nimport {Moment} from \"moment\";\nimport {DAY, HOUR, MINUTE, MONTH, SECOND, UnitOfTime, WEEK, YEAR} from \"../../constants\";\n\nexport default class ENRelativeDateFormatParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(this|next|last|past)\\\\s*' +\n        '(' + INTEGER_WORDS_PATTERN + '|[0-9]+|few|half(?:\\\\s*an?)?)?\\\\s*' +\n        '(seconds?|min(?:ute)?s?|hours?|days?|weeks?|months?|years?)(?=\\\\s*)' +\n        '(?=\\\\W|$)', 'i'\n    );\n\n    private MODIFIER_WORD_GROUP: number = 2;\n    private MULTIPLIER_WORD_GROUP: number = 3;\n    private RELATIVE_WORD_GROUP: number = 4;\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /^next/,\n        /^this/\n    ];\n\n    private TAG: string = 'ENRelativeDateFormatParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        const matchedUnit: string = match[this.RELATIVE_WORD_GROUP].toLowerCase();\n        const unit: UnitOfTime | undefined = matchUnit(matchedUnit);\n\n        if (!unit) {\n            return null;\n        }\n\n        const matchedMultiplier: string = match[this.MULTIPLIER_WORD_GROUP];\n        const matchedModifier: string = match[this.MODIFIER_WORD_GROUP].toLowerCase();\n        const momentRef: Moment = moment(ref);\n        const num: number = matchInteger(matchedMultiplier);\n\n        if (matchedModifier.match(this.OTHER_PATTERNS[1])) {\n            if (matchedMultiplier) {\n                return null;\n            }\n\n            switch (unit) {\n                case WEEK:\n                    momentRef.set('weekday', 0);\n                    result.start.imply(DAY, momentRef.date());\n                    result.start.imply(MONTH, momentRef.month() + 1);\n                    result.start.imply(YEAR, momentRef.year());\n                    break;\n                case MONTH:\n                    momentRef.set('date', 1);\n                    result.start.imply(DAY, momentRef.date());\n                    result.start.assign(MONTH, momentRef.month() + 1);\n                    result.start.assign(YEAR, momentRef.year());\n                    break;\n                case YEAR:\n                    momentRef.set('dayOfYear', 1);\n                    result.start.imply(DAY, momentRef.date());\n                    result.start.imply(MONTH, momentRef.month() + 1);\n                    result.start.assign(YEAR, momentRef.year());\n                    break;\n\n            }\n        } else {\n            const modifier: number = matchedModifier.match(this.OTHER_PATTERNS[0]) ? 1 : -1;\n            const offset: number = modifier * (num || 1);\n            let timeMode: boolean = false;\n\n            switch (unit) {\n                case SECOND:\n                    timeMode = true;\n                    momentRef.add(offset, 'second');\n                    result.start.imply(MINUTE, momentRef.minute());\n                    result.start.imply(SECOND, momentRef.second());\n                    break;\n                case MINUTE:\n                    timeMode = true;\n                    momentRef.add(offset, 'minute');\n                    result.start.assign(MINUTE, momentRef.minute());\n                    result.start.imply(SECOND, momentRef.second());\n                    break;\n                case HOUR:\n                    timeMode = true;\n                    momentRef.add(offset, 'hour');\n                    result.start.imply(MINUTE, momentRef.minute());\n                    result.start.imply(SECOND, momentRef.second());\n                    break;\n                case DAY:\n                    momentRef.add(offset, 'd');\n                    result.start.assign(YEAR, momentRef.year());\n                    result.start.assign(MONTH, momentRef.month() + 1);\n                    result.start.assign(DAY, momentRef.date());\n                    break;\n                case WEEK:\n                    momentRef.add(offset * 7, 'd');\n                    result.start.imply(MONTH, momentRef.month() + 1);\n                    result.start.imply(YEAR, momentRef.year());\n                    result.start.imply(DAY, momentRef.date());\n                    break;\n                case MONTH:\n                    momentRef.add(offset, 'month');\n                    momentRef.set('date', 1);\n                    result.start.assign(YEAR, momentRef.year());\n                    result.start.assign(MONTH, momentRef.month() + 1);\n                    result.start.imply(DAY, momentRef.date());\n                    break;\n                case YEAR:\n                    momentRef.add(offset, 'year');\n                    momentRef.set('dayOfYear', 1);\n                    result.start.imply(DAY, momentRef.date());\n                    result.start.imply(MONTH, momentRef.month() + 1);\n                    result.start.assign(YEAR, momentRef.year());\n                    break;\n                default:\n                    return null;\n            }\n\n            if (timeMode) {\n                result.start.assign(HOUR, momentRef.hour());\n                result.start.assign(YEAR, momentRef.year());\n                result.start.assign(MONTH, momentRef.month() + 1);\n                result.start.assign(DAY, momentRef.date());\n            }\n        }\n\n\n        return result;\n    }\n}","/*\n    Date format with slash \"/\" (also \"-\" and \".\") between numbers\n    - Tuesday 11/3/2015 \n    - 11/3/2015\n    - 11/3\n\n    By default the paser us \"middle-endien\" format (US English),\n    then fallback to little-endian if failed.\n    - 11/3/2015 = November 3rd, 2015\n    - 23/4/2015 = April 23th, 2015\n\n    If \"littleEndian\" config is set, the parser will try the little-endian first. \n    - 11/3/2015 = March 11th, 2015\n*/\n\nimport * as moment from 'moment';\nimport Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {Config} from \"../../options\";\nimport {DAY, MONTH, WEEKDAY, YEAR} from \"../../constants\";\nimport {WEEKDAY_OFFSET} from \"../../utils/EN\";\nimport {checkMonthDaysValid} from \"../../utils/general\";\n\nexport default class ENSlashDateFormatParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(?:' +\n        '(?:on\\\\s*?)?' +\n        '((?:sun|mon|tues?|wed(?:nes)?|thu(?:rs?)?|fri|sat(?:ur)?)(?:day)?)' +\n        '\\\\s*\\\\,?\\\\s*' +\n        ')?' +\n        '([0-3]{0,1}[0-9]{1})[\\\\/\\\\.\\\\-]([0-3]{0,1}[0-9]{1})' +\n        '(?:' +\n        '[\\\\/\\\\.\\\\-]' +\n        '([0-9]{4}\\s*\\,?\\s*|[0-9]{2}\\s*\\,?\\s*)' +\n        ')?' +\n        '(\\\\W|$)', 'i');\n\n    private OPENING_GROUP: number = 1;\n    private ENDING_GROUP: number = 6;\n\n    private WEEKDAY_GROUP: number = 2;\n\n    private FIRST_NUMBERS_GROUP: number = 3;\n    private SECOND_NUMBERS_GROUP: number = 4;\n\n    private YEAR_GROUP: number = 5;\n\n    private TAG: string = 'ENSlashDateFormatParser';\n\n    private MONTH_GROUP: number;\n    private DAY_GROUP: number;\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /^\\d\\.\\d$/,\n        /^\\d\\.\\d{1,2}\\.\\d{1,2}$/\n    ];\n\n    constructor(config: Config = {}) {\n        super(config);\n        if (config.littleEndian) {\n            this.MONTH_GROUP = this.SECOND_NUMBERS_GROUP;\n            this.DAY_GROUP = this.FIRST_NUMBERS_GROUP;\n        } else {\n            this.DAY_GROUP = this.SECOND_NUMBERS_GROUP;\n            this.MONTH_GROUP = this.FIRST_NUMBERS_GROUP;\n        }\n    }\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        if (match[this.OPENING_GROUP] == '/' || match[this.ENDING_GROUP] == '/') {\n            // Long skip, if there is some overlapping like:\n            // XX[/YY/ZZ]\n            // [XX/YY/]ZZ\n            match.index += match[0].length;\n            return null;\n        }\n\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[this.OPENING_GROUP].length, match[0].length - match[this.ENDING_GROUP].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n        const matchedText: string = result.text.toLowerCase();\n\n        if (matchedText.match(this.OTHER_PATTERNS[0]) || matchedText.match(this.OTHER_PATTERNS[1])) {\n            return null;\n        }\n\n        // MM/dd -> OK\n        // MM.dd -> NG\n        if (!match[this.YEAR_GROUP] && match[0].indexOf('/') < 0) {\n            return null;\n        }\n\n        let year: number = match[this.YEAR_GROUP] ? parseInt(match[this.YEAR_GROUP], 10) : moment(ref).year();\n        let month: number = parseInt(match[this.MONTH_GROUP], 10);\n        let day: number = parseInt(match[this.DAY_GROUP], 10);\n\n        if (month < 1 || day < 1 || day > 31) {\n            return null\n        }\n\n        if (year < 100) {\n            if (year > 50) {\n                year = year + 1900;\n            } else {\n                year = year + 2000;\n            }\n        }\n\n        if (month > 12) {\n            if (month <= 31 && day <= 12 && checkMonthDaysValid(month, day, year)) {\n                [month, day] = [day, month];\n            } else {\n                return null;\n            }\n        }\n\n        result.start.assign(DAY, day);\n        result.start.assign(MONTH, month);\n        if (match[this.YEAR_GROUP]) {\n            result.start.assign(YEAR, year);\n        } else {\n            result.start.imply(YEAR, year);\n        }\n\n        if (match[this.WEEKDAY_GROUP]) {\n            result.start.assign(WEEKDAY, WEEKDAY_OFFSET[match[this.WEEKDAY_GROUP].toLowerCase()]);\n        }\n\n        return result;\n    }\n}","/*\n    Date format with slash \"/\" between numbers like ENSlashDateFormatParser,\n    but this parser expect year before month and date. \n    - YYYY/MM/DD\n    - YYYY-MM-DD\n    - YYYY.MM.DD\n*/\nimport Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {checkMonthDaysValid} from \"../../utils/general\";\nimport {DAY, MONTH, YEAR} from \"../../constants\";\n\nexport default class ENSlashDateFormatStartWithYearParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)'\n        + '([0-9]{4})[\\\\-\\\\.\\\\/]([0-9]{1,2})[\\\\-\\\\.\\\\/]([0-9]{1,2})'\n        + '(?=\\\\W|$)', 'i');\n\n    private YEAR_NUMBER_GROUP: number = 2;\n    private MONTH_NUMBER_GROUP: number = 3;\n    private DATE_NUMBER_GROUP: number = 4;\n\n    private TAG: string = 'ENSlashDateFormatStartWithYearParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        const year: number = parseInt(match[this.YEAR_NUMBER_GROUP], 10);\n        const month: number = parseInt(match[this.MONTH_NUMBER_GROUP], 10);\n        const day: number = parseInt(match[this.DATE_NUMBER_GROUP], 10);\n\n        if (month > 12 || month < 1 || day > 31 || day < 1 || !checkMonthDaysValid(day, month, year)) {\n            return null;\n        }\n\n        result.start.assign(YEAR, year);\n        result.start.assign(MONTH, month);\n        result.start.assign(DAY, day);\n\n        return result;\n    }\n}","/*\n    Month/Year date format with slash \"/\" (also \"-\" and \".\") between numbers \n    - 11/05\n    - 06/2005\n*/\n\nimport Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MONTH, YEAR} from \"../../constants\";\n\nexport default class ENSlashMonthFormatParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(^|[^\\\\d/]\\\\s+|[^\\\\w\\\\s])' +\n        '([0-9]|0[1-9]|1[012])/([0-9]{4})' +\n        '([^\\\\d/]|$)', 'i');\n\n    private OPENING_GROUP: number = 1;\n    private ENDING_GROUP: number = 4;\n    private MONTH_GROUP: number = 2;\n    private YEAR_GROUP: number = 3;\n\n    private TAG: string = 'ENSlashMonthFormatParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[this.OPENING_GROUP].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[this.OPENING_GROUP].length, match[0].length - (1 + match[this.ENDING_GROUP].length)).trim(),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        result.start.imply(DAY, 1);\n        result.start.assign(MONTH, parseInt(match[this.MONTH_GROUP], 10));\n        result.start.assign(YEAR, parseInt(match[this.YEAR_GROUP], 10));\n\n\n        return result;\n    }\n}","import Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MINUTE, MONTH, SECOND, WEEKDAY, YEAR} from \"../../constants\";\nimport {\n    extractDateTimeUnitFragments,\n    FragmentMap,\n    FragmentName,\n    TIME_UNIT_PATTERN,\n    TIME_UNIT_STRICT_PATTERN\n} from \"../../utils/EN\";\nimport * as moment from \"moment\";\nimport {Moment} from \"moment\";\n\nexport default class ENTimeAgoFormatParser extends Parser {\n    private PATTERN: RegExp = new RegExp('' +\n        '(\\\\W|^)' +\n        '(?:within\\\\s*)?' +\n        '(' + TIME_UNIT_PATTERN + ')' +\n        '(?:ago|before|earlier)(?=(?:\\\\W|$))', 'i');\n\n    private STRICT_PATTERN: RegExp = new RegExp('' +\n        '(\\\\W|^)' +\n        '(?:within\\\\s*)?' +\n        '(' + TIME_UNIT_STRICT_PATTERN + ')' +\n        'ago(?=(?:\\\\W|$))', 'i');\n\n    private TAG: string = 'ENTimeAgoFormatParser';\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /\\w/\n    ];\n\n    pattern(): RegExp {\n        return this.isStrictMode() ? this.STRICT_PATTERN : this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        if (match.index > 0 && text[match.index - 1].match(this.OTHER_PATTERNS[0])) return null;\n\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        const fragments: FragmentMap = extractDateTimeUnitFragments(match[2]);\n        const momentRef: Moment = moment(ref);\n\n        (Object.keys(fragments) as FragmentName[]).forEach((fragment: FragmentName) => {\n            momentRef.add(-fragments[fragment]!, fragment);\n        });\n\n        if ((fragments['hour'] || 0) > 0 || (fragments['minute'] || 0) > 0 || (fragments['second'] || 0) > 0) {\n            result.start.assign(HOUR, momentRef.hour());\n            result.start.assign(MINUTE, momentRef.minute());\n            result.start.assign(SECOND, momentRef.second());\n        }\n\n        if ((fragments['d'] || 0) > 0 || (fragments['month'] || 0) > 0 || (fragments['year'] || 0) > 0) {\n            result.start.assign(DAY, momentRef.date());\n            result.start.assign(MONTH, momentRef.month() + 1);\n            result.start.assign(YEAR, momentRef.year());\n        } else {\n            if ((fragments['week'] || 0) > 0) {\n                result.start.imply(WEEKDAY, momentRef.day());\n            }\n\n            result.start.imply(DAY, momentRef.date());\n            result.start.imply(MONTH, momentRef.month() + 1);\n            result.start.imply(YEAR, momentRef.year());\n        }\n\n        return result;\n    }\n}","import Parser from '../parser';\nimport {ParsedComponents, ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MERIDIEM, MILLISECOND, MINUTE, MONTH, SECOND, YEAR} from \"../../constants\";\nimport * as moment from \"moment\";\nimport {Moment} from \"moment\";\n\ntype Time = [number, number, number, number, number];\n\nexport default class ENTimeExpressionParser extends Parser {\n    private PATTERN: RegExp = new RegExp(\"(^|\\\\s|T)\" +\n        \"(?:(?:at|from)\\\\s*)??\" +\n        \"(\\\\d{1,4}|noon|midnight)\" +\n        \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \"(?:\" +\n        \"(?:\\\\:|\\\\：)(\\\\d{2})(?:\\\\.(\\\\d{1,6}))?\" +\n        \")?\" +\n        \")?\" +\n        \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?|O\\\\W*CLOCK))?\" +\n        \"(?=\\\\W|$)\", 'i');\n\n    private END_PATTERN: RegExp = new RegExp(\"^\\\\s*\" +\n        \"(\\\\-|\\\\–|\\\\~|\\\\〜|to|(?:un)?till?|\\\\?)\\\\s*\" +\n        \"(\\\\d{1,4})\" +\n        \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})(?:\\\\.(\\\\d{1,6}))?\" +\n        \")?\" +\n        \")?\" +\n        \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?|O\\\\W*CLOCK))?\" +\n        \"(?=\\\\W|$)\", 'i');\n\n    private HOUR_GROUP = 2;\n    private MINUTE_GROUP = 3;\n    private SECOND_GROUP = 4;\n    private MILLI_SECOND_GROUP = 5;\n    private AM_PM_HOUR_GROUP = 6;\n\n    private TAG: string = 'ENTimeExpressionParser';\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /\\w/,\n        /^\\s*([+\\-])\\d{3,4}$/,\n        /^\\d+$/,\n\n    ];\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index - 1].match(this.OTHER_PATTERNS[0])) return null;\n\n        const refMoment: Moment = moment(ref);\n\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substring(match[1].length),\n            index: match.index + match[1].length,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        result.start.imply(DAY, refMoment.date());\n        result.start.imply(MONTH, refMoment.month() + 1);\n        result.start.imply(YEAR, refMoment.year());\n\n        if (!this.extractFirstChunk(result, match)) {\n            return null;\n        }\n\n        if (!this.extractSecondChunk(text, result) && result.text.match(this.OTHER_PATTERNS[2])) {\n            return null;\n        }\n\n        return result;\n    }\n\n    private extractFirstChunk(result: ParsedResult, match: RegExpExecArray): boolean {\n        const time: Time | false = this.getTime(match);\n        if (!time) {\n            return false;\n        }\n\n        let [hour, minute, second, millisecond, meridiem]: Time = time;\n\n        if (second > -1) {\n            result.start.assign(SECOND, second);\n        }\n\n        if (millisecond > -1) {\n            result.start.assign(MILLISECOND, millisecond);\n        }\n\n        // ----- AM & PM\n        if (match[this.AM_PM_HOUR_GROUP]) {\n            if (hour > 12) return false;\n            const ampm: string = match[this.AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm === 'a') {\n                meridiem = 0;\n                if (hour === 12) hour = 0;\n            } else if (ampm === 'p') {\n                meridiem = 1;\n                if (hour !== 12) hour += 12;\n            }\n        }\n\n        result.start.assign(HOUR, hour);\n        result.start.assign(MINUTE, minute);\n\n        if (meridiem >= 0) {\n            result.start.assign(MERIDIEM, meridiem);\n        } else {\n            if (hour < 12) {\n                result.start.imply(MERIDIEM, 0);\n            } else {\n                result.start.imply(MERIDIEM, 1);\n            }\n        }\n\n        return true;\n    }\n\n    private extractSecondChunk(text: string, result: ParsedResult): boolean {\n        const match: RegExpExecArray | null = this.END_PATTERN.exec(text.substring(result.index + result.text.length));\n\n        if (!match) {\n            return false;\n        }\n\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\n        if (match[0].match(this.OTHER_PATTERNS[1])) {\n            return true;\n        }\n\n        const time: Time | false = this.getTime(match);\n        if (!time) {\n            return true;\n        }\n\n        let [hour, minute, second, millisecond, meridiem]: Time = time;\n\n        if (!result.end) {\n            result.end = new ParsedComponents(undefined, result.start.date());\n        }\n\n        if (second > -1) {\n            result.end.assign(SECOND, second);\n        }\n\n        if (millisecond > -1) {\n            result.end.assign(MILLISECOND, millisecond);\n        }\n\n        // ----- AM & PM\n        if (match[this.AM_PM_HOUR_GROUP]) {\n\n            if (hour > 12) return false;\n\n            const ampm: string = match[this.AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm === 'a') {\n                meridiem = 0;\n                if (hour === 12) {\n                    hour = 0;\n                    if (!result.end.isCertain(DAY)) {\n                        result.end.imply(DAY, result.end.get(DAY) + 1);\n                    }\n                }\n            }\n\n            if (ampm === 'p') {\n                meridiem = 1;\n                if (hour !== 12) hour += 12;\n            }\n\n            if (!result.start.isCertain(MERIDIEM)) {\n                if (meridiem === 0) {\n                    result.start.imply(MERIDIEM, 0);\n\n                    if (result.start.get(HOUR) === 12) {\n                        result.start.assign(HOUR, 0);\n                    }\n                } else {\n                    result.start.imply(MERIDIEM, 1);\n\n                    if (result.start.get(HOUR) !== 12) {\n                        result.start.assign(HOUR, result.start.get(HOUR) + 12);\n                    }\n                }\n            }\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign(HOUR, hour);\n        result.end.assign(MINUTE, minute);\n        if (meridiem >= 0) {\n            result.end.assign(MERIDIEM, meridiem);\n        } else {\n            const startAtPM: boolean = result.start.isCertain(MERIDIEM) && result.start.get(MERIDIEM) === 1;\n            if (startAtPM && result.start.get(HOUR) > hour) {\n                // 10pm - 1 (am)\n                result.end.imply(MERIDIEM, 0);\n\n            } else if (hour > 12) {\n                result.end.imply(MERIDIEM, 1);\n            }\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply(DAY, result.end.get(DAY) + 1)\n        }\n\n        return true;\n    }\n\n    private getTime(match: RegExpExecArray): Time | false {\n        let millisecond: number = -1;\n        let second: number = -1;\n        let hour: number = 0;\n        let minute: number = 0;\n        let meridiem: number = -1;\n\n\n        // ----- Millisecond\n        if (match[this.MILLI_SECOND_GROUP]) {\n            millisecond = parseInt(match[this.MILLI_SECOND_GROUP].substr(0, 3), 10);\n            if (millisecond >= 1000) return false;\n        }\n\n        // ----- Second\n        if (match[this.SECOND_GROUP]) {\n            second = parseInt(match[this.SECOND_GROUP], 10);\n            if (second >= 60) return false;\n        }\n\n        // ----- Hours\n        if (match[this.HOUR_GROUP].toLowerCase() === 'noon') {\n            meridiem = 1;\n            hour = 12;\n        } else if (match[this.HOUR_GROUP].toLowerCase() === 'midnight') {\n            meridiem = 0;\n            hour = 0;\n        } else {\n            hour = parseInt(match[this.HOUR_GROUP], 10);\n        }\n\n        // ----- Minutes\n        if (match[this.MINUTE_GROUP]) {\n            minute = parseInt(match[this.MINUTE_GROUP], 10);\n        } else if (hour > 100) {\n            minute = hour % 100;\n            hour = Math.floor(hour / 100);\n        }\n\n        if (minute >= 60) {\n            return false;\n        }\n\n        if (hour > 24) {\n            return false;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        return [hour, minute, second, millisecond, meridiem];\n    }\n}","import Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MINUTE, MONTH, SECOND, WEEKDAY, YEAR} from \"../../constants\";\nimport {\n    extractDateTimeUnitFragments,\n    FragmentMap,\n    FragmentName,\n    TIME_UNIT_PATTERN,\n    TIME_UNIT_STRICT_PATTERN\n} from \"../../utils/EN\";\nimport * as moment from \"moment\";\nimport {Moment} from \"moment\";\n\nexport default class ENTimeLaterFormatParser extends Parser {\n    private PATTERN: RegExp = new RegExp('' +\n        '(\\\\W|^)' +\n        '(' + TIME_UNIT_PATTERN + ')' +\n        '(?:later|after|from now|henceforth|forward|out)(?=(?:\\\\W|$))', 'i');\n\n    private STRICT_PATTERN: RegExp = new RegExp('' +\n        '(\\\\W|^)' +\n        '(' + TIME_UNIT_STRICT_PATTERN + ')' +\n        '(?:later|from now)(?=(?:\\\\W|$))', 'i');\n\n    private TAG: string = 'ENTimeLaterFormatParser';\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /\\w/\n    ];\n\n    pattern(): RegExp {\n        return this.isStrictMode() ? this.STRICT_PATTERN : this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        if (match.index > 0 && text[match.index - 1].match(this.OTHER_PATTERNS[0])) return null;\n\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        const momentRef: Moment = moment(ref);\n        const fragments: FragmentMap = extractDateTimeUnitFragments(match[2]);\n\n        (Object.keys(fragments) as FragmentName[]).forEach((fragment: FragmentName) => {\n            momentRef.add(fragments[fragment]!, fragment);\n        });\n\n        if ((fragments['hour'] || 0) > 0 || (fragments['minute'] || 0) > 0 || (fragments['second'] || 0) > 0) {\n            result.start.assign(HOUR, momentRef.hour());\n            result.start.assign(MINUTE, momentRef.minute());\n            result.start.assign(SECOND, momentRef.second());\n        }\n\n        if ((fragments['d'] || 0) > 0 || (fragments['month'] || 0) > 0 || (fragments['year'] || 0) > 0) {\n            result.start.assign(DAY, momentRef.date());\n            result.start.assign(MONTH, momentRef.month() + 1);\n            result.start.assign(YEAR, momentRef.year());\n        } else {\n            if ((fragments['week'] || 0) > 0) {\n                result.start.imply(WEEKDAY, momentRef.day());\n            }\n\n            result.start.imply(DAY, momentRef.date());\n            result.start.imply(MONTH, momentRef.month() + 1);\n            result.start.imply(YEAR, momentRef.year());\n        }\n\n        return result;\n    }\n}\n","import Parser from '../parser';\nimport {ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {WEEKDAY_OFFSET} from '../../utils/EN';\nimport {Modifier, updateParsedComponent} from '../../utils/general';\n\nexport default class ENWeekdayParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\n        '(?:on\\\\s*?)?' +\n        '(?:(this|last|past|next)\\\\s*)?' +\n        '(' + Object.keys(WEEKDAY_OFFSET).join('|') + ')' +\n        '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\n        '(?:\\\\s*(this|last|past|next)\\\\s*week)?' +\n        '(?=\\\\W|$)', 'i');\n\n    private PREFIX_GROUP: number = 2;\n    private WEEKDAY_GROUP: number = 3;\n    private POSTFIX_GROUP: number = 4;\n\n    private TAG: string = 'ENWeekdayParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const matchedText: string = match[0].substr(match[1].length, match[0].length - match[1].length);\n        const result: ParsedResult = new ParsedResult({\n            text: matchedText,\n            index,\n            ref,\n        });\n\n        const offset: number | undefined = WEEKDAY_OFFSET[match[this.WEEKDAY_GROUP].toLowerCase()];\n        if (offset === undefined) return null;\n\n        const prefix: string = match[this.PREFIX_GROUP];\n        const postfix: string = match[this.POSTFIX_GROUP];\n        const norm: string = (prefix || postfix || '').toLowerCase();\n\n        let modifier: Modifier = Modifier.UNKNOWN;\n        if (norm === 'this') {\n            modifier = Modifier.THIS;\n        } else if (norm === 'last' || norm === 'past') {\n            modifier = Modifier.LAST;\n        } else if (norm === 'next') {\n            modifier = Modifier.NEXT;\n        }\n\n        result.tags[this.TAG] = true;\n\n        updateParsedComponent(result, ref, offset, modifier);\n\n        return result;\n    }\n}","import * as moment from \"moment\";\nimport {Moment} from \"moment\";\nimport Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MERIDIEM, MILLISECOND, MINUTE, MONTH, SECOND, YEAR} from \"../../constants\";\n\n/*\n  Valid patterns:\n  - esta mañana -> today in the morning\n  - esta tarde -> today in the afternoon/evening\n  - esta noche -> tonight\n  - ayer por la mañana -> yesterday in the morning\n  - ayer por la tarde -> yesterday in the afternoon/evening\n  - ayer por la noche -> yesterday at night\n  - mañana por la mañana -> tomorrow in the morning\n  - mañana por la tarde -> tomorrow in the afternoon/evening\n  - mañana por la noche -> tomorrow at night\n  - anoche -> tomorrow at night\n  - hoy -> today\n  - ayer -> yesterday\n  - mañana -> tomorrow\n */\n\nexport default class ESCasualDateParser extends Parser {\n    private PATTERN: RegExp = /(\\W|^)(ahora|esta\\s*(mañana|tarde|noche)|(ayer|mañana)\\s*por\\s*la\\s*(mañana|tarde|noche)|hoy|mañana|ayer|anoche)(?=\\W|$)/i;\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /por\\s*la/,\n        /ahora/\n    ];\n\n    private TAG: string = 'ESCasualDateParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length),\n            index,\n            ref\n        });\n\n        const refMoment: Moment = moment(ref);\n        const startMoment: Moment = refMoment.clone();\n        const matchedText = result.text.toLowerCase();\n\n        if (matchedText === 'mañana') {\n            // Check not \"Tomorrow\" on late night\n            if (refMoment.hour() > 1) {\n                startMoment.add(1, 'day');\n            }\n        } else if (matchedText === 'ayer') {\n            startMoment.add(-1, 'day');\n        } else if (matchedText === 'anoche') {\n            result.start.imply(HOUR, 0);\n            if (refMoment.hour() > 6) {\n                startMoment.add(-1, 'day');\n            }\n        } else if (matchedText.match(\"esta\")) {\n            const secondMatch: string = match[3].toLowerCase();\n            if (secondMatch === \"tarde\") {\n                result.start.imply(HOUR, 18);\n            } else if (secondMatch === \"mañana\") {\n                result.start.imply(HOUR, 6);\n            } else if (secondMatch === \"noche\") {\n                // Normally means this coming midnight\n                result.start.imply(HOUR, 22);\n                result.start.imply(MERIDIEM, 1);\n            }\n        } else if (matchedText.match(this.OTHER_PATTERNS[0])) {\n            const firstMatch: string = match[4].toLowerCase();\n            if (firstMatch === 'ayer') {\n                startMoment.add(-1, 'day');\n            } else if (firstMatch === 'mañana') {\n                startMoment.add(1, 'day');\n            }\n            const secondMatch: string = match[5].toLowerCase();\n            if (secondMatch === \"tarde\") {\n                result.start.imply(HOUR, 18);\n            } else if (secondMatch === \"mañana\") {\n                result.start.imply(HOUR, 9);\n            } else if (secondMatch === \"noche\") {\n                // Normally means this coming midnight\n                result.start.imply(HOUR, 22);\n                result.start.imply(MERIDIEM, 1);\n            }\n        } else if (matchedText.match(this.OTHER_PATTERNS[1])) {\n            result.start.imply(HOUR, refMoment.hour());\n            result.start.imply(MINUTE, refMoment.minute());\n            result.start.imply(SECOND, refMoment.second());\n            result.start.imply(MILLISECOND, refMoment.millisecond());\n        }\n\n        result.start.assign(DAY, startMoment.date());\n        result.start.assign(MONTH, startMoment.month() + 1);\n        result.start.assign(YEAR, startMoment.year());\n        result.tags[this.TAG] = true;\n\n        return result;\n    }\n}","import Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport * as moment from \"moment\";\nimport {UnitOfTime} from \"../../constants\";\nimport {deadlineCalculations} from \"../../utils/general\";\nimport {matchNumber, matchUnit} from \"../../utils/ES\";\n\nexport default class ESDeadlineFormatParser extends Parser {\n    private PATTERN: RegExp = /(\\W|^)(dentro\\s*de|en)\\s*([0-9]+|medi[oa]|una?)\\s*(minutos?|horas?|d[ií]as?)\\s*(?=(?:\\W|$))/i;\n\n    private NUM_MATCH: number = 3;\n    private UNIT_MATCH: number = 4;\n\n    private TAG: string = 'ESDeadlineFormatParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        const num: number = matchNumber(match[this.NUM_MATCH].toLowerCase());\n        const matchedUnit: UnitOfTime | undefined = matchUnit(match[this.UNIT_MATCH].toLowerCase());\n\n        if (num && matchedUnit && deadlineCalculations(num, matchedUnit, result, moment(ref))) {\n            return result;\n        }\n\n        return null;\n    }\n}","import Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {MONTH_OFFSET, WEEKDAY_OFFSET, yearCalculation} from \"../../utils/ES\";\nimport {DAY, MONTH, WEEKDAY, YEAR} from \"../../constants\";\nimport {getAppropriateYear} from \"../../utils/general\";\n\nexport default class ESMonthNameLittleEndianParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(?:(Domingo|Lunes|Martes|Miércoles|Miercoles|Jueves|Viernes|Sábado|Sabado|Dom|Lun|Mar|Mie|Jue|Vie|Sab)\\\\s*,?\\\\s*)?' +\n        '([0-9]{1,2})(?:º|ª|°)?' +\n        '(?:\\\\s*(?:desde|de|\\\\-|\\\\–|al?|hasta|\\\\s)\\\\s*([0-9]{1,2})(?:º|ª|°)?)?\\\\s*(?:de)?\\\\s*' +\n        '(Ene(?:ro|\\\\.)?|Feb(?:rero|\\\\.)?|Mar(?:zo|\\\\.)?|Abr(?:il|\\\\.)?|May(?:o|\\\\.)?|Jun(?:io|\\\\.)?|Jul(?:io|\\\\.)?|Ago(?:sto|\\\\.)?|Sep(?:tiembre|\\\\.)?|Set(?:iembre|\\\\.)?|Oct(?:ubre|\\\\.)?|Nov(?:iembre|\\\\.)?|Dic(?:iembre|\\\\.)?)' +\n        '(?:\\\\s*(?:del?)?(\\\\s*[0-9]{1,4}(?![^\\\\s]\\\\d))(\\\\s*[ad]\\\\.?\\\\s*c\\\\.?|a\\\\.?\\\\s*d\\\\.?)?)?' +\n        '(?=\\\\W|$)', 'i'\n    );\n\n    private WEEKDAY_GROUP: number = 2;\n    private DATE_GROUP: number = 3;\n    private DATE_TO_GROUP: number = 4;\n    private MONTH_NAME_GROUP: number = 5;\n    private YEAR_GROUP: number = 6;\n    private YEAR_BE_GROUP: number = 7;\n\n    private TAG: string = 'ESMonthNameLittleEndianParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        const month: number = MONTH_OFFSET[match[this.MONTH_NAME_GROUP].toLowerCase()];\n\n        if (!(month || month === 0)) {\n            return null;\n        }\n\n        const day: number = parseInt(match[this.DATE_GROUP], 10);\n\n        if (!day) {\n            return null;\n        }\n\n        result.start.assign(DAY, day);\n        result.start.assign(MONTH, month);\n\n        let year: number | null = yearCalculation(match[this.YEAR_GROUP], match[this.YEAR_BE_GROUP]);\n\n        if (year) {\n            result.start.assign(YEAR, year);\n        } else {\n            getAppropriateYear(result.start, ref);\n        }\n\n        // Weekday component\n        if (match[this.WEEKDAY_GROUP]) {\n            const weekday: number = WEEKDAY_OFFSET[match[this.WEEKDAY_GROUP].toLowerCase()];\n            if (weekday || weekday === 0) {\n                result.start.assign(WEEKDAY, weekday);\n            }\n        }\n\n        // Text can be 'range' value. Such as '12 - 13 January 2012'\n        if (match[this.DATE_TO_GROUP]) {\n            const endDate = parseInt(match[this.DATE_TO_GROUP], 10);\n\n            if (endDate) {\n                result.end = result.start.clone();\n                result.end.assign(DAY, endDate);\n            }\n        }\n\n        return result;\n    }\n}","/*\n    Date format with slash \"/\" (also \"-\" and \".\") between numbers\n    - Martes 3/11/2015\n    - 3/11/2015\n    - 3/11\n*/\n\nimport Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, MONTH, WEEKDAY, YEAR} from \"../../constants\";\nimport {WEEKDAY_OFFSET} from \"../../utils/ES\";\nimport {checkMonthDaysValid} from \"../../utils/general\";\nimport * as moment from 'moment';\n\nexport default class ESSlashDateFormatParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(?:' +\n        '((?:domingo|dom|lunes|lun|martes|mar|mi[ée]rcoles|mie|jueves|jue|viernes|vie|s[áa]bado|sab))' +\n        '\\\\s*\\\\,?\\\\s*' +\n        ')?' +\n        '([0-1]{0,1}[0-9]{1})[\\\\/\\\\.\\\\-]([0-3]{0,1}[0-9]{1})' +\n        '(?:' +\n        '[\\\\/\\\\.\\\\-]' +\n        '([0-9]{4}\\s*\\,?\\s*|[0-9]{2}\\s*\\,?\\s*)' +\n        ')?' +\n        '(\\\\W|$)', 'i');\n\n    private OPENING_GROUP: number = 1;\n    private ENDING_GROUP: number = 6;\n\n    private WEEKDAY_GROUP: number = 2;\n    private MONTH_GROUP: number = 4;\n    private DAY_GROUP: number = 3;\n    private YEAR_GROUP: number = 5;\n\n    private TAG: string = 'ESSlashDateFormatParser';\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /^\\d\\.\\d$/,\n        /^\\d\\.\\d{1,2}\\.\\d{1,2}$/\n    ];\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        if (match[this.OPENING_GROUP] == '/' || match[this.ENDING_GROUP] == '/') {\n            // Long skip, if there is some overlapping like:\n            // XX[/YY/ZZ]\n            // [XX/YY/]ZZ\n            match.index += match[0].length;\n            return null;\n        }\n\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[this.OPENING_GROUP].length, match[0].length - match[this.ENDING_GROUP].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n        const matchedText: string = result.text.toLowerCase();\n\n        if (matchedText.match(this.OTHER_PATTERNS[0]) || matchedText.match(this.OTHER_PATTERNS[1])) {\n            return null;\n        }\n\n        // MM/dd -> OK\n        // MM.dd -> NG\n        if (!match[this.YEAR_GROUP] && match[0].indexOf('/') < 0) {\n            return null;\n        }\n\n        let year: number = match[this.YEAR_GROUP] ? parseInt(match[this.YEAR_GROUP], 10) : moment(ref).year();\n        let month: number = parseInt(match[this.MONTH_GROUP], 10);\n        let day: number = parseInt(match[this.DAY_GROUP], 10);\n\n        if (month < 1 || day < 1 || day > 31) {\n            return null\n        }\n\n        if (year < 100) {\n            if (year > 50) {\n                year = year + 1900;\n            } else {\n                year = year + 2000;\n            }\n        }\n\n        if (month > 12) {\n            if (month <= 31 && day <= 12 && checkMonthDaysValid(month, day, year)) {\n                [month, day] = [day, month];\n            } else {\n                return null;\n            }\n        }\n\n        result.start.assign(DAY, day);\n        result.start.assign(MONTH, month);\n        if (match[this.YEAR_GROUP]) {\n            result.start.assign(YEAR, year);\n        } else {\n            result.start.imply(YEAR, year);\n        }\n\n        if (match[this.WEEKDAY_GROUP]) {\n            result.start.assign(WEEKDAY, WEEKDAY_OFFSET[match[this.WEEKDAY_GROUP].toLowerCase()]);\n        }\n\n        return result;\n    }\n}","import Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MINUTE, MONTH, UnitOfTime, WEEK, WEEKDAY, YEAR} from \"../../constants\";\nimport {matchNumber, matchUnit} from \"../../utils/ES\";\nimport * as moment from \"moment\";\nimport {Moment} from \"moment\";\n\nenum Mode {\n    NONE,\n    TIME,\n    WEEK,\n    DATE\n}\n\nexport default class ESTimeAgoFormatParser extends Parser {\n    private PATTERN: RegExp = /(\\W|^)hace\\s*([0-9]+|medi[oa]|una?)\\s*(minutos?|horas?|semanas?|d[ií]as?|mes(es)?|años?)(?=(?:\\W|$))/i;\n\n    private TAG: string = 'ESTimeAgoFormatParser';\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /\\w/\n    ];\n\n    private NUM_MATCH: number = 2;\n    private UNIT_MATCH: number = 3;\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        if (match.index > 0 && text[match.index - 1].match(this.OTHER_PATTERNS[0])) return null;\n\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        const num: number = matchNumber(match[this.NUM_MATCH]);\n        const matchedUnit: UnitOfTime | undefined = matchUnit(match[this.UNIT_MATCH].toLowerCase());\n        let mode: Mode = Mode.NONE;\n        const momentRef: Moment = moment(ref);\n\n        switch (matchedUnit) {\n            case HOUR:\n                momentRef.add(-num, 'hour');\n                mode = Mode.TIME;\n                break;\n            case MINUTE:\n                momentRef.add(-num, 'minute');\n                mode = Mode.TIME;\n                break;\n            case WEEK:\n                momentRef.add(-num, 'week');\n                mode = Mode.WEEK;\n                break;\n            case DAY:\n                momentRef.add(-num, 'd');\n                mode = Mode.DATE;\n                break;\n            case MONTH:\n                momentRef.add(-num, 'month');\n                mode = Mode.DATE;\n                break;\n            case YEAR:\n                momentRef.add(-num, 'year');\n                mode = Mode.DATE;\n                break;\n            default:\n                return null;\n        }\n\n        switch (mode) {\n            case Mode.TIME:\n                result.start.imply(DAY, momentRef.date());\n                result.start.imply(MONTH, momentRef.month() + 1);\n                result.start.imply(YEAR, momentRef.year());\n                result.start.assign(HOUR, momentRef.hour());\n                result.start.assign(MINUTE, momentRef.minute());\n                break;\n            case Mode.DATE:\n                result.start.assign(DAY, momentRef.date());\n                result.start.assign(MONTH, momentRef.month() + 1);\n                result.start.assign(YEAR, momentRef.year());\n                break;\n            case Mode.WEEK:\n                result.start.imply(DAY, momentRef.date());\n                result.start.imply(MONTH, momentRef.month() + 1);\n                result.start.imply(YEAR, momentRef.year());\n                result.start.imply(WEEKDAY, momentRef.day());\n                break;\n            default:\n                return null;\n        }\n\n        return result;\n    }\n}","import Parser from '../parser';\nimport {ParsedComponents, ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MERIDIEM, MINUTE, MONTH, SECOND, YEAR} from \"../../constants\";\nimport * as moment from \"moment\";\nimport {Moment} from \"moment\";\n\ntype Time = [number, number, number, number];\n\nexport default class ESTimeExpressionParser extends Parser {\n    private PATTERN: RegExp = new RegExp(\"(^|\\\\s|T)\" +\n    \"(?:(?:a las?|al?|desde|de)\\\\s*)?\" +\n    \"(\\\\d{1,4}|mediod[ií]a|medianoche)\" +\n    \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \"(?:\" +\n            \"(?:\\\\:|\\\\：)(\\\\d{2})\" +\n        \")?\" +\n    \")?\" +\n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" +\n    \"(?=\\\\W|$)\", 'i');\n\n    private END_PATTERN: RegExp = new RegExp(\"^\\\\s*\" +\n    \"(\\\\-|\\\\–|\\\\~|\\\\〜|a(?:\\s*las)?|\\\\?)\\\\s*\" +\n    \"(\\\\d{1,4})\" +\n    \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \"(?:\" +\n            \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \")?\" +\n    \")?\" +\n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" +\n    \"(?=\\\\W|$)\", 'i');\n\n    private HOUR_GROUP = 2;\n    private MINUTE_GROUP = 3;\n    private SECOND_GROUP = 4;\n    private AM_PM_HOUR_GROUP = 5;\n\n    private TAG: string = 'ESTimeExpressionParser';\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /\\w/,\n        /^\\s*([+\\-])\\s*\\d{3,4}$/,\n        /^\\d+$/,\n        /mediod/\n    ];\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index - 1].match(this.OTHER_PATTERNS[0])) return null;\n\n        const refMoment: Moment = moment(ref);\n\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substring(match[1].length),\n            index: match.index + match[1].length,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        result.start.imply(DAY, refMoment.date());\n        result.start.imply(MONTH, refMoment.month() + 1);\n        result.start.imply(YEAR, refMoment.year());\n\n        if (!this.extractFirstChunk(result, match)) {\n            return null;\n        }\n\n        if (!this.extractSecondChunk(text, result) && result.text.match(this.OTHER_PATTERNS[2])) {\n            return null;\n        }\n\n        return result;\n    }\n\n    private extractFirstChunk(result: ParsedResult, match: RegExpExecArray): boolean {\n        const time: Time | false = this.getTime(match);\n        if (!time) {\n            return false;\n        }\n\n        let [hour, minute, second, meridiem]: Time = time;\n\n        if (second > -1) {\n            result.start.assign(SECOND, second);\n        }\n\n\n        // ----- AM & PM\n        if (match[this.AM_PM_HOUR_GROUP]) {\n            if (hour > 12) return false;\n            const ampm: string = match[this.AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm === 'a') {\n                meridiem = 0;\n                if (hour === 12) hour = 0;\n            } else if (ampm === 'p') {\n                meridiem = 1;\n                if (hour !== 12) hour += 12;\n            }\n        }\n\n        result.start.assign(HOUR, hour);\n        result.start.assign(MINUTE, minute);\n\n        if (meridiem >= 0) {\n            result.start.assign(MERIDIEM, meridiem);\n        } else {\n            if (hour < 12) {\n                result.start.imply(MERIDIEM, 0);\n            } else {\n                result.start.imply(MERIDIEM, 1);\n            }\n        }\n\n        return true;\n    }\n\n    private extractSecondChunk(text: string, result: ParsedResult): boolean {\n        const match: RegExpExecArray | null = this.END_PATTERN.exec(text.substring(result.index + result.text.length));\n\n        if (!match) {\n            return false;\n        }\n\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\n        if (match[0].match(this.OTHER_PATTERNS[1])) {\n            return true;\n        }\n\n        const time: Time | false = this.getTime(match);\n        if (!time) {\n            return true;\n        }\n\n        let [hour, minute, second, meridiem]: Time = time;\n\n        if (!result.end) {\n            result.end = new ParsedComponents(undefined, result.start.date());\n        }\n\n        if (second > -1) {\n            result.end.assign(SECOND, second);\n        }\n\n        // ----- AM & PM\n        if (match[this.AM_PM_HOUR_GROUP]) {\n\n            if (hour > 12) return false;\n\n            const ampm: string = match[this.AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm === 'a') {\n                meridiem = 0;\n                if (hour === 12) {\n                    hour = 0;\n                    if (!result.end.isCertain(DAY)) {\n                        result.end.imply(DAY, result.end.get(DAY) + 1);\n                    }\n                }\n            }\n\n            if (ampm === 'p') {\n                meridiem = 1;\n                if (hour !== 12) hour += 12;\n            }\n\n            if (!result.start.isCertain(MERIDIEM)) {\n                if (meridiem === 0) {\n                    result.start.imply(MERIDIEM, 0);\n\n                    if (result.start.get(HOUR) === 12) {\n                        result.start.assign(HOUR, 0);\n                    }\n                } else {\n                    result.start.imply(MERIDIEM, 1);\n\n                    if (result.start.get(HOUR) !== 12) {\n                        result.start.assign(HOUR, result.start.get(HOUR) + 12);\n                    }\n                }\n            }\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign(HOUR, hour);\n        result.end.assign(MINUTE, minute);\n        if (meridiem >= 0) {\n            result.end.assign(MERIDIEM, meridiem);\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply(DAY, result.end.get(DAY) + 1);\n        }\n\n        return true;\n    }\n\n    private getTime(match: RegExpExecArray): Time | false {\n        let second: number = -1;\n        let hour: number = 0;\n        let minute: number = 0;\n        let meridiem: number = -1;\n\n        // ----- Second\n        if (match[this.SECOND_GROUP]) {\n            second = parseInt(match[this.SECOND_GROUP], 10);\n            if (second >= 60) return false;\n        }\n\n        // ----- Hours\n        if (match[this.HOUR_GROUP].toLowerCase().match(this.OTHER_PATTERNS[3])) {\n            meridiem = 1;\n            hour = 12;\n        } else if (match[this.HOUR_GROUP].toLowerCase() === 'medianoche') {\n            meridiem = 0;\n            hour = 0;\n        } else {\n            hour = parseInt(match[this.HOUR_GROUP], 10);\n        }\n\n        // ----- Minutes\n        if (match[this.MINUTE_GROUP]) {\n            minute = parseInt(match[this.MINUTE_GROUP], 10);\n        } else if (hour > 100) {\n            minute = hour % 100;\n            hour = Math.floor(hour / 100);\n        }\n\n        if (minute >= 60) {\n            return false;\n        }\n\n        if (hour > 24) {\n            return false;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        return [hour, minute, second, meridiem];\n    }\n}","import Parser from '../parser';\nimport {ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {WEEKDAY_OFFSET} from '../../utils/ES';\nimport {Modifier, updateParsedComponent} from '../../utils/general';\n\nexport default class ESWeekdayParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\n        '(?:(este|pasado|pr[oó]ximo)\\\\s*)?' +\n        '(' + Object.keys(WEEKDAY_OFFSET).join('|') + ')' +\n        '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\n        '(?:\\\\s*(este|pasado|pr[óo]ximo)\\\\s*week)?' +\n        '(?=\\\\W|$)', 'i');\n\n    private PREFIX_GROUP: number = 2;\n    private WEEKDAY_GROUP: number = 3;\n    private POSTFIX_GROUP: number = 4;\n\n    private TAG: string = 'ESWeekdayParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const matchedText: string = match[0].substr(match[1].length, match[0].length - match[1].length);\n        const result: ParsedResult = new ParsedResult({\n            text: matchedText,\n            index,\n            ref,\n        });\n\n        const offset: number | undefined = WEEKDAY_OFFSET[match[this.WEEKDAY_GROUP].toLowerCase()];\n        if (offset === undefined) return null;\n\n        const prefix: string = match[this.PREFIX_GROUP];\n        const postfix: string = match[this.POSTFIX_GROUP];\n        const norm: string = (prefix || postfix || '').toLowerCase();\n\n        let modifier: Modifier = Modifier.UNKNOWN;\n        if (norm== 'este') {\n            modifier = Modifier.THIS;\n        } else if (norm === 'pasado') {\n            modifier = Modifier.LAST;\n        } else if (norm == 'próximo' || norm == 'proximo') {\n            modifier = Modifier.NEXT;\n        }\n\n        result.tags[this.TAG] = true;\n\n        updateParsedComponent(result, ref, offset, modifier);\n\n        return result;\n    }\n}","import * as moment from \"moment\";\nimport {Moment} from \"moment\";\nimport Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MERIDIEM, MILLISECOND, MINUTE, MONTH, SECOND, YEAR} from \"../../constants\";\n\nexport default class FRCasualDateParser extends Parser {\n    private PATTERN: RegExp = /(\\W|^)(maintenant|aujourd'hui|ajd|cette\\s*nuit|la\\s*veille|(demain|hier)(\\s*(matin|soir|aprem|après-midi))?|ce\\s*(matin|soir)|cet\\s*(après-midi|aprem))(?=\\W|$)/i;\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /demain/,\n        /hier/,\n        /cette\\s*nuit/,\n        /la\\s*veille/,\n        /après-midi|aprem/,\n        /soir/,\n        /matin/,\n        /maintenant/\n    ];\n\n    private TAG: string = 'FRCasualDateParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length),\n            index,\n            ref\n        });\n\n        const refMoment: Moment = moment(ref);\n        const startMoment: Moment = refMoment.clone();\n        const matchedText = result.text.toLowerCase();\n\n        if (matchedText.match(this.OTHER_PATTERNS[0])) {\n            if (refMoment.hour() > 1) {\n                startMoment.add(1, 'day');\n            }\n        } else if (matchedText.match(this.OTHER_PATTERNS[1])) {\n            startMoment.add(-1, 'day');\n        } else if (matchedText.match(this.OTHER_PATTERNS[2])) {\n            result.start.imply(HOUR, 22);\n            result.start.imply(MERIDIEM, 1);\n        } else if (matchedText.match(this.OTHER_PATTERNS[3])) {\n            result.start.imply(HOUR, 0);\n            if (refMoment.hour() > 6) {\n                startMoment.add(-1, 'day');\n            }\n        } else if (matchedText.match(this.OTHER_PATTERNS[4])) {\n            result.start.imply(HOUR, 14);\n        } else if (matchedText.match(this.OTHER_PATTERNS[5])) {\n            result.start.imply(HOUR, 18);\n        } else if (matchedText.match(this.OTHER_PATTERNS[6])) {\n            result.start.imply(HOUR, 8);\n        } else if (matchedText.match(this.OTHER_PATTERNS[7])) {\n            result.start.assign(HOUR, refMoment.hour());\n            result.start.assign(MINUTE, refMoment.minute());\n            result.start.assign(SECOND, refMoment.second());\n            result.start.assign(MILLISECOND, refMoment.millisecond());\n\n        }\n\n        result.start.assign(DAY, startMoment.date());\n        result.start.assign(MONTH, startMoment.month() + 1);\n        result.start.assign(YEAR, startMoment.year());\n        result.tags[this.TAG] = true;\n        return result;\n    }\n}","import Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport * as moment from \"moment\";\nimport {UnitOfTime} from \"../../constants\";\nimport {deadlineCalculations} from \"../../utils/general\";\nimport {INTEGER_WORDS_PATTERN, matchNumber, matchUnit} from \"../../utils/FR\";\n\nexport default class FRDeadlineFormatParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(dans|en)\\\\s*' +\n        '('+ INTEGER_WORDS_PATTERN + '|[0-9]+|une?|(?:\\\\s*quelques)?|demi(?:\\\\s*|-?)?)\\\\s*' +\n        '(secondes?|min(?:ute)?s?|heures?|jours?|semaines?|mois|années?)\\\\s*' +\n        '(?=\\\\W|$)', 'i'\n    );\n\n    private STRICT_PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(dans|en)\\\\s*' +\n        '('+ INTEGER_WORDS_PATTERN + '|[0-9]+|un?)\\\\s*' +\n        '(secondes?|minutes?|heures?|jours?)\\\\s*' +\n        '(?=\\\\W|$)', 'i'\n    );\n\n    private NUM_MATCH: number = 3;\n    private UNIT_MATCH: number = 4;\n\n    private TAG: string = 'FRDeadlineFormatParser';\n\n    pattern(): RegExp {\n        return this.isStrictMode()? this.STRICT_PATTERN : this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        const num: number = matchNumber(match[this.NUM_MATCH].toLowerCase());\n        const matchedUnit: UnitOfTime | undefined = matchUnit(match[this.UNIT_MATCH].toLowerCase());\n\n        if (num && matchedUnit && deadlineCalculations(num, matchedUnit, result, moment(ref))) {\n            return result;\n        }\n\n        return null;\n    }\n}","import Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {MONTH_OFFSET, WEEKDAY_OFFSET, yearCalculation} from \"../../utils/FR\";\nimport {DAY, MONTH, WEEKDAY, YEAR} from \"../../constants\";\nimport {getAppropriateYear} from \"../../utils/general\";\n\nexport default class FRMonthNameLittleEndianParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(?:(Dimanche|Lundi|Mardi|mercredi|Jeudi|Vendredi|Samedi|Dim|Lun|Mar|Mer|Jeu|Ven|Sam)\\\\s*,?\\\\s*)?' +\n        '([0-9]{1,2}|1er)' +\n        '(?:\\\\s*(?:au|\\\\-|\\\\–|jusqu\\'au?|\\\\s)\\\\s*([0-9]{1,2})(?:er)?)?\\\\s*(?:de)?\\\\s*' +\n        '(Jan(?:vier|\\\\.)?|F[ée]v(?:rier|\\\\.)?|Mars|Avr(?:il|\\\\.)?|Mai|Juin|Juil(?:let|\\\\.)?|Ao[uû]t|Sept(?:embre|\\\\.)?|Oct(?:obre|\\\\.)?|Nov(?:embre|\\\\.)?|d[ée]c(?:embre|\\\\.)?)' +\n        '(?:\\\\s*(\\\\s*[0-9]{1,4}(?![^\\\\s]\\\\d))(?:\\\\s*(AC|[ap]\\\\.?\\\\s*c(?:h(?:r)?)?\\\\.?\\\\s*n\\\\.?))?)?' +\n        '(?=\\\\W|$)', 'i'\n    );\n\n    private WEEKDAY_GROUP: number = 2;\n    private DATE_GROUP: number = 3;\n    private DATE_TO_GROUP: number = 4;\n    private MONTH_NAME_GROUP: number = 5;\n    private YEAR_GROUP: number = 6;\n    private YEAR_BE_GROUP: number = 7;\n\n    private TAG: string = 'FRMonthNameLittleEndianParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        const month: number = MONTH_OFFSET[match[this.MONTH_NAME_GROUP].toLowerCase()];\n\n        if (!(month || month === 0)) {\n            return null;\n        }\n\n        const day: number = parseInt(match[this.DATE_GROUP], 10);\n\n        if (!day) {\n            return null;\n        }\n\n        result.start.assign(DAY, day);\n        result.start.assign(MONTH, month);\n\n        let year: number | null = yearCalculation(match[this.YEAR_GROUP], match[this.YEAR_BE_GROUP]);\n\n        if (year) {\n            result.start.assign(YEAR, year);\n        } else {\n            getAppropriateYear(result.start, ref);\n        }\n\n        // Weekday component\n        if (match[this.WEEKDAY_GROUP]) {\n            const weekday: number = WEEKDAY_OFFSET[match[this.WEEKDAY_GROUP].toLowerCase()];\n            if (weekday || weekday === 0) {\n                result.start.assign(WEEKDAY, weekday);\n            }\n        }\n\n        // Text can be 'range' value. Such as '12 - 13 January 2012'\n        if (match[this.DATE_TO_GROUP]) {\n            const endDate = parseInt(match[this.DATE_TO_GROUP], 10);\n\n            if (endDate) {\n                result.end = result.start.clone();\n                result.end.assign(DAY, endDate);\n            }\n        }\n\n        return result;\n    }\n}","import * as moment from \"moment\";\nimport {Moment, unitOfTime} from \"moment\";\nimport Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {matchNumber, matchUnit, INTEGER_WORDS_PATTERN} from \"../../utils/FR\";\nimport {DAY, HOUR, MILLISECOND, MINUTE, MONTH, SECOND, UnitOfTime, WEEK, YEAR} from \"../../constants\";\n\n// Force load fr localization data from moment for the locale files to be linkded durning browserify.\n// NOTE: The function moment.defineLocale() also has a side effect that it change global locale\n//  We also need to save and restore the previous locale (see. moment.js, loadLocale)\nconst originalLocale = moment.locale();\nconst ignored = require('moment/locale/fr');\nmoment.locale(originalLocale);\n\nexport default class FRRelativeDateFormatParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(?:les?|la|l\\'|du|des?)\\\\s*' +\n        '('+ INTEGER_WORDS_PATTERN + '|\\\\d+)?\\\\s*' +\n        '(prochaine?s?|derni[eè]re?s?|pass[ée]e?s?|pr[ée]c[ée]dents?|suivante?s?)?\\\\s*' +\n        '(secondes?|min(?:ute)?s?|heures?|jours?|semaines?|mois|trimestres?|années?)\\\\s*' +\n        '(prochaine?s?|derni[eè]re?s?|pass[ée]e?s?|pr[ée]c[ée]dents?|suivante?s?)?' +\n        '(?=\\\\W|$)', 'i'\n    );\n\n    private MULTIPLIER_GROUP: number = 2;\n    private MODIFIER_1_GROUP: number = 3;\n    private RELATIVE_WORD_GROUP: number = 4;\n    private MODIFIER_2_GROUP: number = 5;\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /prochaine?s?|suivants?/,\n        /derni[eè]re?s?|pass[ée]e?s?|pr[ée]c[ée]dents?/\n    ];\n\n    private TAG: string = 'FRRelativeDateFormatParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n\n        const matchedMultiplier: string = match[this.MULTIPLIER_GROUP];\n        const num: number = matchNumber(matchedMultiplier);\n\n        const matchedModifier: string = (match[this.MODIFIER_1_GROUP] || match[this.MODIFIER_2_GROUP] || '').toLowerCase();\n        if (!matchedModifier) {\n            return null;\n        }\n\n        let modifierFactor: number;\n\n        if (this.OTHER_PATTERNS[0].test(matchedModifier)) {\n            modifierFactor = 1;\n        } else if (this.OTHER_PATTERNS[1].test(matchedModifier)) {\n            modifierFactor = -1;\n        } else {\n            return null;\n        }\n\n        const total: number = modifierFactor * (num || 1);\n        let dateFrom: Moment = moment(ref).locale('fr');\n        let dateTo: Moment = dateFrom.clone();\n        const unit: UnitOfTime | undefined = matchUnit((match[this.RELATIVE_WORD_GROUP] || '').toLowerCase());\n\n        if (!unit) {\n            return null;\n        }\n\n        let startOf: unitOfTime.StartOf;\n\n        switch (unit) {\n            case SECOND:\n                dateFrom.add(total, 's');\n                dateTo.add(modifierFactor, 's');\n                startOf = 'second';\n                break;\n            case MINUTE:\n                dateFrom.add(total, 'm');\n                dateTo.add(modifierFactor, 'm');\n                startOf = 'minute';\n                break;\n            case HOUR:\n                dateFrom.add(total, 'h');\n                dateTo.add(modifierFactor, 'h');\n                startOf = 'hour';\n                break;\n            case DAY:\n                dateFrom.add(total, 'd');\n                dateTo.add(modifierFactor, 'd');\n                startOf = 'day';\n                break;\n            case WEEK:\n                dateFrom.add(total, 'w');\n                dateTo.add(modifierFactor, 'w');\n                startOf = 'week';\n                break;\n            case MONTH:\n                dateFrom.add(total, 'M');\n                dateTo.add(modifierFactor, 'M');\n                startOf = 'month';\n                break;\n            case YEAR:\n                dateFrom.add(total, 'y');\n                dateTo.add(modifierFactor, 'y');\n                startOf = 'year';\n                break;\n            default:\n                return null;\n        }\n\n        if (modifierFactor > 0) {\n            [dateFrom, dateTo] = [dateTo, dateFrom];\n        }\n\n        // Get start and end of dates\n        dateFrom.startOf(startOf);\n        dateTo.endOf(startOf);\n\n        result.start.assign(YEAR, dateFrom.year());\n        result.start.assign(MONTH, dateFrom.month() + 1);\n        result.start.assign(DAY, dateFrom.date());\n        result.start.assign(MINUTE, dateFrom.minute());\n        result.start.assign(SECOND, dateFrom.second());\n        result.start.assign(HOUR, dateFrom.hour());\n        result.start.assign(MILLISECOND, dateFrom.millisecond());\n\n        result.end = result.start.clone();\n        result.end.assign(YEAR, dateTo.year());\n        result.end.assign(MONTH, dateTo.month() + 1);\n        result.end.assign(DAY, dateTo.date());\n        result.end.assign(MINUTE, dateTo.minute());\n        result.end.assign(SECOND, dateTo.second());\n        result.end.assign(HOUR, dateTo.hour());\n        result.end.assign(MILLISECOND, dateTo.millisecond());\n\n        return result;\n    }\n}","/*\n    Date format with slash \"/\" (also \"-\" and \".\") between numbers\n    - Martes 3/11/2015\n    - 3/11/2015\n    - 3/11\n*/\nimport Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, MONTH, WEEKDAY, YEAR} from \"../../constants\";\nimport {WEEKDAY_OFFSET} from \"../../utils/FR\";\nimport {checkMonthDaysValid, getAppropriateYear} from \"../../utils/general\";\nimport * as moment from 'moment';\n\nexport default class FRSlashDateFormatParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\W|^)' +\n        '(?:' +\n        '((?:dimanche|dim|lundi|lun|mardi|mar|mercredi|mer|jeudi|jeu|vendredi|ven|samedi|sam|le))' +\n        '\\\\s*\\\\,?\\\\s*' +\n        ')?' +\n        '([0-3]{0,1}[0-9]{1})[\\\\/\\\\.\\\\-]([0-3]{0,1}[0-9]{1})' +\n        '(?:' +\n        '[\\\\/\\\\.\\\\-]' +\n        '([0-9]{4}\\s*\\,?\\s*|[0-9]{2}\\s*\\,?\\s*)' +\n        ')?' +\n        '(\\\\W|$)', 'i');\n\n    private OPENING_GROUP: number = 1;\n    private ENDING_GROUP: number = 6;\n\n    private WEEKDAY_GROUP: number = 2;\n    private MONTH_GROUP: number = 4;\n    private DAY_GROUP: number = 3;\n    private YEAR_GROUP: number = 5;\n\n    private TAG: string = 'FRSlashDateFormatParser';\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /^\\d\\.\\d$/,\n        /^\\d\\.\\d{1,2}\\.\\d{1,2}$/\n    ];\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        if (match[this.OPENING_GROUP] == '/' || match[this.ENDING_GROUP] == '/') {\n            // Long skip, if there is some overlapping like:\n            // XX[/YY/ZZ]\n            // [XX/YY/]ZZ\n            match.index += match[0].length;\n            return null;\n        }\n\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[this.OPENING_GROUP].length, match[0].length - match[this.ENDING_GROUP].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n        const matchedText: string = result.text.toLowerCase();\n\n        if (matchedText.match(this.OTHER_PATTERNS[0]) || matchedText.match(this.OTHER_PATTERNS[1])) {\n            return null;\n        }\n\n        // MM/dd -> OK\n        // MM.dd -> NG\n        if (!match[this.YEAR_GROUP] && match[0].indexOf('/') < 0) {\n            return null;\n        }\n\n        let year: number = match[this.YEAR_GROUP] ? parseInt(match[this.YEAR_GROUP], 10) : moment(ref).year();\n        let month: number = parseInt(match[this.MONTH_GROUP], 10);\n        let day: number = parseInt(match[this.DAY_GROUP], 10);\n\n        if (month < 1 || day < 1 || day > 31) {\n            return null;\n        }\n\n        if (year < 100) {\n            year = year + 2000;\n        }\n\n        if (month > 12) {\n            if (month <= 31 && day <= 12 && checkMonthDaysValid(month, day, year)) {\n                [month, day] = [day, month];\n            } else {\n                return null;\n            }\n        }\n\n        result.start.assign(DAY, day);\n        result.start.assign(MONTH, month);\n        if (match[this.YEAR_GROUP]) {\n            result.start.assign(YEAR, year);\n        } else {\n            getAppropriateYear(result.start, ref);\n        }\n\n        if (match[this.WEEKDAY_GROUP]) {\n            result.start.assign(WEEKDAY, WEEKDAY_OFFSET[match[this.WEEKDAY_GROUP].toLowerCase()]);\n        }\n\n        return result;\n    }\n}","import Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MINUTE, MONTH, UnitOfTime, WEEK, WEEKDAY, YEAR} from \"../../constants\";\nimport {matchNumber, matchUnit} from \"../../utils/FR\";\nimport * as moment from \"moment\";\nimport {Moment} from \"moment\";\n\nenum Mode {\n    NONE,\n    TIME,\n    WEEK,\n    DATE\n}\n\nexport default class FRTimeAgoFormatParser extends Parser {\n    private PATTERN: RegExp = /(\\W|^)il y a\\s*([0-9]+|une?)\\s*(minutes?|heures?|semaines?|jours?|mois|années?|ans?)(?=(?:\\W|$))/i;\n\n    private TAG: string = 'FRTimeAgoFormatParser';\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /\\w/\n    ];\n\n    private NUM_MATCH: number = 2;\n    private UNIT_MATCH: number = 3;\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        if (match.index > 0 && text[match.index - 1].match(this.OTHER_PATTERNS[0])) return null;\n\n        const index: number = match.index + match[1].length;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        const num: number = matchNumber(match[this.NUM_MATCH]);\n        const matchedUnit: UnitOfTime | undefined = matchUnit(match[this.UNIT_MATCH].toLowerCase());\n        let mode: Mode = Mode.NONE;\n        const momentRef: Moment = moment(ref);\n\n        switch (matchedUnit) {\n            case HOUR:\n                momentRef.add(-num, 'hour');\n                mode = Mode.TIME;\n                break;\n            case MINUTE:\n                momentRef.add(-num, 'minute');\n                mode = Mode.TIME;\n                break;\n            case WEEK:\n                momentRef.add(-num, 'week');\n                mode = Mode.WEEK;\n                break;\n            case DAY:\n                momentRef.add(-num, 'd');\n                mode = Mode.DATE;\n                break;\n            case MONTH:\n                momentRef.add(-num, 'month');\n                mode = Mode.DATE;\n                break;\n            case YEAR:\n                momentRef.add(-num, 'year');\n                mode = Mode.DATE;\n                break;\n            default:\n                return null;\n        }\n\n        switch (mode) {\n            case Mode.TIME:\n                result.start.imply(DAY, momentRef.date());\n                result.start.imply(MONTH, momentRef.month() + 1);\n                result.start.imply(YEAR, momentRef.year());\n                result.start.assign(HOUR, momentRef.hour());\n                result.start.assign(MINUTE, momentRef.minute());\n                break;\n            case Mode.DATE:\n                result.start.assign(DAY, momentRef.date());\n                result.start.assign(MONTH, momentRef.month() + 1);\n                result.start.assign(YEAR, momentRef.year());\n                break;\n            case Mode.WEEK:\n                result.start.imply(DAY, momentRef.date());\n                result.start.imply(MONTH, momentRef.month() + 1);\n                result.start.imply(YEAR, momentRef.year());\n                result.start.imply(WEEKDAY, momentRef.day());\n                break;\n            default:\n                return null;\n        }\n\n        return result;\n    }\n}\n","import Parser from '../parser';\nimport {ParsedComponents, ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MERIDIEM, MINUTE, MONTH, SECOND, YEAR} from \"../../constants\";\nimport * as moment from \"moment\";\nimport {Moment} from \"moment\";\n\ntype Time = [number, number, number, number];\n\nexport default class FRTimeExpressionParser extends Parser {\n    private PATTERN: RegExp = new RegExp(\"(^|\\\\s|T)\" +\n        \"(?:(?:[àa])\\\\s*)?\" +\n        \"(\\\\d{1,2}(?:h)?|midi|minuit)\" +\n        \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：|h)(\\\\d{1,2})(?:m)?\" +\n        \"(?:\" +\n        \"(?:\\\\:|\\\\：|m)(\\\\d{0,2})(?:s)?\" +\n        \")?\" +\n        \")?\" +\n        \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" +\n        \"(?=\\\\W|$)\", 'i'\n    );\n\n    private END_PATTERN: RegExp = new RegExp(\"^\\\\s*\" +\n        \"(\\\\-|\\\\–|\\\\~|\\\\〜|[àa]|\\\\?)\\\\s*\" +\n        \"(\\\\d{1,2}(?:h)?)\" +\n        \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：|h)(\\\\d{1,2})(?:m)?\" +\n        \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：|m)(\\\\d{1,2})(?:s)?\" +\n        \")?\" +\n        \")?\" +\n        \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" +\n        \"(?=\\\\W|$)\", 'i'\n    );\n\n    private HOUR_GROUP = 2;\n    private MINUTE_GROUP = 3;\n    private SECOND_GROUP = 4;\n    private AM_PM_HOUR_GROUP = 5;\n\n    private TAG: string = 'FRTimeExpressionParser';\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /\\w/,\n        /^\\s*([+\\-])\\s*\\d{3,4}$/,\n        /^\\d+$/\n    ];\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index - 1].match(this.OTHER_PATTERNS[0])) return null;\n\n        const refMoment: Moment = moment(ref);\n\n        const result: ParsedResult = new ParsedResult({\n            text: match[0].substring(match[1].length),\n            index: match.index + match[1].length,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        result.start.imply(DAY, refMoment.date());\n        result.start.imply(MONTH, refMoment.month() + 1);\n        result.start.imply(YEAR, refMoment.year());\n\n        if (!this.extractFirstChunk(result, match)) {\n            return null;\n        }\n\n        if (!this.extractSecondChunk(text, result) && result.text.match(this.OTHER_PATTERNS[2])) {\n            return null;\n        }\n\n        return result;\n    }\n\n    private extractFirstChunk(result: ParsedResult, match: RegExpExecArray): boolean {\n        const time: Time | false = this.getTime(match);\n        if (!time) {\n            return false;\n        }\n\n        let [hour, minute, second, meridiem]: Time = time;\n\n        if (second > -1) {\n            result.start.assign(SECOND, second);\n        }\n\n\n        // ----- AM & PM\n        if (match[this.AM_PM_HOUR_GROUP]) {\n            if (hour > 12) return false;\n            const ampm: string = match[this.AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm === 'a') {\n                meridiem = 0;\n                if (hour === 12) hour = 0;\n            } else if (ampm === 'p') {\n                meridiem = 1;\n                if (hour !== 12) hour += 12;\n            }\n        }\n\n        result.start.assign(HOUR, hour);\n        result.start.assign(MINUTE, minute);\n\n        if (meridiem >= 0) {\n            result.start.assign(MERIDIEM, meridiem);\n        } else {\n            if (hour < 12) {\n                result.start.imply(MERIDIEM, 0);\n            } else {\n                result.start.imply(MERIDIEM, 1);\n            }\n        }\n\n        return true;\n    }\n\n    private extractSecondChunk(text: string, result: ParsedResult): boolean {\n        const match: RegExpExecArray | null = this.END_PATTERN.exec(text.substring(result.index + result.text.length));\n\n        if (!match) {\n            return false;\n        }\n\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\n        if (match[0].match(this.OTHER_PATTERNS[1])) {\n            return true;\n        }\n\n        const time: Time | false = this.getTime(match);\n        if (!time) {\n            return true;\n        }\n\n        let [hour, minute, second, meridiem]: Time = time;\n\n        if (!result.end) {\n            result.end = new ParsedComponents(undefined, result.start.date());\n        }\n\n        if (second > -1) {\n            result.end.assign(SECOND, second);\n        }\n\n        // ----- AM & PM\n        if (match[this.AM_PM_HOUR_GROUP]) {\n\n            if (hour > 12) return false;\n\n            const ampm: string = match[this.AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm === 'a') {\n                meridiem = 0;\n                if (hour === 12) {\n                    hour = 0;\n                    if (!result.end.isCertain(DAY)) {\n                        result.end.imply(DAY, result.end.get(DAY) + 1);\n                    }\n                }\n            }\n\n            if (ampm === 'p') {\n                meridiem = 1;\n                if (hour !== 12) hour += 12;\n            }\n\n            if (!result.start.isCertain(MERIDIEM)) {\n                if (meridiem === 0) {\n                    result.start.imply(MERIDIEM, 0);\n\n                    if (result.start.get(HOUR) === 12) {\n                        result.start.assign(HOUR, 0);\n                    }\n                } else {\n                    result.start.imply(MERIDIEM, 1);\n\n                    if (result.start.get(HOUR) !== 12) {\n                        result.start.assign(HOUR, result.start.get(HOUR) + 12);\n                    }\n                }\n            }\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign(HOUR, hour);\n        result.end.assign(MINUTE, minute);\n        if (meridiem >= 0) {\n            result.end.assign(MERIDIEM, meridiem);\n        } else {\n            const startAtPM: boolean = result.start.isCertain(MERIDIEM) && result.start.get(MERIDIEM) === 1;\n            if (startAtPM && result.start.get(HOUR) > hour) {\n                // 10pm - 1 (am)\n                result.end.imply(MERIDIEM, 0);\n\n            } else if (hour > 12) {\n                result.end.imply(MERIDIEM, 1);\n            }\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply(DAY, result.end.get(DAY) + 1)\n        }\n\n        return true;\n    }\n\n    private getTime(match: RegExpExecArray): Time | false {\n        let second: number = -1;\n        let hour: number = 0;\n        let minute: number = 0;\n        let meridiem: number = -1;\n\n        // ----- Second\n        if (match[this.SECOND_GROUP]) {\n            second = parseInt(match[this.SECOND_GROUP], 10);\n            if (second >= 60) return false;\n        }\n\n        // ----- Hours\n        if (match[this.HOUR_GROUP].toLowerCase() === 'midi') {\n            meridiem = 1;\n            hour = 12;\n        } else if (match[this.HOUR_GROUP].toLowerCase() === 'minuit') {\n            meridiem = 0;\n            hour = 0;\n        } else {\n            hour = parseInt(match[this.HOUR_GROUP], 10);\n        }\n\n        // ----- Minutes\n        if (match[this.MINUTE_GROUP]) {\n            minute = parseInt(match[this.MINUTE_GROUP], 10);\n        } else if (hour > 100) {\n            minute = hour % 100;\n            hour = Math.floor(hour / 100);\n        }\n\n        if (minute >= 60) {\n            return false;\n        }\n\n        if (hour > 24) {\n            return false;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        return [hour, minute, second, meridiem];\n    }\n}","import Parser from '../parser';\nimport {ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {WEEKDAY_OFFSET} from '../../utils/FR';\nimport {Modifier, updateParsedComponent} from '../../utils/general';\n\nexport default class FRWeekdayParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(\\\\s|^)' +\n        '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\n        '(?:(ce)\\\\s*)?' +\n        '(' + Object.keys(WEEKDAY_OFFSET).join('|') + ')' +\n        '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\n        '(?:\\\\s*(dernier|prochain)\\\\s*)?' +\n        '(?=\\\\W|$)', 'i');\n\n    private PREFIX_GROUP: number = 2;\n    private WEEKDAY_GROUP: number = 3;\n    private POSTFIX_GROUP: number = 4;\n\n    private TAG: string = 'FRWeekdayParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index + match[1].length;\n        const matchedText: string = match[0].substr(match[1].length, match[0].length - match[1].length);\n        const result: ParsedResult = new ParsedResult({\n            text: matchedText,\n            index,\n            ref,\n        });\n\n        const offset: number | undefined = WEEKDAY_OFFSET[match[this.WEEKDAY_GROUP].toLowerCase()];\n        if (offset === undefined) return null;\n\n        const prefix: string = match[this.PREFIX_GROUP];\n        const postfix: string = match[this.POSTFIX_GROUP];\n        const norm: string = (prefix || postfix || '').toLowerCase();\n\n        let modifier: Modifier = Modifier.UNKNOWN;\n        if (norm== 'ce') {\n            modifier = Modifier.THIS;\n        } else if (norm === 'dernier') {\n            modifier = Modifier.LAST;\n        } else if (norm == 'prochain') {\n            modifier = Modifier.NEXT;\n        }\n\n        result.tags[this.TAG] = true;\n\n        updateParsedComponent(result, ref, offset, modifier);\n\n        return result;\n    }\n}","import * as moment from \"moment\";\nimport {Moment} from \"moment\";\nimport Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MERIDIEM, MONTH, YEAR} from \"../../constants\";\n\nexport default class JPCasualDateParser extends Parser {\n    private PATTERN: RegExp = /今日|当日|昨日|明日|今夜|今夕|今晩|今朝/i;\n\n    private TAG: string = 'JPCasualDateParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0],\n            index,\n            ref\n        });\n\n        const refMoment: Moment = moment(ref);\n        const startMoment: Moment = refMoment.clone();\n        const matchedText = result.text;\n\n        if (matchedText === '今夜' || matchedText === '今夕' || matchedText === '今晩') {\n            // Normally means this coming midnight\n            result.start.imply(HOUR, 22);\n            result.start.imply(MERIDIEM, 1);\n        } else if (matchedText === '明日') {\n            // Check not \"Tomorrow\" on late night\n            if (refMoment.hour() > 4) {\n                startMoment.add(1, 'day');\n            }\n        } else if (matchedText === '昨日') {\n            startMoment.add(-1, 'day');\n        } else if (matchedText.match(\"今朝\")) {\n\n            result.start.imply(HOUR, 6);\n            result.start.imply(MERIDIEM, 0);\n        }\n\n        result.start.assign(DAY, startMoment.date());\n        result.start.assign(MONTH, startMoment.month() + 1);\n        result.start.assign(YEAR, startMoment.year());\n        result.tags[this.TAG] = true;\n\n        return result;\n    }\n}","import * as moment from \"moment\";\nimport {Moment} from \"moment\";\nimport Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, MONTH, YEAR} from \"../../constants\";\nimport {toHankaku} from \"../../utils/JP\";\nimport {getAppropriateYear} from \"../../utils/general\";\n\nexport default class JPStandardParser extends Parser {\n    private PATTERN: RegExp = /(?:(同|((昭和|平成)?([0-9０-９]{2,4})))年\\s*)?([0-9０-９]{1,2})月\\s*([0-9０-９]{1,2})日/i;\n\n    private YEAR_GROUP: number = 2;\n    private ERA_GROUP: number = 3;\n    private YEAR_NUMBER_GROUP: number = 4;\n    private MONTH_GROUP: number = 5;\n    private DAY_GROUP: number = 6;\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /同年/\n    ];\n\n    private TAG: string = 'JPStandardParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0],\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n        const startMoment: Moment = moment(ref);\n\n        const month: number = parseInt(toHankaku(match[this.MONTH_GROUP]), 10);\n        const day: number = parseInt(toHankaku(match[this.DAY_GROUP]), 10);\n\n        startMoment.set('date', day);\n        startMoment.set('month', month - 1);\n        result.start.assign(DAY, startMoment.date());\n        result.start.assign(MONTH, startMoment.month() + 1);\n\n        const matchedYear: string = match[this.YEAR_GROUP] || '';\n\n        if (matchedYear.match(this.OTHER_PATTERNS[0])) {\n            result.start.assign(YEAR, startMoment.year());\n        } else if (matchedYear) {\n            let year: number = parseInt(toHankaku(match[this.YEAR_NUMBER_GROUP]), 10);\n            if (match[this.ERA_GROUP] === '平成') {\n                year += 1988;\n            } else if (match[this.ERA_GROUP] === '昭和') {\n                year += 1925;\n            }\n\n            result.start.assign(YEAR, year);\n        } else {\n            getAppropriateYear(result.start, ref);\n        }\n\n        return result;\n    }\n}\n","import * as moment from \"moment\";\nimport {Moment} from \"moment\";\nimport Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MERIDIEM, MILLISECOND, MINUTE, MONTH, SECOND, YEAR} from \"../../constants\";\n\nexport default class ZHHantCasualDateParser extends Parser {\n    private PATTERN: RegExp = new RegExp(\n        '(而家|立(?:刻|即)|即刻)|' +\n        '(今|明|聽|昨|尋|琴)(早|朝|晚)|' +\n        '(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨))|' +\n        '(今|明|聽|昨|尋|琴)(?:日|天)' +\n        '(?:[\\\\s|,|，]*)' +\n        '(?:(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨)))?', 'i');\n\n    private NOW_GROUP: number = 1;\n    private DAY_GROUP_1: number = 2;\n    private TIME_GROUP_1: number = 3;\n    private TIME_GROUP_2: number = 4;\n    private DAY_GROUP_3: number = 5;\n    private TIME_GROUP_3: number = 6;\n\n\n    private TAG: string = 'ZHCasualDateParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0],\n            index,\n            ref\n        });\n\n        const refMoment: Moment = moment(ref);\n        const startMoment: Moment = refMoment.clone();\n\n        if (match[this.NOW_GROUP]) {\n            result.start.imply(HOUR, refMoment.hour());\n            result.start.imply(MINUTE, refMoment.minute());\n            result.start.imply(SECOND, refMoment.second());\n            result.start.imply(MILLISECOND, refMoment.millisecond());\n        } else if (match[this.DAY_GROUP_1]) {\n            const day1: string = match[this.DAY_GROUP_1];\n            const time1: string = match[this.TIME_GROUP_1];\n\n            if (day1 === '明' || day1 === '聽') {\n                // Check not \"Tomorrow\" on late night\n                if (refMoment.hour() > 1) {\n                    startMoment.add(1, 'day');\n                }\n            } else if (day1 === '昨' || day1 === '尋' || day1 === '琴') {\n                startMoment.add(-1, 'day');\n            }\n            if (time1 === '早' || time1 === '朝') {\n                result.start.imply(HOUR, 6);\n            } else if (time1 === '晚') {\n                result.start.imply(HOUR, 22);\n                result.start.imply(MERIDIEM, 1);\n            }\n        } else if (match[this.TIME_GROUP_2]) {\n            const timeString2: string = match[this.TIME_GROUP_2];\n            const time2: string = timeString2[0];\n            if (time2 === '早' || time2 === '朝' || time2 === '上') {\n                result.start.imply(HOUR, 6);\n            } else if (time2 === '下' || time2 === '晏') {\n                result.start.imply(HOUR, 15);\n                result.start.imply(MERIDIEM, 1);\n            } else if (time2 === '中') {\n                result.start.imply(HOUR, 12);\n                result.start.imply(MERIDIEM, 1);\n            } else if (time2 === '夜' || time2 === '晚') {\n                result.start.imply(HOUR, 22);\n                result.start.imply(MERIDIEM, 1);\n            } else if (time2 === '凌') {\n                result.start.imply(HOUR, 0);\n            }\n\n        } else if (match[this.DAY_GROUP_3]) {\n            const day3: string = match[this.DAY_GROUP_3];\n\n            if (day3 === '明' || day3 === '聽') {\n                // Check not \"Tomorrow\" on late night\n                if (refMoment.hour() > 1) {\n                    startMoment.add(1, 'day');\n                }\n            } else if (day3 === '昨' || day3 === '尋' || day3 === '琴') {\n                startMoment.add(-1, 'day');\n            }\n\n\n            const timeString3: string = match[this.TIME_GROUP_3];\n            if (timeString3) {\n                const time3: string = timeString3[0];\n                if (time3 === '早' || time3 === '朝' || time3 === '上') {\n                    result.start.imply(HOUR, 6);\n                } else if (time3 === '下' || time3 === '晏') {\n                    result.start.imply(HOUR, 15);\n                    result.start.imply(MERIDIEM, 1);\n                } else if (time3 === '中') {\n                    result.start.imply(HOUR, 12);\n                    result.start.imply(MERIDIEM, 1);\n                } else if (time3 === '夜' || time3 === '晚') {\n                    result.start.imply(HOUR, 22);\n                    result.start.imply(MERIDIEM, 1);\n                } else if (time3 === '凌') {\n                    result.start.imply(HOUR, 0);\n                }\n            }\n        }\n\n        result.start.assign(DAY, startMoment.date());\n        result.start.assign(MONTH, startMoment.month() + 1);\n        result.start.assign(YEAR, startMoment.year());\n        result.tags[this.TAG] = true;\n\n        return result;\n    }\n}","import * as moment from \"moment\";\nimport {Moment} from \"moment\";\nimport Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, MONTH, YEAR} from \"../../constants\";\nimport {NUMBER, zhStringToNumber, zhStringToYear} from \"../../utils/ZH-Hant\";\n\nexport default class ZHHantDateParser extends Parser {\n    private PATTERN: RegExp = new RegExp(\n        '(\\\\d{2,4}|[' + Object.keys(NUMBER).join('') + ']{2,4})?' +\n        '(?:\\\\s*)' +\n        '(?:年)?' +\n        '(?:[\\\\s|,|，]*)' +\n        '(\\\\d{1,2}|[' + Object.keys(NUMBER).join('') + ']{1,2})' +\n        '(?:\\\\s*)' +\n        '(?:月)' +\n        '(?:\\\\s*)' +\n        '(\\\\d{1,2}|[' + Object.keys(NUMBER).join('') + ']{1,2})?' +\n        '(?:\\\\s*)' +\n        '(?:日|號)?'\n    );\n\n    private YEAR_GROUP: number = 1;\n    private MONTH_GROUP: number = 2;\n    private DAY_GROUP: number = 3;\n\n\n    private TAG: string = 'ZHDateParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0],\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        const startMoment: Moment = moment(ref);\n        const matchedMonth = match[this.MONTH_GROUP];\n        const matchedDay = match[this.DAY_GROUP];\n        const matchedYear = match[this.YEAR_GROUP];\n\n        let month: number = parseInt(matchedMonth, 10);\n        if (isNaN(month)) {\n            month = zhStringToNumber(matchedMonth);\n        }\n\n        result.start.assign(MONTH, month);\n\n        if (matchedDay) {\n            let day: number = parseInt(matchedDay, 10);\n            if (isNaN(day)) {\n                day = zhStringToNumber(matchedDay);\n            }\n            result.start.assign(DAY, day);\n        } else {\n            result.start.assign(DAY, startMoment.date());\n        }\n\n        if (matchedYear) {\n            let year: number = parseInt(matchedYear, 10);\n            if (isNaN(year)) {\n                year = zhStringToYear(matchedYear);\n            }\n            result.start.assign(YEAR, year);\n        } else {\n            result.start.assign(YEAR, startMoment.year());\n        }\n\n        return result;\n    }\n}","import * as moment from \"moment\";\nimport {Moment} from \"moment\";\nimport Parser from '../parser';\nimport {ParsedResult} from '../../result';\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MINUTE, MONTH, SECOND, YEAR} from \"../../constants\";\nimport {NUMBER, zhStringToNumber} from \"../../utils/ZH-Hant\";\n\nexport default class ZHHantDeadlineFormatParser extends Parser {\n    private PATTERN: RegExp = new RegExp(\n        '(\\\\d+|[' + Object.keys(NUMBER).join('') + ']+|半|幾)(?:\\\\s*)' +\n        '(?:個)?' +\n        '(秒(?:鐘)?|分鐘|小時|鐘|日|天|星期|禮拜|月|年)' +\n        '(?:(?:之|過)?後|(?:之)?內)', 'i'\n    );\n\n    private NUMBER_GROUP: number = 1;\n    private UNIT_GROUP: number = 2;\n\n\n    private TAG: string = 'ZHDeadlineFormatParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index;\n        const result: ParsedResult = new ParsedResult({\n            text: match[0],\n            index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        const matchedNumber: string = match[this.NUMBER_GROUP];\n        let number: number = parseInt(matchedNumber, 10);\n\n        if (isNaN(number)) {\n            number = zhStringToNumber(matchedNumber);\n            if (isNaN(number)) {\n                if (matchedNumber === '幾') {\n                    number = 3;\n                } else if (matchedNumber === '半') {\n                    number = 0.5;\n                } else {\n                    return null;\n                }\n            }\n        }\n\n        const date: Moment = moment(ref);\n        const unitAbbr: string = match[this.UNIT_GROUP][0];\n        let dateMode: boolean = false;\n\n        switch (unitAbbr) {\n            case '日':\n            case '天':\n                date.add(number, 'd');\n                dateMode = true;\n                break;\n            case '星':\n            case '禮':\n                date.add(number * 7, 'd');\n                dateMode = true;\n                break;\n            case '月':\n                date.add(number, 'month');\n                dateMode = true;\n                break;\n            case '年':\n                date.add(number, 'year');\n                dateMode = true;\n                break;\n            case '秒':\n                date.add(number, 'second');\n                break;\n            case '分':\n                date.add(number, 'minute');\n                break;\n            case '小':\n            case '鐘':\n                date.add(number, 'hour');\n                break;\n            default:\n                return null;\n        }\n\n        if (dateMode) {\n            result.start.assign(YEAR, date.year());\n            result.start.assign(MONTH, date.month() + 1);\n            result.start.assign(DAY, date.date());\n        } else {\n            result.start.imply(YEAR, date.year());\n            result.start.imply(MONTH, date.month() + 1);\n            result.start.imply(DAY, date.date());\n            result.start.assign(HOUR, date.hour());\n            result.start.assign(MINUTE, date.minute());\n            result.start.assign(SECOND, date.second());\n        }\n\n        return result;\n    }\n}","import Parser from '../parser';\nimport {ParsedComponents, ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MERIDIEM, MINUTE, MONTH, SECOND, YEAR} from \"../../constants\";\nimport * as moment from \"moment\";\nimport {Moment} from \"moment\";\nimport {NUMBER, zhStringToNumber} from \"../../utils/ZH-Hant\";\n\ntype Time = [number, number, number, number];\n\nexport default class ZHHantTimeExpressionParser extends Parser {\n    private PATTERN: RegExp = new RegExp('(?:由|從|自)?' +\n        '(?:' +\n        '(今|明|聽|昨|尋|琴)(早|朝|晚)|' +\n        '(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨))|' +\n        '(今|明|聽|昨|尋|琴)(?:日|天)' +\n        '(?:[\\\\s,，]*)' +\n        '(?:(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨)))?' +\n        ')?' +\n        '(?:[\\\\s,，]*)' +\n        '(?:(\\\\d+|[' + Object.keys(NUMBER).join('') + ']+)(?:\\\\s*)(?:點|時|:|：)' +\n        '(?:\\\\s*)' +\n        '(\\\\d+|半|正|整|[' + Object.keys(NUMBER).join('') + ']+)?(?:\\\\s*)(?:分|:|：)?' +\n        '(?:\\\\s*)' +\n        '(\\\\d+|[' + Object.keys(NUMBER).join('') + ']+)?(?:\\\\s*)(?:秒)?)' +\n        '(?:\\\\s*(A\\.M\\.|P\\.M\\.|AM?|PM?))?', 'i');\n\n    private END_PATTERN: RegExp = new RegExp('(?:\\\\s*(?:到|至|\\\\-|\\\\–|\\\\~|\\\\〜)\\\\s*)' +\n        '(?:' +\n        '(今|明|聽|昨|尋|琴)(早|朝|晚)|' +\n        '(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨))|' +\n        '(今|明|聽|昨|尋|琴)(?:日|天)' +\n        '(?:[\\\\s,，]*)' +\n        '(?:(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨)))?' +\n        ')?' +\n        '(?:[\\\\s,，]*)' +\n        '(?:(\\\\d+|[' + Object.keys(NUMBER).join('') + ']+)(?:\\\\s*)(?:點|時|:|：)' +\n        '(?:\\\\s*)' +\n        '(\\\\d+|半|正|整|[' + Object.keys(NUMBER).join('') + ']+)?(?:\\\\s*)(?:分|:|：)?' +\n        '(?:\\\\s*)' +\n        '(\\\\d+|[' + Object.keys(NUMBER).join('') + ']+)?(?:\\\\s*)(?:秒)?)' +\n        '(?:\\\\s*(A\\.M\\.|P\\.M\\.|AM?|PM?))?', 'i');\n\n    private DAY_GROUP_1: number = 1;\n    private ZH_AM_PM_HOUR_GROUP_1: number = 2;\n    private ZH_AM_PM_HOUR_GROUP_2: number = 3;\n    private DAY_GROUP_3: number = 4;\n    private ZH_AM_PM_HOUR_GROUP_3: number = 5;\n    private HOUR_GROUP: number = 6;\n    private MINUTE_GROUP: number = 7;\n    private SECOND_GROUP: number = 8;\n    private AM_PM_HOUR_GROUP: number = 9;\n\n    private TAG: string = 'ZHTimeExpressionParser';\n\n    private OTHER_PATTERNS: RegExp[] = [\n        /\\w/,\n        /^\\s*([+\\-])\\s*\\d{3,4}$/,\n        /^\\d+$/\n    ];\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index - 1].match(this.OTHER_PATTERNS[0])) return null;\n\n        const refMoment: Moment = moment(ref);\n\n        const result: ParsedResult = new ParsedResult({\n            text: match[0],\n            index: match.index,\n            ref\n        });\n\n        result.tags[this.TAG] = true;\n\n        result.start.imply(DAY, refMoment.date());\n        result.start.imply(MONTH, refMoment.month() + 1);\n        result.start.imply(YEAR, refMoment.year());\n\n        const startMoment: Moment = refMoment.clone();\n\n        if (!this.extractFirstChunk(result, match, refMoment, startMoment)) {\n            return null;\n        }\n\n        const endMoment = startMoment.clone();\n\n        if (!this.extractSecondChunk(text, result, refMoment, endMoment) && result.text.match(this.OTHER_PATTERNS[2])) {\n            return null;\n        }\n\n        return result;\n    }\n\n    private extractFirstChunk(result: ParsedResult, match: RegExpExecArray, refMoment: Moment, startMoment: Moment): boolean {\n        this.getDay(match, result.start, refMoment, startMoment);\n\n        const time: Time | false = this.getTime(match);\n        if (!time) {\n            return false;\n        }\n\n        let [hour, minute, second, meridiem]: Time = time;\n\n        if (second > -1) {\n            result.start.assign(SECOND, second);\n        }\n\n        const gotMeridiem: [number, number] | null = this.getMeridiem(match, meridiem, hour);\n        if (!gotMeridiem) {\n            return false;\n        }\n\n        [meridiem, hour] = gotMeridiem;\n\n        result.start.assign(HOUR, hour);\n        result.start.assign(MINUTE, minute);\n\n        if (meridiem >= 0) {\n            result.start.assign(MERIDIEM, meridiem);\n        } else {\n            if (hour < 12) {\n                result.start.imply(MERIDIEM, 0);\n            } else {\n                result.start.imply(MERIDIEM, 1);\n            }\n        }\n\n        return true;\n    }\n\n    private extractSecondChunk(text: string, result: ParsedResult, refMoment: Moment, endMoment: Moment): boolean {\n        const match: RegExpExecArray | null = this.END_PATTERN.exec(text.substring(result.index + result.text.length));\n\n        if (!match) {\n            return false;\n        }\n\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\n        if (match[0].match(this.OTHER_PATTERNS[1])) {\n            return true;\n        }\n\n        if (!result.end) {\n            result.end = new ParsedComponents(undefined, result.start.date());\n        }\n\n        this.getDay(match, result.end, refMoment, endMoment);\n\n        const time: Time | false = this.getTime(match);\n        if (!time) {\n            return true;\n        }\n\n        let [hour, minute, second, meridiem]: Time = time;\n\n        if (second > -1) {\n            result.end.assign(SECOND, second);\n        }\n\n        const gotMeridiem: [number, number] | null = this.getMeridiem(match, meridiem, hour);\n        if (!gotMeridiem) {\n            return false;\n        }\n\n        [meridiem, hour] = gotMeridiem;\n\n        result.text = result.text + match[0];\n        result.end.assign(HOUR, hour);\n        result.end.assign(MINUTE, minute);\n        if (meridiem >= 0) {\n            result.end.assign(MERIDIEM, meridiem);\n        } else {\n            const startAtPM: boolean = result.start.isCertain(MERIDIEM) && result.start.get(MERIDIEM) === 1;\n            if (startAtPM && result.start.get(HOUR) > hour) {\n                // 10pm - 1 (am)\n                result.end.imply(MERIDIEM, 0);\n\n            } else if (hour > 12) {\n                result.end.imply(MERIDIEM, 1);\n            }\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply(DAY, result.end.get(DAY) + 1)\n        }\n\n        return true;\n    }\n\n    private getTime(match: RegExpExecArray): Time | false {\n        let second: number = -1;\n        let hour: number;\n        let minute: number = 0;\n        let meridiem: number = -1;\n\n        // ----- Second\n        if (match[this.SECOND_GROUP]) {\n            second = parseInt(match[this.SECOND_GROUP], 10);\n            if (isNaN(second)) {\n                second = zhStringToNumber(match[this.SECOND_GROUP]);\n            }\n            if (second >= 60) return false;\n        }\n\n        // ----- Hours\n        hour = parseInt(match[this.HOUR_GROUP], 10);\n        if (isNaN(hour)) {\n            hour = zhStringToNumber(match[this.HOUR_GROUP]);\n        }\n\n        // ----- Minutes\n        if (match[this.MINUTE_GROUP]) {\n            if (match[this.MINUTE_GROUP] === '半') {\n                minute = 30;\n            } else if (match[this.MINUTE_GROUP] === '正' || match[this.MINUTE_GROUP] === '整') {\n                minute = 0;\n            } else {\n                minute = parseInt(match[this.MINUTE_GROUP], 10);\n                if (isNaN(minute)) {\n                    minute = zhStringToNumber(match[this.MINUTE_GROUP]);\n                }\n            }\n        } else if (hour > 100) {\n            minute = hour % 100;\n            hour = Math.floor(hour / 100);\n        }\n\n        if (minute >= 60) {\n            return false;\n        }\n\n        if (hour > 24) {\n            return false;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        return [hour, minute, second, meridiem];\n    }\n\n    private getDay(match: RegExpExecArray, current: ParsedComponents, refMoment: Moment, targetMoment: Moment): void {\n        // ----- Day\n        if (match[this.DAY_GROUP_1]) {\n            const day1: string = match[this.DAY_GROUP_1];\n            if (day1 === '明' || day1 === '聽') {\n                // Check not \"Tomorrow\" on late night\n                if(refMoment.hour() > 1) {\n                    targetMoment.add(1, 'day');\n                }\n            } else if (day1 === '昨' || day1 === '尋' || day1 === '琴') {\n                targetMoment.add(-1, 'day');\n            }\n            current.assign(DAY, targetMoment.date());\n            current.assign(MONTH, targetMoment.month() + 1);\n            current.assign(YEAR, targetMoment.year());\n        } else if (match[this.DAY_GROUP_3]) {\n            const day3: string = match[this.DAY_GROUP_3];\n            if (day3 === '明' || day3 === '聽') {\n                targetMoment.add(1, 'day');\n            } else if (day3 === '昨' || day3 === '尋' || day3 === '琴') {\n                targetMoment.add(-1, 'day');\n            }\n            current.assign(DAY, targetMoment.date());\n            current.assign(MONTH, targetMoment.month() + 1);\n            current.assign(YEAR, targetMoment.year());\n        } else {\n            current.imply(DAY, targetMoment.date());\n            current.imply(MONTH, targetMoment.month() + 1);\n            current.imply(YEAR, targetMoment.year());\n        }\n    }\n\n    private getMeridiem(match: RegExpExecArray, meridiem: number, hour: number): [number, number] | null {\n        // ----- AM & PM\n        if (match[this.AM_PM_HOUR_GROUP]) {\n            if (hour > 12) return null;\n            const ampm: string = match[this.AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm === 'a') {\n                meridiem = 0;\n                if (hour === 12) hour = 0;\n            } else if (ampm === 'p') {\n                meridiem = 1;\n                if (hour !== 12) hour += 12;\n            }\n        } else if (match[this.ZH_AM_PM_HOUR_GROUP_1]) {\n            const ampm: string = match[this.ZH_AM_PM_HOUR_GROUP_1][0];\n            if (ampm === '朝' || ampm === '早') {\n                meridiem = 0;\n                if (hour === 12) hour = 0;\n            } else if (ampm === '晚') {\n                meridiem = 1;\n                if (hour !== 12) hour += 12;\n            }\n        } else if (match[this.ZH_AM_PM_HOUR_GROUP_2]) {\n            const ampm: string = match[this.ZH_AM_PM_HOUR_GROUP_2][0];\n            if (ampm === '上' || ampm === '朝' || ampm === '早' || ampm === '凌') {\n                meridiem = 0;\n                if (hour === 12) hour = 0;\n            } else if (ampm === '下' || ampm === '晏' || ampm === '晚') {\n                meridiem = 1;\n                if (hour !== 12) hour += 12;\n            }\n        } else if (match[this.ZH_AM_PM_HOUR_GROUP_3]) {\n            const ampm: string = match[this.ZH_AM_PM_HOUR_GROUP_3][0];\n            if (ampm === '上' || ampm === '朝' || ampm === '早' || ampm === '凌') {\n                meridiem = 0;\n                if (hour === 12) hour = 0;\n            } else if (ampm === '下' || ampm === '晏' || ampm === '晚') {\n                meridiem = 1;\n                if (hour !== 12) hour += 12;\n            }\n        }\n\n        return [meridiem, hour];\n    }\n}","import Parser from '../parser';\nimport {ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {WEEKDAY_OFFSET} from '../../utils/ZH-Hant';\nimport {Modifier, updateParsedComponent} from '../../utils/general';\n\nexport default class ZHHantWeekdayParser extends Parser {\n    private PATTERN: RegExp = new RegExp(\n        '(上|今|下|這|呢)?' +\n        '(?:個)?' +\n        '(?:星期|禮拜)' +\n        '(' + Object.keys(WEEKDAY_OFFSET).join('|') + ')'\n    );\n\n    private PREFIX_GROUP: number = 1;\n    private WEEKDAY_GROUP: number = 2;\n\n    private TAG: string = 'ZHWeekdayParser';\n\n    pattern(): RegExp {\n        return this.PATTERN;\n    }\n\n    extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null {\n        const index: number = match.index;\n        const matchedText: string = match[0];\n        const result: ParsedResult = new ParsedResult({\n            text: matchedText,\n            index,\n            ref,\n        });\n\n        const offset: number | undefined = WEEKDAY_OFFSET[(match[this.WEEKDAY_GROUP] || '').toLowerCase()];\n        if (offset === undefined) return null;\n\n        const norm: string = (match[this.PREFIX_GROUP] || '').toLowerCase();\n\n        let modifier: Modifier = Modifier.UNKNOWN;\n        if (norm == '今' || norm == '這' || norm == '呢') {\n            modifier = Modifier.THIS;\n        } else if (norm === '上') {\n            modifier = Modifier.LAST;\n        } else if (norm == '下') {\n            modifier = Modifier.NEXT;\n        }\n\n        result.tags[this.TAG] = true;\n\n        updateParsedComponent(result, ref, offset, modifier);\n\n        return result;\n    }\n}","import {Config} from \"../options\";\nimport {ParseOptions} from \"../chrono\";\nimport {ParsedResult} from \"../result\";\n\nexport default abstract class Parser {\n    strictMode: boolean;\n\n    constructor(config: Config = {}) {\n        this.strictMode = !!config.strict;\n    }\n\n    isStrictMode(): boolean {\n        return this.strictMode;\n    }\n\n    abstract pattern(): RegExp;\n\n    abstract extract(text: string, ref: Date, match: RegExpExecArray, opt: ParseOptions): ParsedResult | null;\n\n    execute(text: string, ref: Date, opt: ParseOptions): ParsedResult[] {\n\n        const results: ParsedResult[] = [];\n        const regex: RegExp = this.pattern();\n\n        let remainingText: string = text;\n        let match: RegExpExecArray | null = regex.exec(remainingText);\n\n\n        while (match) {\n            // Calculate match index on the full text;\n            match.index += text.length - remainingText.length;\n\n            let result: ParsedResult | null = this.extract(text, ref, match, opt);\n            if (result) {\n                // If success, start from the end of the result\n                remainingText = text.substring(result.index + result.text.length);\n\n                if (!this.isStrictMode() || result.hasPossibleDates()) {\n                    results.push(result);\n                }\n            } else {\n                // If fail, move on by 1 - This should rarely, if ever happen (we matched but couldn't create a result from it)\n                remainingText = text.substring(match.index + 1);\n            }\n\n            match = regex.exec(remainingText);\n        }\n\n        return results;\n    }\n}\n\nexport {default as ENISOFormatParser} from './EN/ENISOFormatParser';\nexport {default as ENDeadlineFormatParser} from './EN/ENDeadlineFormatParser';\nexport {default as ENRelativeDateFormatParser} from './EN/ENRelativeDateFormatParser';\nexport {default as ENMonthNameLittleEndianParser} from './EN/ENMonthNameLittleEndianParser';\nexport {default as ENMonthNameMiddleEndianParser} from './EN/ENMonthNameMiddleEndianParser';\nexport {default as ENMonthNameParser} from './EN/ENMonthNameParser';\nexport {default as ENSlashDateFormatParser} from './EN/ENSlashDateFormatParser';\nexport {default as ENSlashDateFormatStartWithYearParser} from './EN/ENSlashDateFormatStartWithYearParser';\nexport {default as ENSlashMonthFormatParser} from './EN/ENSlashMonthFormatParser';\nexport {default as ENTimeAgoFormatParser} from './EN/ENTimeAgoFormatParser';\nexport {default as ENTimeExpressionParser} from './EN/ENTimeExpressionParser';\nexport {default as ENTimeLaterFormatParser} from './EN/ENTimeLaterFormatParser';\nexport {default as ENWeekdayParser} from './EN/ENWeekdayParser';\nexport {default as ENCasualDateParser} from './EN/ENCasualDateParser';\nexport {default as ENCasualTimeParser} from './EN/ENCasualTimeParser';\n\nexport {default as JPStandardParser} from './JP/JPStandardParser';\nexport {default as JPCasualDateParser} from './JP/JPCasualDateParser';\n\nexport {default as ESCasualDateParser} from './ES/ESCasualDateParser';\nexport {default as ESDeadlineFormatParser} from './ES/ESDeadlineFormatParser';\nexport {default as ESTimeAgoFormatParser} from './ES/ESTimeAgoFormatParser';\nexport {default as ESTimeExpressionParser} from './ES/ESTimeExpressionParser';\nexport {default as ESWeekdayParser} from './ES/ESWeekdayParser';\nexport {default as ESMonthNameLittleEndianParser} from './ES/ESMonthNameLittleEndianParser';\nexport {default as ESSlashDateFormatParser} from './ES/ESSlashDateFormatParser';\n\nexport {default as FRCasualDateParser} from './FR/FRCasualDateParser';\nexport {default as FRDeadlineFormatParser} from './FR/FRDeadlineFormatParser';\nexport {default as FRMonthNameLittleEndianParser} from './FR/FRMonthNameLittleEndianParser';\nexport {default as FRSlashDateFormatParser} from './FR/FRSlashDateFormatParser';\nexport {default as FRTimeAgoFormatParser} from './FR/FRTimeAgoFormatParser';\nexport {default as FRTimeExpressionParser} from './FR/FRTimeExpressionParser';\nexport {default as FRWeekdayParser} from './FR/FRWeekdayParser';\nexport {default as FRRelativeDateFormatParser} from './FR/FRRelativeDateFormatParser';\n\nexport {default as ZHHantDateParser} from './ZH-Hant/ZHHantDateParser';\nexport {default as ZHHantWeekdayParser} from './ZH-Hant/ZHHantWeekdayParser';\nexport {default as ZHHantTimeExpressionParser} from './ZH-Hant/ZHHantTimeExpressionParser';\nexport {default as ZHHantCasualDateParser} from './ZH-Hant/ZHHantCasualDateParser';\nexport {default as ZHHantDeadlineFormatParser} from './ZH-Hant/ZHHantDeadlineFormatParser';\n\nexport {default as DEDeadlineFormatParser} from './DE/DEDeadlineFormatParser';\nexport {default as DEMonthNameLittleEndianParser} from './DE/DEMonthNameLittleEndianParser';\nexport {default as DEMonthNameParser} from './DE/DEMonthNameParser';\nexport {default as DESlashDateFormatParser} from './DE/DESlashDateFormatParser';\nexport {default as DETimeAgoFormatParser} from './DE/DETimeAgoFormatParser';\nexport {default as DETimeExpressionParser} from './DE/DETimeExpressionParser';\nexport {default as DEWeekdayParser} from './DE/DEWeekdayParser';\nexport {default as DECasualDateParser} from './DE/DECasualDateParser';\n","import {MergeDateRangeRefiner} from '../EN/ENMergeDateRangeRefiner';\n\nexport default class DEMergeDateRangeRefiner extends MergeDateRangeRefiner {\n    PATTERN: RegExp = /^\\s*(bis(?:\\s*(?:am|zum))?|\\-)\\s*$/i;\n    TAG: string = 'DEMergeDateRangeRefiner';\n}","import {MergeDateTimeRefiner} from \"../EN/ENMergeDateTimeRefiner\";\n\nexport default class DEMergeDateTimeRefiner extends MergeDateTimeRefiner {\n    TAG: string = 'DEMergeDateTimeRefiner';\n    PATTERN: RegExp = new RegExp(\"^\\\\s*(T|um|am|,|-)?\\\\s*$\");\n}","import Refiner from '../refiner';\nimport {COMPONENT_NAME, ParsedComponents, ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, MONTH, WEEKDAY, YEAR} from \"../../constants\";\nimport {Moment} from \"moment\";\n\nexport abstract class MergeDateRangeRefiner extends Refiner {\n    abstract TAG: string;\n    abstract PATTERN: RegExp;\n\n\n    refine(text: string, results: ParsedResult[], opt: ParseOptions): ParsedResult[] {\n        if (results.length < 2) {\n            return results;\n        }\n\n        const mergedResult: ParsedResult[] = [];\n        let currResult: ParsedResult | null = null;\n        let prevResult: ParsedResult | null = null;\n\n        for (let i = 1; i < results.length; i++) {\n\n            currResult = results[i];\n            prevResult = results[i - 1];\n\n            if (!prevResult.end && !currResult.end && this.isAbleToMerge(text, prevResult, currResult)) {\n                prevResult = this.mergeResult(text, prevResult, currResult);\n                currResult = null;\n                i += 1;\n            }\n\n            mergedResult.push(prevResult);\n        }\n\n        if (currResult != null) {\n            mergedResult.push(currResult);\n        }\n\n\n        return mergedResult;\n    }\n\n    private isAbleToMerge(text: string, result1: ParsedResult, result2: ParsedResult): boolean {\n        return !!text.substring(result1.index + result1.text.length, result2.index).match(this.PATTERN);\n    };\n\n    // noinspection JSMethodCanBeStatic\n    private isWeekdayResult(result: ParsedResult): boolean {\n        return result.start.isCertain(WEEKDAY) && !result.start.isCertain(DAY);\n    }\n\n    private mergeResult(text: string, fromResult: ParsedResult, toResult: ParsedResult) {\n        if (!this.isWeekdayResult(fromResult) && !this.isWeekdayResult(toResult)) {\n            this.mergeValues(toResult.start, fromResult.start);\n            this.mergeValues(fromResult.start, toResult.start);\n        }\n\n        if (fromResult.start.date().getTime() > toResult.start.date().getTime()) {\n\n            const fromMoment: Moment = fromResult.start.moment();\n            const toMoment: Moment = toResult.start.moment();\n\n            if (this.isWeekdayResult(fromResult) && fromMoment.clone().add(-7, 'days').isBefore(toMoment)) {\n                fromMoment.add(-7, 'days');\n                fromResult.start.imply(DAY, fromMoment.date());\n                fromResult.start.imply(MONTH, fromMoment.month() + 1);\n                fromResult.start.imply(YEAR, fromMoment.year());\n            } else if (this.isWeekdayResult(toResult) && toMoment.clone().add(7, 'days').isAfter(fromMoment)) {\n                toMoment.add(7, 'days');\n                toResult.start.imply(DAY, toMoment.date());\n                toResult.start.imply(MONTH, toMoment.month() + 1);\n                toResult.start.imply(YEAR, toMoment.year());\n            } else {\n                [toResult, fromResult] = [fromResult, toResult];\n            }\n        }\n\n        fromResult.end = toResult.start;\n\n        Object.keys(toResult.tags).forEach((tag) => fromResult.tags[tag] = true);\n\n        const startIndex: number = Math.min(fromResult.index, toResult.index);\n        const endIndex: number = Math.max(\n            fromResult.index + fromResult.text.length,\n            toResult.index + toResult.text.length);\n\n        fromResult.index = startIndex;\n        fromResult.text = text.substring(startIndex, endIndex);\n        fromResult.tags[this.TAG] = true;\n        return fromResult;\n    }\n\n    private mergeValues(from: ParsedComponents, to: ParsedComponents) {\n        (Object.keys(from.knownValues) as COMPONENT_NAME[]).forEach((key: COMPONENT_NAME) => {\n            if (!to.isCertain(key)) {\n                to.assign(key, from.get(key));\n            }\n        });\n    }\n}\n\nexport default class ENMergeDateRangeRefiner extends MergeDateRangeRefiner {\n    TAG = 'ENMergeDateRangeRefiner';\n    PATTERN = /^\\s*(to|-|ー)\\s*$/i;\n}","import Refiner from '../refiner';\nimport {ParsedComponents, ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, HOUR, MERIDIEM, MILLISECOND, MINUTE, MONTH, SECOND, WEEKDAY} from \"../../constants\";\n\nexport abstract class MergeDateTimeRefiner extends Refiner {\n    abstract TAG: string;\n    abstract PATTERN: RegExp;\n\n    refine(text: string, results: ParsedResult[], opt: ParseOptions): ParsedResult[] {\n        if (results.length < 2) {\n            return results;\n        }\n\n        const mergedResult: ParsedResult[] = [];\n        let currResult: ParsedResult | null = null;\n        let prevResult: ParsedResult | null = null;\n\n        for (let i = 1; i < results.length; i++) {\n\n            currResult = results[i];\n            prevResult = results[i - 1];\n\n            if (MergeDateTimeRefiner.isDateOnly(prevResult) && MergeDateTimeRefiner.isTimeOnly(currResult)\n                && this.isAbleToMerge(text, prevResult, currResult)) {\n\n                prevResult = this.mergeResult(text, prevResult, currResult);\n                currResult = results[i + 1] || null;\n                i += 1;\n\n            } else if (MergeDateTimeRefiner.isDateOnly(currResult) && MergeDateTimeRefiner.isTimeOnly(prevResult)\n                && this.isAbleToMerge(text, prevResult, currResult)) {\n\n                prevResult = this.mergeResult(text, currResult, prevResult);\n                currResult = results[i + 1] || null;\n                i += 1;\n            }\n\n            if (prevResult) {\n                mergedResult.push(prevResult);\n            }\n        }\n\n        if (currResult !== null) {\n            mergedResult.push(currResult);\n        }\n\n        return mergedResult;\n    }\n\n    private isAbleToMerge(text: string, result1: ParsedResult, result2: ParsedResult): boolean {\n        return !!text.substring(result1.index + result1.text.length, result2.index).match(this.PATTERN);\n    };\n\n    private mergeResult(text: string, dateResult: ParsedResult, timeResult: ParsedResult): ParsedResult {\n        const beginDate: ParsedComponents = dateResult.start;\n        const beginTime: ParsedComponents = timeResult.start;\n        const beginDateTime: ParsedComponents = MergeDateTimeRefiner.mergeDateTimeValues(beginDate, beginTime);\n\n        if (dateResult.end || timeResult.end) {\n            const endDate: ParsedComponents = dateResult.end ? dateResult.end : dateResult.start;\n            const endTime: ParsedComponents = timeResult.end ? timeResult.end : timeResult.start;\n            const endDateTime: ParsedComponents = MergeDateTimeRefiner.mergeDateTimeValues(endDate, endTime);\n\n            if (!dateResult.end && endDateTime.date().getTime() < beginDateTime.date().getTime()) {\n                // Ex. 9pm - 1am\n                if (endDateTime.isCertain(DAY)) {\n                    endDateTime.assign(DAY, endDateTime.get(DAY) + 1);\n                } else {\n                    endDateTime.imply(DAY, endDateTime.get(DAY) + 1);\n                }\n            }\n\n            dateResult.end = endDateTime;\n        }\n\n        dateResult.start = beginDateTime;\n\n        const startIndex: number = Math.min(dateResult.index, timeResult.index);\n        const endIndex: number = Math.max(\n            dateResult.index + dateResult.text.length,\n            timeResult.index + timeResult.text.length);\n\n        dateResult.index = startIndex;\n        dateResult.text = text.substring(startIndex, endIndex);\n\n        Object.keys(timeResult.tags).forEach((tag) => dateResult.tags[tag] = true);\n        dateResult.tags[this.TAG] = true;\n\n        return dateResult;\n    }\n\n    static isDateOnly(result: ParsedResult): boolean {\n        return !result.start.isCertain(HOUR);\n    }\n\n    static isTimeOnly(result: ParsedResult): boolean {\n        return !result.start.isCertain(MONTH) && !result.start.isCertain(WEEKDAY);\n    }\n\n    static mergeDateTimeValues(dateComponent: ParsedComponents, timeComponent: ParsedComponents): ParsedComponents {\n        const dateTimeComponent: ParsedComponents = dateComponent.clone();\n\n        if (timeComponent.isCertain(HOUR)) {\n            dateTimeComponent.assign(HOUR, timeComponent.get(HOUR));\n            dateTimeComponent.assign(MINUTE, timeComponent.get(MINUTE));\n\n            if (timeComponent.isCertain(SECOND)) {\n                dateTimeComponent.assign(SECOND, timeComponent.get(SECOND));\n\n                if (timeComponent.isCertain(MILLISECOND)) {\n                    dateTimeComponent.assign(MILLISECOND, timeComponent.get(MILLISECOND));\n                } else {\n                    dateTimeComponent.imply(MILLISECOND, timeComponent.get(MILLISECOND));\n                }\n            } else {\n                dateTimeComponent.imply(SECOND, timeComponent.get(SECOND));\n                dateTimeComponent.imply(MILLISECOND, timeComponent.get(MILLISECOND));\n            }\n\n        } else {\n            dateTimeComponent.imply(HOUR, timeComponent.get(HOUR));\n            dateTimeComponent.imply(MINUTE, timeComponent.get(MINUTE));\n            dateTimeComponent.imply(SECOND, timeComponent.get(SECOND));\n            dateTimeComponent.imply(MILLISECOND, timeComponent.get(MILLISECOND));\n        }\n\n        if (timeComponent.isCertain(MERIDIEM)) {\n            dateTimeComponent.assign(MERIDIEM, timeComponent.get(MERIDIEM));\n        } else if (\n            timeComponent.get(MERIDIEM, -1) !== -1 &&\n            dateTimeComponent.get(MERIDIEM, -1) === -1\n        ) {\n            dateTimeComponent.imply(MERIDIEM, timeComponent.get(MERIDIEM));\n        }\n\n        if (dateTimeComponent.get(MERIDIEM) === 1 && dateTimeComponent.get(HOUR) < 12) {\n            if (timeComponent.isCertain(HOUR)) {\n                dateTimeComponent.assign(HOUR, dateTimeComponent.get(HOUR) + 12);\n            } else {\n                dateTimeComponent.imply(HOUR, dateTimeComponent.get(HOUR) + 12);\n            }\n        }\n\n        return dateTimeComponent;\n    }\n}\n\nexport default class ENMergeDateTimeRefiner extends MergeDateTimeRefiner {\n    TAG: string = 'ENMergeDateTimeRefiner';\n    PATTERN: RegExp = new RegExp(\"^\\\\s*(T|at|after|before|on|of|,|-)?\\\\s*$\");\n}","import Refiner from '../refiner';\nimport {ParsedResult} from \"../../result\";\nimport {ParseOptions} from \"../../chrono\";\nimport {DAY, MONTH, YEAR} from \"../../constants\";\n\nexport default class ENPrioritizeSpecificDateRefiner extends Refiner {\n    private TAG: string = 'ENPrioritizeSpecificDateRefiner';\n    private PATTERN: RegExp = new RegExp(\"^\\\\s*(at|after|before|on|,|-|\\\\(|\\\\))?\\\\s*$\");\n\n    refine(text: string, results: ParsedResult[], opt: ParseOptions): ParsedResult[] {\n        if (results.length < 2) {\n            return results;\n        }\n\n        const mergedResult: ParsedResult[] = [];\n        let currResult: ParsedResult | null = null;\n        let prevResult: ParsedResult | null = null;\n\n\n        for (let i = 1; i < results.length; i++) {\n\n            currResult = results[i];\n            prevResult = results[i - 1];\n\n            if (this.isMoreSpecific(prevResult, currResult) && this.isAbleToMerge(text, prevResult, currResult)) {\n\n                prevResult = this.mergeResult(text, prevResult, currResult);\n                currResult = null;\n                i += 1;\n\n            } else if (this.isMoreSpecific(currResult, prevResult) && this.isAbleToMerge(text, prevResult, currResult)) {\n\n                prevResult = this.mergeResult(text, currResult, prevResult);\n                currResult = null;\n                i += 1;\n            }\n\n            if (prevResult) {\n                mergedResult.push(prevResult);\n            }\n        }\n\n        if (currResult !== null) {\n            mergedResult.push(currResult);\n        }\n\n        return mergedResult;\n    }\n\n    // noinspection JSMethodCanBeStatic\n    private isMoreSpecific(prevResult: ParsedResult, currResult: ParsedResult): boolean {\n        if (prevResult.start.isCertain(YEAR)) {\n            if (!currResult.start.isCertain(YEAR)) {\n                return true\n            } else {\n                if (prevResult.start.isCertain(MONTH)) {\n                    if (!currResult.start.isCertain(MONTH)) {\n                        return true\n                    } else {\n                        if (prevResult.start.isCertain(DAY) && !currResult.start.isCertain(DAY)) {\n                            return true\n                        }\n                    }\n                }\n            }\n        }\n\n        return false\n    }\n\n    private isAbleToMerge(text: string, prevResult: ParsedResult, currResult: ParsedResult): boolean {\n        const textBetween: string = text.substring(prevResult.index + prevResult.text.length, currResult.index);\n\n        // Only accepts merge if one of them comes from casual relative date\n        const includesRelativeResult: boolean = (prevResult.tags['ENRelativeDateFormatParser'] || currResult.tags['ENRelativeDateFormatParser']);\n\n        // We assume they refer to the same date if all date fields are implied\n        let referToSameDate: boolean = !prevResult.start.isCertain(DAY) && !prevResult.start.isCertain(MONTH) && !prevResult.start.isCertain(YEAR);\n\n        // If both years are certain, that determines if they refer to the same date\n        // but with one more specific than the other\n        if (prevResult.start.isCertain(YEAR) && currResult.start.isCertain(YEAR))\n            referToSameDate = (prevResult.start.get(YEAR) === currResult.start.get(YEAR));\n\n        // We now test with the next level (month) if they refer to the same date\n        if (prevResult.start.isCertain(MONTH) && currResult.start.isCertain(MONTH))\n            referToSameDate = (prevResult.start.get(MONTH) === currResult.start.get(MONTH)) && referToSameDate;\n\n        return includesRelativeResult && !!textBetween.match(this.PATTERN) && referToSameDate;\n    }\n\n    private mergeResult(text: string, specificResult: ParsedResult, nonSpecificResult: ParsedResult) {\n        const startIndex: number = Math.min(specificResult.index, nonSpecificResult.index);\n        const endIndex: number = Math.max(\n            specificResult.index + specificResult.text.length,\n            nonSpecificResult.index + nonSpecificResult.text.length);\n\n        specificResult.index = startIndex;\n        specificResult.text = text.substring(startIndex, endIndex);\n\n        Object.keys(nonSpecificResult.tags).forEach((tag) => specificResult.tags[tag] = true);\n        specificResult.tags[this.TAG] = true;\n\n        return specificResult;\n    }\n}","import Refiner from './refiner';\nimport {ParsedResult} from \"../result\";\nimport {ParseOptions} from \"../chrono\";\nimport {TIMEZONE_OFFSET} from \"../constants\";\n\nexport default class ExtractTimezoneAbbrRefiner extends Refiner {\n    private TAG = 'ExtractTimezoneAbbrRefiner';\n    private TIMEZONE_NAME_PATTERN: RegExp = new RegExp(\"^\\\\s*\\\\(?([A-Z]{2,4})\\\\)?(?=\\\\W|$)\", 'i');\n\n    // TODO: Move this to some configuration\n    private TIMEZONE_ABBR_MAP: {[k: string]: number} = {hST\":600,\"DAVT\":420,\"EASST\":-300,\"EAST\":-360,\"EAT\":180,\"ECT\":-300,\"EDT\":-240,\"EEST\":180,\"EET\":120,\"EGST\":0,\"EGT\":-60,\"EST\":-300,\"ET\":-300,\"FJST\":780,\"FJT\":720,\"FKST\":-180,\"FKT\":-240,\"FNT\":-120,\"GALT\":-360,\"GAMT\":-540,\"GET\":240,\"GFT\":-180,\"GILT\":720,\"GMT\":0,\"GST\":240,\"GYT\":-240,\"HAA\":-180,\"HAC\":-300,\"HADT\":-540,\"HAE\":-240,\"HAP\":-420,\"HAR\":-360,\"HAST\":-600,\"HAT\":-90,\"HAY\":-480,\"HKT\":480,\"HLV\":-210,\"HNA\":-240,\"HNC\":-360,\"HNE\":-300,\"HNP\":-480,\"HNR\":-420,\"HNT\":-150,\"HNY\":-540,\"HOVT\":420,\"ICT\":420,\"IDT\":180,\"IOT\":360,\"IRDT\":270,\"IRKST\":540,\"IRKT\":540,\"IRST\":210,\"IST\":60,\"JST\":540,\"KGT\":360,\"KRAST\":480,\"KRAT\":480,\"KST\":540,\"KUYT\":240,\"LHDT\":660,\"LHST\":630,\"LINT\":840,\"MAGST\":720,\"MAGT\":720,\"MART\":-510,\"MAWT\":300,\"MDT\":-360,\"MESZ\":120,\"MEZ\":60,\"MHT\":720,\"MMT\":390,\"MSD\":240,\"MSK\":240,\"MST\":-420,\"MUT\":240,\"MVT\":300,\"MYT\":480,\"NCT\":660,\"NDT\":-90,\"NFT\":690,\"NOVST\":420,\"NOVT\":360,\"NPT\":345,\"NST\":-150,\"NUT\":-660,\"NZDT\":780,\"NZST\":720,\"OMSST\":420,\"OMST\":420,\"PDT\":-420,\"PET\":-300,\"PETST\":720,\"PETT\":720,\"PGT\":600,\"PHOT\":780,\"PHT\":480,\"PKT\":300,\"PMDT\":-120,\"PMST\":-180,\"PONT\":660,\"PST\":-480,\"PT\":-480,\"PWT\":540,\"PYST\":-180,\"PYT\":-240,\"RET\":240,\"SAMT\":240,\"SAST\":120,\"SBT\":660,\"SCT\":240,\"SGT\":480,\"SRT\":-180,\"SST\":-660,\"TAHT\":-600,\"TFT\":300,\"TJT\":300,\"TKT\":780,\"TLT\":540,\"TMT\":300,\"TVT\":720,\"ULAT\":480,\"UTC\":0,\"UYST\":-120,\"UYT\":-180,\"UZT\":300,\"VET\":-210,\"VLAST\":660,\"VLAT\":660,\"VUT\":660,\"WAST\":120,\"WAT\":60,\"WEST\":60,\"WESZ\":60,\"WET\":0,\"WEZ\":0,\"WFT\":720,\"WGST\":-120,\"WGT\":-180,\"WIB\":420,\"WIT\":540,\"WITA\":480,\"WST\":780,\"WT\":0,\"YAKST\":600,\"YAKT\":600,\"YAPT\":600,\"YEKST\":360,\"YEKT\":360};\n\n    refine(text: string, results: ParsedResult[], opt: ParseOptions): ParsedResult[] {\n\n        results.forEach((result: ParsedResult) => {\n            if (!result.tags['ENTimeExpressionParser'] && !result.tags['ZHTimeExpressionParser'] && !result.tags['FRTimeExpressionParser'] && !result.tags['DETimeExpressionParser']) {\n                return;\n            }\n\n            const match: RegExpExecArray | null = this.TIMEZONE_NAME_PATTERN.exec(text.substring(result.index + result.text.length));\n            if (match) {\n                const timezoneAbbr: string = match[1].toUpperCase();\n                if (!this.TIMEZONE_ABBR_MAP.hasOwnProperty(timezoneAbbr)) {\n                    return;\n                }\n\n                const timezoneOffset: number = this.TIMEZONE_ABBR_MAP[timezoneAbbr];\n\n                if (!result.start.isCertain(TIMEZONE_OFFSET)) {\n                    result.start.assign(TIMEZONE_OFFSET, timezoneOffset);\n                }\n\n                if (result.end && !result.end.isCertain(TIMEZONE_OFFSET)) {\n                    result.end.assign(TIMEZONE_OFFSET, timezoneOffset);\n                }\n\n                result.text += match[0];\n                result.tags[this.TAG] = true;\n            }\n        });\n\n        return results;\n    }\n}","import Refiner from './refiner';\nimport {ParsedResult} from \"../result\";\nimport {ParseOptions} from \"../chrono\";\nimport {TIMEZONE_OFFSET} from \"../constants\";\n\nexport default class ExtractTimezoneOffsetRefiner extends Refiner {\n    private TAG = 'ExtractTimezoneOffsetRefiner';\n    private TIMEZONE_OFFSET_PATTERN: RegExp = new RegExp(\"^\\\\s*(GMT|UTC)?(\\\\+|\\\\-)(\\\\d{1,2}):?(\\\\d{2})\", 'i');\n\n    private TIMEZONE_OFFSET_SIGN_GROUP: number = 2;\n    private TIMEZONE_OFFSET_HOUR_OFFSET_GROUP: number = 3;\n    private TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP: number = 4;\n\n    refine(text: string, results: ParsedResult[], opt: ParseOptions): ParsedResult[] {\n        results.forEach((result: ParsedResult) => {\n            if (result.start.isCertain(TIMEZONE_OFFSET)) {\n                return;\n            }\n\n            const match: RegExpExecArray | null = this.TIMEZONE_OFFSET_PATTERN.exec(text.substring(result.index + result.text.length));\n            if (!match) {\n                return;\n            }\n\n            const hourOffset: number = parseInt(match[this.TIMEZONE_OFFSET_HOUR_OFFSET_GROUP], 10);\n            const minuteOffset: number = parseInt(match[this.TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP], 10);\n            let timezoneOffset: number = hourOffset * 60 + minuteOffset;\n\n            if (match[this.TIMEZONE_OFFSET_SIGN_GROUP] === '-') {\n                timezoneOffset = -timezoneOffset;\n            }\n\n            if (result.end != null) {\n                result.end.assign(TIMEZONE_OFFSET, timezoneOffset);\n            }\n\n            result.start.assign(TIMEZONE_OFFSET, timezoneOffset);\n\n            result.text += match[0];\n\n            result.tags[this.TAG] = true;\n        });\n\n        return results;\n    }\n}\n","import {MergeDateRangeRefiner} from '../EN/ENMergeDateRangeRefiner';\n\nexport default class FRMergeDateRangeRefiner extends MergeDateRangeRefiner {\n    PATTERN: RegExp = /^\\s*([àa\\-])\\s*$/i;\n    TAG: string = 'FRMergeDateRangeRefiner';\n}\n","import {MergeDateTimeRefiner} from \"../EN/ENMergeDateTimeRefiner\";\n\nexport default class FRMergeDateTimeRefiner extends MergeDateTimeRefiner {\n    TAG: string = 'FRMergeDateTimeRefiner';\n    PATTERN: RegExp = new RegExp(\"^\\\\s*(T|à|a|vers|de|,|-)?\\\\s*$\");\n}","/*\n    Enforce 'forwardDate' option to on the results. When there are missing component,\n    e.g. \"March 12-13 (without year)\" or \"Thursday\", the refiner will try to adjust the result\n    into the future instead of the past.\n*/\nimport Refiner from './refiner';\nimport {ParsedResult} from \"../result\";\nimport {ParseOptions} from \"../chrono\";\nimport {DAY, MONTH, WEEKDAY, YEAR} from \"../constants\";\nimport * as moment from \"moment\";\nimport {Moment} from \"moment\";\n\nexport default class ForwardDateRefiner extends Refiner {\n    private TAG = 'ForwardDateRefiner';\n\n    refine(text: string, results: ParsedResult[], opt: ParseOptions): ParsedResult[] {\n        if (!opt.forwardDate) {\n            return results;\n        }\n\n        results.forEach((result: ParsedResult) => {\n            const refMoment: Moment = moment(result.ref);\n\n\n            // day and month are certain, but not year\n            if (result.start.isCertain(DAY) && result.start.isCertain(MONTH) && !result.start.isCertain(YEAR) && refMoment.isAfter(result.start.moment())) {\n                // Adjust year into the future\n                for (let i = 0; i < 3 && refMoment.isAfter(result.start.moment()); i++) {\n                    result.start.imply(YEAR, result.start.get(YEAR) + 1);\n\n                    if (result.end && !result.end.isCertain(YEAR)) {\n                        result.end.imply(YEAR, result.end.get(YEAR) + 1);\n                    }\n                }\n                result.tags[this.TAG] = true;\n            }\n\n            // date is uncertain, but weekday is known\n            if (!result.start.isCertain(DAY) && !result.start.isCertain(MONTH) && !result.start.isCertain(YEAR) && result.start.isCertain(WEEKDAY) && refMoment.isAfter(result.start.moment())) {\n                // Adjust date to the coming week\n                if (refMoment.day() > result.start.get(WEEKDAY)) {\n                    refMoment.day(result.start.get(WEEKDAY) + 7);\n                } else {\n                    refMoment.day(result.start.get(WEEKDAY));\n                }\n\n                result.start.imply(DAY, refMoment.date());\n                result.start.imply(MONTH, refMoment.month() + 1);\n                result.start.imply(YEAR, refMoment.year());\n\n                result.tags[this.TAG] = true;\n            }\n        });\n\n        return results;\n    }\n}","import {MergeDateTimeRefiner} from \"../EN/ENMergeDateTimeRefiner\";\n\nexport default class JPMergeDateTimeRefiner extends MergeDateTimeRefiner {\n    TAG: string = 'JPMergeDateTimeRefiner';\n    PATTERN: RegExp = /^\\s*(から|ー)\\s*$/i;\n}","import Refiner from './refiner';\nimport {ParsedResult} from \"../result\";\nimport {ParseOptions} from \"../chrono\";\n\nexport default class OverlapRemovalRefiner extends Refiner {\n    refine(text: string, results: ParsedResult[], opt: ParseOptions): ParsedResult[] {\n        if (results.length < 2) {\n            return results;\n        }\n\n        const filteredResults: ParsedResult[] = [];\n        let prevResult: ParsedResult = results[0];\n\n        for (let i = 1; i < results.length; i++) {\n\n            const result: ParsedResult = results[i];\n\n            // If overlap, compare the length and discard the shorter one\n            if (result.index < prevResult.index + prevResult.text.length) {\n\n                if (result.text.length > prevResult.text.length) {\n                    prevResult = result;\n                }\n\n            } else {\n                filteredResults.push(prevResult);\n                prevResult = result;\n            }\n        }\n\n        // The last one\n        if (prevResult != null) {\n            filteredResults.push(prevResult);\n        }\n\n        return filteredResults;\n    }\n}","import {Filter} from './refiner';\nimport {ParsedResult} from \"../result\";\nimport {ParseOptions} from \"../chrono\";\n\nexport default class UnlikelyFormatFilter extends Filter {\n    private REGEX: RegExp = /^\\d*(\\.\\d*)?$/;\n\n    isValid(text: string, result: ParsedResult, opt: ParseOptions): boolean {\n        return !result.text.replace(' ','').match(this.REGEX);\n    }\n}","import {ParsedResult} from \"../result\";\nimport {ParseOptions} from \"../chrono\";\n\nexport default abstract class Refiner {\n    abstract refine(text: string, results: ParsedResult[], opt: ParseOptions): ParsedResult[];\n}\n\nexport abstract class Filter extends Refiner {\n    abstract isValid(text: string, result: ParsedResult, opt: ParseOptions): boolean;\n    refine(text: string, results: ParsedResult[], opt: ParseOptions): ParsedResult[] {\n        return results.filter((result: ParsedResult) => this.isValid(text, result, opt));\n    };\n}\n\n\n\n// Common refiners\nexport {default as OverlapRemovalRefiner} from './OverlapRemovalRefiner';\nexport {default as ExtractTimezoneOffsetRefiner} from './ExtractTimezoneOffsetRefiner';\nexport {default as ExtractTimezoneAbbrRefiner} from './ExtractTimezoneAbbrRefiner';\nexport {default as ForwardDateRefiner} from './ForwardDateRefiner';\nexport {default as UnlikelyFormatFilter} from './UnlikelyFormatFilter';\n\n// EN refiners\nexport {default as ENMergeDateTimeRefiner} from './EN/ENMergeDateTimeRefiner';\nexport {default as ENMergeDateRangeRefiner} from './EN/ENMergeDateRangeRefiner';\nexport {default as ENPrioritizeSpecificDateRefiner} from './EN/ENPrioritizeSpecificDateRefiner';\n\n// JP refiners\nexport {default as JPMergeDateRangeRefiner} from './JP/JPMergeDateRangeRefiner';\n\n// FR refiners\nexport {default as FRMergeDateRangeRefiner} from './FR/FRMergeDateRangeRefiner';\nexport {default as FRMergeDateTimeRefiner} from './FR/FRMergeDateTimeRefiner';\n\n// DE refiners\nexport {default as DEMergeDateRangeRefiner} from './DE/DEMergeDateRangeRefiner';\nexport {default as DEMergeDateTimeRefiner} from './DE/DEMergeDateTimeRefiner';\n","import * as moment from 'moment';\nimport {Moment} from 'moment';\nimport {HOUR, MINUTE, SECOND, MILLISECOND, DAY, MONTH, YEAR, TIMEZONE_OFFSET} from './constants';\n\nexport type TIME_COMPONENT_NAME = 'hour'\n    | 'minute'\n    | 'second'\n    | 'millisecond'\n    | 'meridiem';\n\nexport type DATE_COMPONENT_NAME = 'day'\n    | 'month'\n    | 'year'\n\nexport type COMPONENT_NAME =\n    TIME_COMPONENT_NAME\n    | DATE_COMPONENT_NAME\n    | 'weekday'\n    | 'timezoneOffset';\n\nexport type ComponentCollection = {[k in COMPONENT_NAME]?: number;}\n\nexport type ResultParts = {\n    ref: Date;\n    index: number;\n    text: string;\n    tags?: {\n        [k: string]: true;\n    };\n    start?: ComponentCollection;\n    end?: ComponentCollection;\n}\n\n\nexport class ParsedResult {\n    ref: Date;\n    index: number;\n    text: string;\n    tags: {\n        [k: string]: true\n    };\n    start: ParsedComponents;\n    end?: ParsedComponents;\n\n    constructor(result: ResultParts) {\n        this.ref = result.ref;\n        this.index = result.index;\n        this.text = result.text;\n        this.tags = result.tags || {};\n\n        this.start = new ParsedComponents(result.start, result.ref);\n        if (result.end) {\n            this.end = new ParsedComponents(result.end, result.ref)\n        }\n    }\n\n    clone(): ParsedResult {\n        const result = new ParsedResult({\n            ref: this.ref,\n            index: this.index,\n            text: this.text\n        });\n        result.tags = {...this.tags};\n        result.start = this.start.clone();\n        if (this.end) {\n            result.end = this.end.clone();\n        }\n        return result;\n    }\n\n    hasPossibleDates(): boolean {\n        return this.start.isPossibleDate() && (!this.end || this.end.isPossibleDate());\n    }\n}\n\nexport class ParsedComponents {\n    knownValues: ComponentCollection = {};\n    impliedValues: ComponentCollection = {};\n\n    constructor(components?: ComponentCollection, ref?: Date) {\n        if (components) {\n            (Object.keys(components) as COMPONENT_NAME[]).forEach((key: COMPONENT_NAME) => this.knownValues[key] = components[key]);\n        }\n\n        if (ref) {\n            const refMoment: Moment = moment(ref);\n            this.imply(DAY, refMoment.date());\n            this.imply(MONTH, refMoment.month() + 1);\n            this.imply(YEAR, refMoment.year());\n        }\n\n        this.imply(HOUR, 12);\n        this.imply(MINUTE, 0);\n        this.imply(SECOND, 0);\n        this.imply(MILLISECOND, 0);\n    }\n\n    clone() {\n        const component: ParsedComponents = new ParsedComponents();\n        component.knownValues = {...this.knownValues};\n        component.impliedValues = {...this.impliedValues};\n        return component;\n    }\n\n    get(component: COMPONENT_NAME, defaultReturn: number = 0): number {\n        return this.isCertain(component) ? this.knownValues[component]! : (\n            (component in this.impliedValues) ? this.impliedValues[component]! : defaultReturn\n        );\n    }\n\n    assign(component: COMPONENT_NAME, value: number) {\n        this.knownValues[component] = value;\n        delete this.impliedValues[component];\n    }\n\n    imply(component: COMPONENT_NAME, value: number) {\n        if (!this.isCertain(component)) {\n            this.impliedValues[component] = value;\n        }\n    }\n\n    isCertain(component: COMPONENT_NAME): boolean {\n        return component in this.knownValues;\n    }\n\n    isPossibleDate() {\n        const dateMoment: Moment = this.moment();\n        if (this.isCertain(TIMEZONE_OFFSET)) {\n            dateMoment.utcOffset(this.get(TIMEZONE_OFFSET))\n        }\n\n        return dateMoment.get('minute') === this.get(MINUTE)\n            && dateMoment.get('hour') === this.get(HOUR)\n            && dateMoment.get('year') === this.get(YEAR)\n            && dateMoment.get('month') === this.get(MONTH) - 1\n            && dateMoment.get('date') === this.get(DAY);\n    };\n\n    date(): Date {\n        return this.moment().toDate();\n    }\n\n    moment(): Moment {\n        const dateMoment: Moment = moment();\n\n        dateMoment.set('year', this.get(YEAR));\n        dateMoment.set('month', this.get(MONTH) - 1);\n        dateMoment.set('date', this.get(DAY));\n        dateMoment.set('hour', this.get(HOUR));\n        dateMoment.set('minute', this.get(MINUTE));\n        dateMoment.set('second', this.get(SECOND));\n        dateMoment.set('millisecond', this.get(MILLISECOND));\n\n        // Javascript Date Object return minus timezone offset\n        const currentTimezoneOffset: number = dateMoment.utcOffset();\n        const targetTimezoneOffset: number = this.get(TIMEZONE_OFFSET, currentTimezoneOffset);\n\n        const adjustTimezoneOffset = targetTimezoneOffset - currentTimezoneOffset;\n\n        dateMoment.add(-adjustTimezoneOffset, 'minutes');\n\n        return dateMoment;\n    }\n}","import {NameMap, UnitOfTime, UnitRegexMap} from \"../constants\";\n\nexport const WEEKDAY_OFFSET: NameMap = {\n    'sonntag': 0,\n    'so': 0,\n    'montag': 1,\n    'mo': 1,\n    'dienstag': 2,\n    'di': 2,\n    'mittwoch': 3,\n    'mi': 3,\n    'donnerstag': 4,\n    'do': 4,\n    'freitag': 5,\n    'fr': 5,\n    'samstag': 6,\n    'sa': 6\n};\n\n// noinspection NonAsciiCharacters, JSNonASCIINames\nexport const MONTH_OFFSET: NameMap = {\n    'januar': 1,\n    'jan': 1,\n    'jan.': 1,\n    'februar': 2,\n    'feb': 2,\n    'feb.': 2,\n    'märz': 3,\n    'maerz': 3,\n    'mär': 3,\n    'mär.': 3,\n    'mrz': 3,\n    'mrz.': 3,\n    'april': 4,\n    'apr': 4,\n    'apr.': 4,\n    'mai': 5,\n    'juni': 6,\n    'jun': 6,\n    'jun.': 6,\n    'juli': 7,\n    'jul': 7,\n    'jul.': 7,\n    'august': 8,\n    'aug': 8,\n    'aug.': 8,\n    'september': 9,\n    'sep': 9,\n    'sep.': 9,\n    'sept': 9,\n    'sept.': 9,\n    'oktober': 10,\n    'okt': 10,\n    'okt.': 10,\n    'november': 11,\n    'nov': 11,\n    'nov.': 11,\n    'dezember': 12,\n    'dez': 12,\n    'dez.': 12\n};\n\nexport const INTEGER_WORDS_PATTERN: string = '(?:eins|zwei|drei|vier|fünf|fuenf|sechs|sieben|acht|neun|zehn|elf|zwölf|zwoelf)';\n// noinspection NonAsciiCharacters, JSNonASCIINames\nexport const INTEGER_WORDS: NameMap = {\n    'eins': 1,\n    'zwei': 2,\n    'drei': 3,\n    'vier': 4,\n    'fünf': 5,\n    'fuenf': 5,\n    'sechs': 6,\n    'sieben': 7,\n    'acht': 8,\n    'neun': 9,\n    'zehn': 10,\n    'elf': 11,\n    'zwölf': 12,\n    'zwoelf': 12\n};\n\nconst V_REGEX: RegExp = /v/i;\n\nexport const yearCalculation = (year: string, yearBe: string): number | null => {\n    if (year) {\n        let result: number = parseInt(year, 10);\n\n        if (yearBe) {\n            if (V_REGEX.test(yearBe)) {\n                // v.Chr.\n                result = -result;\n            }\n\n            return result;\n        } else {\n            if (result < 100) {\n                result = result + 2000;\n            }\n            return result;\n        }\n    }\n\n    return null;\n};\n\nconst HALF_REGEX: RegExp = /halben/;\n\nexport const matchInteger = (text: string): number => {\n    let num: number = 0;\n    if (INTEGER_WORDS.hasOwnProperty(text)) {\n        num = INTEGER_WORDS[text];\n    } else if (text === 'einer' || text === 'einem') {\n        num = 1;\n    } else if (text === 'einigen') {\n        num = 3;\n    } else if (HALF_REGEX.test(text)) {\n        num = 0.5;\n    } else {\n        num = parseInt(text, 10);\n    }\n\n    return num;\n};\n\nconst unitPatterns: UnitRegexMap = {\n    'hour': /stunde/,\n    'minute': /min/,\n    'second': /sekunde/,\n    'week': /woche/,\n    'day': /tag/,\n    'month': /monat/,\n    'year': /jahr/\n};\n\nexport const matchUnit = (text: string): UnitOfTime | undefined => (Object.keys(unitPatterns) as UnitOfTime[]).find(\n    (unit: UnitOfTime): boolean => unitPatterns[unit]!.test(text)\n);","import {NameMap, UnitOfTime, UnitRegexMap} from \"../constants\";\n\nexport const WEEKDAY_OFFSET: NameMap = {\n    'sunday': 0,\n    'sun': 0,\n    'monday': 1,\n    'mon': 1,\n    'tuesday': 2,\n    'tue': 2,\n    'wednesday': 3,\n    'wed': 3,\n    'thursday': 4,\n    'thur': 4,\n    'thurs': 4,\n    'thu': 4,\n    'friday': 5,\n    'fri': 5,\n    'saturday': 6,\n    'sat': 6\n};\n\nexport const MONTH_OFFSET: NameMap = {\n    'january': 1,\n    'jan': 1,\n    'jan.': 1,\n    'february': 2,\n    'feb': 2,\n    'feb.': 2,\n    'march': 3,\n    'mar': 3,\n    'mar.': 3,\n    'april': 4,\n    'apr': 4,\n    'apr.': 4,\n    'may': 5,\n    'june': 6,\n    'jun': 6,\n    'jun.': 6,\n    'july': 7,\n    'jul': 7,\n    'jul.': 7,\n    'august': 8,\n    'aug': 8,\n    'aug.': 8,\n    'september': 9,\n    'sep': 9,\n    'sep.': 9,\n    'sept': 9,\n    'sept.': 9,\n    'october': 10,\n    'oct': 10,\n    'oct.': 10,\n    'november': 11,\n    'nov': 11,\n    'nov.': 11,\n    'december': 12,\n    'dec': 12,\n    'dec.': 12\n};\n\nexport const INTEGER_WORDS: NameMap = {\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9,\n    'ten': 10,\n    'eleven': 11,\n    'twelve': 12\n};\n\nexport const INTEGER_WORDS_PATTERN: string = '(?:'\n    + Object.keys(INTEGER_WORDS).join('|')\n    + ')';\n\nexport const ORDINAL_WORDS: NameMap = {\n    'first': 1,\n    'second': 2,\n    'third': 3,\n    'fourth': 4,\n    'fifth': 5,\n    'sixth': 6,\n    'seventh': 7,\n    'eighth': 8,\n    'ninth': 9,\n    'tenth': 10,\n    'eleventh': 11,\n    'twelfth': 12,\n    'thirteenth': 13,\n    'fourteenth': 14,\n    'fifteenth': 15,\n    'sixteenth': 16,\n    'seventeenth': 17,\n    'eighteenth': 18,\n    'nineteenth': 19,\n    'twentieth': 20,\n    'twenty first': 21,\n    'twenty second': 22,\n    'twenty third': 23,\n    'twenty fourth': 24,\n    'twenty fifth': 25,\n    'twenty sixth': 26,\n    'twenty seventh': 27,\n    'twenty eighth': 28,\n    'twenty ninth': 29,\n    'thirtieth': 30,\n    'thirty first': 31\n};\nexport const ORDINAL_WORDS_PATTERN: string = '(?:'\n    + Object.keys(ORDINAL_WORDS).join('|').replace(/ /g, '[ -]')\n    + ')';\n\nconst TIME_UNIT: string =\n    '(' + INTEGER_WORDS_PATTERN + '|[0-9]+|an?(?:\\\\s*few)?|half(?:\\\\s*an?)?)\\\\s*' +\n    '(sec(?:onds?)?|min(?:ute)?s?|hours?|weeks?|days?|months?|years?)\\\\s*';\n\nconst TIME_UNIT_STRICT: string =\n    '([0-9]+|an?)\\\\s*' +\n    '(seconds?|minutes?|hours?|days?)\\\\s*';\n\nconst PATTERN_TIME_UNIT: RegExp = new RegExp(TIME_UNIT, 'i');\n\nexport const TIME_UNIT_PATTERN: string = '(?:' + TIME_UNIT + ')+';\nexport const TIME_UNIT_STRICT_PATTERN: string = '(?:' + TIME_UNIT_STRICT + ')+';\n\nexport type FragmentName = 'hour' |\n    'minute' |\n    'second' |\n    'week' |\n    'd' |\n    'month' |\n    'year';\n\nexport type FragmentMap = {\n    [k in FragmentName]?: number\n}\n\nexport const extractDateTimeUnitFragments = (timeunitText: string): FragmentMap => {\n    const fragments: FragmentMap = {};\n    let remainingText: string = timeunitText;\n    let match: RegExpExecArray | null = PATTERN_TIME_UNIT.exec(remainingText);\n    while (match) {\n        collectDateTimeFragment(match, fragments);\n        remainingText = remainingText.substring(match[0].length);\n        match = PATTERN_TIME_UNIT.exec(remainingText);\n    }\n    return fragments;\n};\n\nfunction collectDateTimeFragment(match: RegExpExecArray, fragments: FragmentMap) {\n    const matchedNumber = match[1].toLowerCase();\n    const matchedUnit = match[2].toLowerCase();\n    let num: number = 0;\n    if (INTEGER_WORDS.hasOwnProperty(matchedNumber)) {\n        num = INTEGER_WORDS[matchedNumber];\n    } else if (matchedNumber === 'a' || matchedNumber === 'an') {\n        num = 1;\n    } else if (matchedNumber.match(/few/)) {\n        num = 3;\n    } else if (matchedNumber.match(/half/)) {\n        num = 0.5;\n    } else {\n        num = parseInt(matchedNumber, 10);\n    }\n\n    if (matchedUnit.match(/hour/)) {\n        fragments['hour'] = num;\n    } else if (matchedUnit.match(/min/)) {\n        fragments['minute'] = num;\n    } else if (matchedUnit.match(/sec/)) {\n        fragments['second'] = num;\n    } else if (matchedUnit.match(/week/)) {\n        fragments['week'] = num;\n    } else if (matchedUnit.match(/day/)) {\n        fragments['d'] = num;\n    } else if (matchedUnit.match(/month/)) {\n        fragments['month'] = num;\n    } else if (matchedUnit.match(/year/)) {\n        fragments['year'] = num;\n    }\n\n    return fragments;\n}\n\nconst HALF_REGEX: RegExp = /half/;\nconst FEW_REGEX: RegExp = /few/;\n\nexport const matchInteger = (text: string): number => {\n    let num: number = 0;\n    if (text) {\n        if (INTEGER_WORDS.hasOwnProperty(text)) {\n            num = INTEGER_WORDS[text];\n        } else if (text === 'a' || text === 'an') {\n            num = 1;\n        } else if (text.match(FEW_REGEX)) {\n            num = 3;\n        } else if (text.match(HALF_REGEX)) {\n            num = 0.5;\n        } else {\n            num = parseInt(text, 10);\n        }\n    }\n\n    return num;\n};\n\nconst unitPatterns: UnitRegexMap = {\n    'hour': /hour/,\n    'minute': /min/,\n    'second': /second/,\n    'week': /week/,\n    'day': /day/,\n    'month': /month/,\n    'year': /year/\n};\n\nexport const matchUnit = (text: string): UnitOfTime | undefined => (Object.keys(unitPatterns) as UnitOfTime[]).find(\n    (unit: UnitOfTime): boolean => unitPatterns[unit]!.test(text)\n);\n\nconst BE_REGEX: RegExp = /BE/i;\nconst BC_REGEX: RegExp = /BC/i;\nconst AD_REGEX: RegExp = /AD/i;\n\nexport const yearCalculation = (year: string, maybeYearBe?: string): number | null => {\n    if (year) {\n        if (BE_REGEX.test(maybeYearBe || year)) {\n            // Buddhist Era\n            return parseInt(maybeYearBe ? year : year.replace(BE_REGEX, ''), 10) - 543;\n        } else if (BC_REGEX.test(maybeYearBe || year)){\n            // Before Christ\n            return -parseInt(maybeYearBe ? year : year.replace(BC_REGEX, ''), 10);\n        } else if (AD_REGEX.test(maybeYearBe || year)){\n            return parseInt(maybeYearBe ? year : year.replace(AD_REGEX, ''), 10);\n        } else {\n            let result: number = parseInt(year, 10);\n            if (result < 100){\n                result += 2000;\n            }\n\n            return result;\n        }\n    }\n\n    return null;\n};","import {NameMap, UnitOfTime, UnitRegexMap} from \"../constants\";\n\n// noinspection NonAsciiCharacters, JSNonASCIINames\nexport const WEEKDAY_OFFSET: NameMap = {\n    'domingo': 0,\n    'dom': 0,\n    'lunes': 1,\n    'lun': 1,\n    'martes': 2,\n    'mar': 2,\n    'miércoles': 3,\n    'miercoles': 3,\n    'mie': 3,\n    'jueves': 4,\n    'jue': 4,\n    'viernes': 5,\n    'vie': 5,\n    'sábado': 6,\n    'sabado': 6,\n    'sab': 6,\n};\n// noinspection NonAsciiCharacters, JSNonASCIINames\nexport const MONTH_OFFSET: NameMap = {\n    'enero': 1,\n    'ene': 1,\n    'ene.': 1,\n    'febrero': 2,\n    'feb': 2,\n    'feb.': 2,\n    'marzo': 3,\n    'mar': 3,\n    'mar.': 3,\n    'abril': 4,\n    'abr': 4,\n    'abr.': 4,\n    'mayo': 5,\n    'may': 5,\n    'may.': 5,\n    'junio': 6,\n    'jun': 6,\n    'jun.': 6,\n    'julio': 7,\n    'jul': 7,\n    'jul.': 7,\n    'agosto': 8,\n    'ago': 8,\n    'ago.': 8,\n    'septiembre': 9,\n    'sep': 9,\n    'sept': 9,\n    'sep.': 9,\n    'sept.': 9,\n    'octubre': 10,\n    'oct': 10,\n    'oct.': 10,\n    'noviembre': 11,\n    'nov': 11,\n    'nov.': 11,\n    'diciembre': 12,\n    'dic': 12,\n    'dic.': 12,\n};\n\nconst unitPatterns: UnitRegexMap = {\n    day: /d[ií]a/,\n    hour: /hora/,\n    minute: /minuto/,\n    week: /semana/,\n    month: /mes/,\n    year: /año/\n};\n\nexport const matchUnit = (text: string): UnitOfTime | undefined => (Object.keys(unitPatterns) as UnitOfTime[]).find(\n    (unit: UnitOfTime): boolean => unitPatterns[unit]!.test(text)\n);\n\nconst AD_REGEX: RegExp = /a\\.?\\s*c\\.?/i;\n\nexport const yearCalculation = (year: string, yearBe: string): number | null => {\n    if (year) {\n        let result: number = parseInt(year, 10);\n        if (yearBe && AD_REGEX.test(yearBe)) {\n            return -result;\n        } else if (!yearBe) {\n            if (result < 100) {\n                return result + 2000;\n            } else {\n                return result;\n            }\n        } else {\n            return result;\n        }\n    }\n\n    return null;\n};\n\nconst HALF_REGEX: RegExp = /medi/;\n\nexport const matchNumber = (text: string): number => {\n    const num: number = parseInt(text, 10);\n    if (isNaN(num)) {\n        if (text.match(HALF_REGEX)) {\n            return 0.5;\n        } else {\n            return 1;\n        }\n    }\n\n    return num\n};","import {NameMap, UnitOfTime, UnitRegexMap} from \"../constants\";\n\nexport const WEEKDAY_OFFSET: NameMap = {\n    'dimanche': 0,\n    'dim': 0,\n    'lundi': 1,\n    'lun': 1,\n    'mardi': 2,\n    'mar': 2,\n    'mercredi': 3,\n    'mer': 3,\n    'jeudi': 4,\n    'jeu': 4,\n    'vendredi': 5,\n    'ven': 5,\n    'samedi': 6,\n    'sam': 6\n};\n\n// noinspection NonAsciiCharacters, JSNonASCIINames\nexport const MONTH_OFFSET: NameMap = {\n    'janvier': 1,\n    'jan': 1,\n    'jan.': 1,\n    'février': 2,\n    'fév': 2,\n    'fév.': 2,\n    'fevrier': 2,\n    'fev': 2,\n    'fev.': 2,\n    'mars': 3,\n    'mar': 3,\n    'mar.': 3,\n    'avril': 4,\n    'avr': 4,\n    'avr.': 4,\n    'mai': 5,\n    'juin': 6,\n    'jun': 6,\n    'juil': 7,\n    'juillet': 7,\n    'jul': 7,\n    'jul.': 7,\n    'août': 8,\n    'aout': 8,\n    'septembre': 9,\n    'sep': 9,\n    'sep.': 9,\n    'sept': 9,\n    'sept.': 9,\n    'octobre': 10,\n    'oct': 10,\n    'oct.': 10,\n    'novembre': 11,\n    'nov': 11,\n    'nov.': 11,\n    'décembre': 12,\n    'decembre': 12,\n    'dec': 12,\n    'dec.': 12\n};\n\nexport const INTEGER_WORDS_PATTERN: string = '(?:un|deux|trois|quatre|cinq|six|sept|huit|neuf|dix|onze|douze|treize)';\nexport const INTEGER_WORDS: NameMap = {\n    'un': 1,\n    'deux': 2,\n    'trois': 3,\n    'quatre': 4,\n    'cinq': 5,\n    'six': 6,\n    'sept': 7,\n    'huit': 8,\n    'neuf': 9,\n    'dix': 10,\n    'onze': 11,\n    'douze': 12,\n    'treize': 13,\n};\n\nconst unitPatterns: UnitRegexMap = {\n    day: /jours?/,\n    hour: /heures?/,\n    minute: /min(?:ute)?s?/,\n    second: /secondes?/,\n    week: /semaines?/,\n    month: /mois?/,\n    year: /an(?:née)?s?/\n};\n\nexport const matchUnit = (text: string): UnitOfTime | undefined => (Object.keys(unitPatterns) as UnitOfTime[]).find(\n    (unit: UnitOfTime): boolean => unitPatterns[unit]!.test(text)\n);\n\nconst THREE_REGEX: RegExp = /quelques?/;\nconst HALF_REGEX: RegExp = /demi-?/;\n\nexport const matchNumber = (text: string): number => {\n    if (!text) {\n        return 1;\n    }\n    if (INTEGER_WORDS.hasOwnProperty(text)) {\n        return INTEGER_WORDS[text];\n    } else if (text === 'un' || text === 'une'){\n        return 1;\n    } else if (text.match(THREE_REGEX)) {\n        return 3;\n    } else if (text.match(HALF_REGEX)) {\n        return 0.5;\n    }\n\n    const num: number = parseInt(text, 10);\n    if (isNaN(num)) {\n        return 1;\n    }\n\n    return num;\n};\n\nconst AD_REGEX: RegExp = /a/i;\n\nexport const yearCalculation = (year: string, yearBe: string): number | null => {\n    if (year) {\n        let result: number = parseInt(year, 10);\n        if (yearBe && AD_REGEX.test(yearBe)) {\n            return -result;\n        } else if (!yearBe) {\n            if (result < 100) {\n                return result + 2000;\n            } else {\n                return result;\n            }\n        } else {\n            return result;\n        }\n    }\n\n    return null;\n};","/**\n * to-hankaku.js\n * convert to ascii code strings.\n *\n * @version 1.0.1\n * @author think49\n * @url https://gist.github.com/964592\n * @license http://www.opensource.org/licenses/mit-license.php (The MIT License)\n */\n\nexport const toHankaku: (s: string) => string = (\n    (String: StringConstructor, fromCharCode: (n: number) => string) => {\n        const alphaNum = (token: string): string => {\n            return fromCharCode(token.charCodeAt(0) - 65248);\n        };\n\n        return (string: string): string => {\n            return String(string)\n                .replace(/\\u2019/g, '\\u0027')\n                .replace(/\\u201D/g, '\\u0022')\n                .replace(/\\u3000/g, '\\u0020')\n                .replace(/\\uFFE5/g, '\\u00A5')\n                .replace(/[\\uFF01\\uFF03-\\uFF06\\uFF08\\uFF09\\uFF0C-\\uFF19\\uFF1C-\\uFF1F\\uFF21-\\uFF3B\\uFF3D\\uFF3F\\uFF41-\\uFF5B\\uFF5D\\uFF5E]/g, alphaNum);\n        };\n    }\n)(String, String.fromCharCode);\n\n/**\n * to-zenkaku.js\n * convert to multi byte strings.\n *\n * @version 1.0.2\n * @author think49\n * @url https://gist.github.com/964592\n * @license http://www.opensource.org/licenses/mit-license.php (The MIT License)\n */\nexport const toZenkaku: (s: string) => string = (\n    (String: StringConstructor, fromCharCode: (n: number) => string) => {\n        const alphaNum = (token: string): string => {\n            return fromCharCode(token.charCodeAt(0) + 65248);\n        };\n\n        return (string: string): string => {\n            return String(string)\n                .replace(/\\u0020/g, '\\u3000')\n                .replace(/\\u0022/g, '\\u201D')\n                .replace(/\\u0027/g, '\\u2019')\n                .replace(/\\u00A5/g, '\\uFFE5')\n                .replace(/[!#-&(),-9\\u003C-?A-[\\u005D_a-{}~]/g, alphaNum);\n        };\n    }\n)(String, String.fromCharCode);","import {NameMap} from \"../constants\";\n\n// noinspection NonAsciiCharacters\nexport const NUMBER: NameMap = {\n    '零': 0,\n    '一': 1,\n    '二': 2,\n    '兩': 2,\n    '三': 3,\n    '四': 4,\n    '五': 5,\n    '六': 6,\n    '七': 7,\n    '八': 8,\n    '九': 9,\n    '十': 10,\n    '廿': 20,\n    '卅': 30,\n};\n\n// noinspection NonAsciiCharacters\nexport const WEEKDAY_OFFSET: NameMap = {\n    '天': 0,\n    '日': 0,\n    '一': 1,\n    '二': 2,\n    '三': 3,\n    '四': 4,\n    '五': 5,\n    '六': 6,\n};\n\nexport const zhStringToNumber = (text: string): number => {\n    const len: number = text.length;\n    let number: number = 0;\n    let i: number = 0;\n    for (;i < len;i++) {\n        let char: string = text[i];\n        if (char === '十') {\n            number = number === 0 ? NUMBER[char] : (number * NUMBER[char]);\n        } else {\n            number += NUMBER[char];\n        }\n    }\n    return number;\n};\n\nexport const zhStringToYear = (text: string): number => {\n    const len: number = text.length;\n    let string: string = '';\n    let i: number = 0;\n    for (; i < len; i++) {\n        string = string + NUMBER[text[i]];\n    }\n\n    return parseInt(string, 10);\n};\n","import * as moment from \"moment\";\nimport {Moment} from \"moment\";\nimport {DAY, HOUR, MINUTE, MONTH, SECOND, UnitOfTime, WEEK, WEEKDAY, YEAR} from \"../constants\";\nimport {ParsedComponents, ParsedResult} from \"../result\";\n\nexport const getAppropriateYear = (current: ParsedComponents, ref: Date): void => {\n    const day: number = current.get(DAY, -1);\n    const month: number = current.get(MONTH, -1);\n    if (day !== -1 && month !== -1) {\n        //Find the most appropriated year\n        const refMoment: Moment = moment(ref);\n        const refMomentClone: Moment = refMoment.clone();\n        refMoment.month(month - 1);\n        refMoment.date(day);\n\n        const nextYear: Moment = refMoment.clone().add(1, 'y');\n        const lastYear: Moment = refMoment.clone().add(-1, 'y');\n        const diff: number = Math.abs(refMoment.diff(refMomentClone));\n        if (Math.abs(nextYear.diff(refMomentClone)) < diff) {\n            current.imply(YEAR, nextYear.year());\n        } else if (Math.abs(lastYear.diff(refMomentClone)) < diff) {\n            current.imply(YEAR, lastYear.year());\n        } else {\n            current.imply(YEAR, refMoment.year());\n        }\n    }\n};\n\nenum DeadlineMode {\n    TIME,\n    DATE,\n    NONE,\n}\n\nexport const deadlineCalculations = (num: number, unit: UnitOfTime, result: ParsedResult, momentRef: Moment): boolean => {\n    let mode: DeadlineMode = DeadlineMode.NONE;\n    switch (unit) {\n        case HOUR:\n            momentRef.add(num, 'hour');\n            mode = DeadlineMode.TIME;\n            break;\n        case MINUTE:\n            momentRef.add(num, 'minute');\n            mode = DeadlineMode.TIME;\n            break;\n        case SECOND:\n            momentRef.add(num, 'second');\n            mode = DeadlineMode.TIME;\n            break;\n        case DAY:\n            momentRef.add(num, 'd');\n            mode = DeadlineMode.DATE;\n            break;\n        case MONTH:\n            momentRef.add(num, 'month');\n            mode = DeadlineMode.DATE;\n            break;\n        case YEAR:\n            momentRef.add(num, 'year');\n            mode = DeadlineMode.DATE;\n            break;\n        case WEEK:\n            momentRef.add(num * 7, 'd');\n            mode = DeadlineMode.DATE;\n            break;\n    }\n\n    if (mode !== DeadlineMode.NONE) {\n        switch (mode) {\n            case DeadlineMode.DATE:\n                result.start.assign(YEAR, momentRef.year());\n                result.start.assign(MONTH, momentRef.month() + 1);\n                result.start.assign(DAY, momentRef.date());\n                break;\n            case DeadlineMode.TIME:\n                result.start.imply(YEAR, momentRef.year());\n                result.start.imply(MONTH, momentRef.month() + 1);\n                result.start.imply(DAY, momentRef.date());\n                result.start.assign(HOUR, momentRef.hour());\n                result.start.assign(MINUTE, momentRef.minute());\n                result.start.assign(SECOND, momentRef.second());\n                break;\n        }\n\n        return true;\n    }\n\n    return false;\n};\n\nexport const checkMonthDaysValid = (day: number, month: number, year: number): boolean => {\n    return day <= moment().date(1).month(month).year(year).daysInMonth();\n};\n\nexport enum Modifier {\n    LAST,\n    THIS,\n    NEXT,\n    UNKNOWN\n}\n\nexport const updateParsedComponent = (result: ParsedResult, ref: Date, offset: number, modifier: Modifier) => {\n    const startMoment: Moment = moment(ref);\n    const refOffset: number = startMoment.day();\n    let startMomentFixed: boolean = false;\n\n    if (modifier === Modifier.LAST) {\n        startMoment.day(offset - 7);\n        startMomentFixed = true;\n    } else if (modifier === Modifier.NEXT) {\n        startMoment.day(offset + 7);\n        startMomentFixed = true;\n    }  else if (modifier == Modifier.THIS) {\n        startMoment.day(offset);\n    } else {\n        const calcOffset = offset - refOffset;\n        const absOffset = Math.abs(calcOffset);\n        if (Math.abs(calcOffset - 7) < absOffset) {\n            startMoment.day(offset - 7);\n        } else if (Math.abs(calcOffset + 7) < absOffset) {\n            startMoment.day(offset + 7);\n        } else {\n            startMoment.day(offset);\n        }\n    }\n\n    result.start.assign(WEEKDAY, offset);\n\n    if (startMomentFixed) {\n        result.start.assign(DAY, startMoment.date());\n        result.start.assign(MONTH, startMoment.month() + 1);\n        result.start.assign(YEAR, startMoment.year());\n    } else {\n        result.start.imply(DAY, startMoment.date());\n        result.start.imply(MONTH, startMoment.month() + 1);\n        result.start.imply(YEAR, startMoment.year());\n    }\n};"]}